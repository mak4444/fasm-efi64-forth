;/
;/REQUIRE DUPENDCASE ~mak/case.f
;/
;/\- M_WL : M_WL CS-DUP POSTPONE WHILE ; IMMEDIATE
;/
;/\- C>S : C>S ( c -- n )  $FF AND $80 XOR $80 - ;
;/\- L>S : L>S ( c -- n )  $FFFFFFFF AND $80000000 XOR $80000000 - ;
;/
;/\- -CELL  -1 CELLS CONSTANT -CELL
;/
;/\- ANDC : ANDC	INVERT AND ;
;/\-  XOR! : XOR!	DUP @ ROT XOR SWAP ! ;
;/
;/\- 4* : 4* 2 << ;
;/\- 3+ : 3+ 2+ 1+ ;
;/
;/\- M@ : M@ @ ;
;/\- THERE : THERE HERE ;
;/\- TBASE BASE CONSTANT TBASE
;/\- SHORT? : SHORT? ( n -- -128 < n < 127 )  0x80 + 0x100 U< ;
;/\- LONG? : LONG? ( n -- -2147483648<n<2147483647 )
;/\- LONG? $80000000 + $100000000 U< ;
;/\- HH. : HH. H. ;
;/\- OPTVALNEED -1 VALUE OPTVALNEED
;/
;/0 VALUE J_COD  \ код для Jx, он же признак ?BRANCH

_J_COD:
	call	_DOVALUE	; 80405ADF E8 0 EC FF FF 

	DQ 0x0
;/
;/TBASE M@ HEX
;/
;/OPTVALNEED
;/[IF]
;/0 VALUE MO_TST_VAL

_MO_TST_VAL:
	call	_DOVALUE	; 80405AEC E8 F3 EB FF FF 

	DQ 0x0
;/
;/   TRUE VALUE OPT?

_OPTque:
	call	_DOVALUE	; 80405AF9 E8 E6 EB FF FF 

	DQ 0xFFFFFFFFFFFFFFFF
;/
;/0x20 VALUE MM_SIZE

_MM_SIZE:
	call	_DOVALUE	; 80405B06 E8 D9 EB FF FF 

	DQ 0x20
;/
;/0 VALUE OFF-EBP

_OFFsubEBP:
	call	_DOVALUE	; 80405B13 E8 CC EB FF FF 

	DQ 0x0
;/
;/0 VALUE OFF-EAX

_OFFsubEAX:
	call	_DOVALUE	; 80405B20 E8 BF EB FF FF 

	DQ 0x0
;/
;/0 VALUE TOFF-PSP

_TOFFsubPSP:
	call	_DOVALUE	; 80405B2D E8 B2 EB FF FF 

	DQ 0x0
;/
;/0 VALUE LAST-HERE

_LASTsubHERE:
	call	_DOVALUE	; 80405B3A E8 A5 EB FF FF 

	DQ 0x0
;/
;/$22 CELLS DUP CONSTANT OpBuffSize
;/
;/CREATE OP0 2 CELLS + ALLOT
	DQ 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
;/' OP0 T>BODY
;/CELL+ DUP CONSTANT OP1
;/CELL+ DUP CONSTANT OP2
;/CELL+ DUP CONSTANT OP3
;/CELL+ DUP CONSTANT OP4
;/CELL+ DUP CONSTANT OP5
;/CELL+ DUP CONSTANT OP6
;/CELL+ DUP CONSTANT OP7
;/CELL+ DUP CONSTANT OP8
;/DROP
;/
;/0 VALUE :-SET

_dcomasubSET:
	call	_DOVALUE	; 80405C67 E8 78 EA FF FF 

	DQ 0x0
;/
;/[THEN]
;/
;/: SET-OPT TRUE TO OPT? ;

_SETsubOPT:
;/*	movq	$-0x1,_OPTque+0x5 (%rip)	; 80405C74 
	DB 0x48,0xC7,0x5,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
	ret		; 80405C7F C3 
;/
;/: DIS-OPT FALSE TO OPT? ;


_DISsubOPT:
;/*	movq	$0x0,_OPTque+0x5 (%rip)	; 80405C80 
	DB 0x48,0xC7,0x5,0x73,0xFE,0xFF,0xFF,0x0,0x0,0x0,0x0
	ret		; 80405C8B C3 
;/
;/0 VALUE OP0@


_OP0load:
	call	_DOVALUE	; 80405C8C E8 53 EA FF FF 

	DQ 0x0
;/0 VALUE OP1@

_OP1load:
	call	_DOVALUE	; 80405C99 E8 46 EA FF FF 

	DQ 0x0
;/0 VALUE OP2@

_OP2load:
	call	_DOVALUE	; 80405CA6 E8 39 EA FF FF 

	DQ 0x0
;/0 VALUE OP3@

_OP3load:
	call	_DOVALUE	; 80405CB3 E8 2C EA FF FF 

	DQ 0x0
;/0 VALUE OP4@

_OP4load:
	call	_DOVALUE	; 80405CC0 E8 1F EA FF FF 

	DQ 0x0
;/0 VALUE OP5@

_OP5load:
	call	_DOVALUE	; 80405CCD E8 12 EA FF FF 

	DQ 0x0
;/
;/: OPLast OP0 OpBuffSize + CELL- ;

_OPLast:
;/*	mov	rax,-0x08(rbp)	; 80405CDA 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0x115 (%rip),rax	; 80405CDE 
	DB 0x48,0x8D,0x5,0x6A,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80405CE5 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 80405CE9 C3 
;/
;/: ?OPlast  ( OPX -- OPX flag )
;/     DUP OPLast CELL- U> ;


_queOPlast:
;/*	mov	rax,-0x08(rbp)	; 80405CEA 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	rax,-0x10(rbp)	; 80405CEE 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_LASTsubHERE+0x10D (%rip),rax	; 80405CF2 
	DB 0x48,0x8D,0x5,0x4E,0xFF,0xFF,0xFF
;/*	cmp	-0x10(rbp),rax	; 80405CF9 
	DB 0x48,0x3B,0x45,0xF0
;/*	sbb	rax,rax	; 80405CFD 
	DB 0x48,0x19,0xC0
;/*	lea	-0x08(rbp),rbp	; 80405D00 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 80405D04 C3 
;/
;/: SetOP ( -- )
;/ THERE OP0 @ = IF -8FD THROW THEN \ -2301 THROW \ do not alow OP1 be the same as OP0


_SetOP:
;/*	mov	rax,-0x08(rbp)	; 80405D05 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_HsubSTDOUT+0x18 (%rip),rax	; 80405D09 
	DB 0x48,0x8B,0x5,0xC,0xEF,0xFF,0xFF
;/*	xor	_LASTsubHERE+0xD (%rip),rax	; 80405D10 
	DB 0x48,0x33,0x5,0x30,0xFE,0xFF,0xFF
;/*	sub	$0x01,rax	; 80405D17 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80405D1B 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80405D1E 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80405D21 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_SetOP+0x3A 	; 80405D25 
	DB 0xF,0x84,0x14,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80405D2B 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x8FD,rax	; 80405D2F 
	DB 0x48,0xC7,0xC0,0x3,0xF7,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80405D36 
	DB 0x48,0x8D,0x6D,0xF8
	call	_THROW	; 80405D3A E8 4B FC FF FF 
;/ OP0 OP1 OpBuffSize CELL- CMOVE>
;/*	mov	rax,-0x08(rbp)	; 80405D3F 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 80405D43 
	DB 0x48,0x8D,0x5,0xFD,0xFD,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 80405D4A 
	DB 0x48,0x89,0x45,0xF0
;/*	movq	$0x44C539,-0x18(rbp)	; 80405D4E 
	DB 0x48,0xC7,0x45,0xE8,0x39,0xC5,0x44,0x0
;/*	mov	$0x108,eax	; 80405D56 
	DB 0xB8,0x8,0x1,0x0,0x0
;/*	lea	-0x18(rbp),rbp	; 80405D5B 
	DB 0x48,0x8D,0x6D,0xE8
	call	_CMOVEgreat	; 80405D5F E8 45 E9 FF FF 
;/ THERE OP0 !
;/*	mov	rax,-0x08(rbp)	; 80405D64 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_HsubSTDOUT+0x18 (%rip),rax	; 80405D68 
	DB 0x48,0x8B,0x5,0xAD,0xEE,0xFF,0xFF
;/*	mov	rax,_LASTsubHERE+0xD (%rip)	; 80405D6F 
	DB 0x48,0x89,0x5,0xD1,0xFD,0xFF,0xFF
;/*	mov	-0x08(rbp),rax	; 80405D76 
	DB 0x48,0x8B,0x45,0xF8
;/;
	ret		; 80405D7A C3 
;/
;/: ToOP0 ( OPn -- )
;/     OP0 OpBuffSize CELL- CMOVE ;


_ToOP0:
;/*	mov	rax,-0x08(rbp)	; 80405D7B 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 80405D7F 
	DB 0x48,0x8D,0x5,0xC1,0xFD,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 80405D86 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x108,eax	; 80405D8A 
	DB 0xB8,0x8,0x1,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 80405D8F 
	DB 0x48,0x8D,0x6D,0xF0
	call	_CMOVE	; 80405D93 E8 35 E9 FF FF 
	ret		; 80405D98 C3 
;/
;/: ?SET THERE


_queSET:
;/*	mov	rax,-0x08(rbp)	; 80405D99 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_HsubSTDOUT+0x18 (%rip),rax	; 80405D9D 
	DB 0x48,0x8B,0x5,0x78,0xEE,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 80405DA4 
	DB 0x48,0x89,0x45,0xF0
;/	DUP LAST-HERE
;/*	xor	_LASTsubHERE+0x5 (%rip),rax	; 80405DA8 
	DB 0x48,0x33,0x5,0x90,0xFD,0xFF,0xFF
	test	rax,rax	; 80405DAF 48 85 C0 
;/*	mov	-0x10(rbp),rax	; 80405DB2 
	DB 0x48,0x8B,0x45,0xF0
;/*	lea	-0x08(rbp),rbp	; 80405DB6 
	DB 0x48,0x8D,0x6D,0xF8
;/ XOR IF DUP TO :-SET THEN
;/*	jz	_queSET+0x2E 	; 80405DBA 
	DB 0xF,0x84,0x7,0x0,0x0,0x0
;/*	mov	rax,_dcomasubSET+0x5 (%rip)	; 80405DC0 
	DB 0x48,0x89,0x5,0xA5,0xFE,0xFF,0xFF
;/	DUP    OP0 @ U< IF OP0 0! THEN
;/*	mov	rax,-0x08(rbp)	; 80405DC7 
	DB 0x48,0x89,0x45,0xF8
;/*	cmp	_LASTsubHERE+0xD (%rip),rax	; 80405DCB 
	DB 0x48,0x3B,0x5,0x75,0xFD,0xFF,0xFF
;/*	sbb	rax,rax	; 80405DD2 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80405DD5 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80405DD8 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_queSET+0x54 	; 80405DDC 
	DB 0xF,0x84,0xB,0x0,0x0,0x0
;/*	movq	$0x0,_LASTsubHERE+0xD (%rip)	; 80405DE2 
	DB 0x48,0xC7,0x5,0x5A,0xFD,0xFF,0xFF,0x0,0x0,0x0,0x0
;/	DUP    OP1 @ U< IF OP1 0! THEN
;/*	mov	rax,-0x08(rbp)	; 80405DED 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	rax,-0x10(rbp)	; 80405DF1 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x44C539,eax	; 80405DF5 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	mov	(rax),rax	; 80405DFA 
	DB 0x48,0x8B,0x0
;/*	cmp	rax,-0x10(rbp)	; 80405DFD 
	DB 0x48,0x39,0x45,0xF0
;/*	sbb	rax,rax	; 80405E01 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80405E04 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80405E07 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_queSET+0x8C 	; 80405E0B 
	DB 0xF,0x84,0x14,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80405E11 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 80405E15 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	movq	$0x0,(rax)	; 80405E1A 
	DB 0x48,0xC7,0x0,0x0,0x0,0x0,0x0
;/*	mov	-0x08(rbp),rax	; 80405E21 
	DB 0x48,0x8B,0x45,0xF8
;/	DROP
;/*	mov	0x00(rbp),rax	; 80405E25 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80405E29 
	DB 0x48,0x8D,0x6D,0x8
;/;
	ret		; 80405E2D C3 
;/
;/: ?^OP ( addr -- flg )
;/\
;/  DUP :-SET U< IF DROP FALSE BREAK


_quepicOP:
;/*	mov	rax,-0x08(rbp)	; 80405E2E 
	DB 0x48,0x89,0x45,0xF8
;/*	cmp	_dcomasubSET+0x5 (%rip),rax	; 80405E32 
	DB 0x48,0x3B,0x5,0x33,0xFE,0xFF,0xFF
;/*	sbb	rax,rax	; 80405E39 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80405E3C 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80405E3F 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_quepicOP+0x21 	; 80405E43 
	DB 0xF,0x84,0x6,0x0,0x0,0x0
;/*	mov	$0x0,eax	; 80405E49 
	DB 0xB8,0x0,0x0,0x0,0x0
	ret		; 80405E4E C3 
;/  DROP TRUE
;/*	movq	$-0x1,rax	; 80405E4F 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/;
	ret		; 80405E56 C3 
;/
;/M\ ' DROP ->DEFER DTST


_DTST:
	call	_DOVECT	; 80405E57 E8 A0 E8 FF FF 
	DQ _DgreatS

;/
;/ TRUE VALUE ?C-JMP

_queCsubJMP:
	call	_DOVALUE	; 80405E64 E8 7B E8 FF FF 

	DQ 0xFFFFFFFFFFFFFFFF
;/
;/ 0 VALUE OPXXX

_OPXXX:
	call	_DOVALUE	; 80405E71 E8 6E E8 FF FF 

	DQ 0x0
;/
;/: OP_SIZE ( OP - n )
;/  DUP CELL- @ SWAP @ - ;

_OP_SIZE:
;/*	mov	rax,rdx	; 80405E7E 
	DB 0x48,0x89,0xC2
;/*	mov	-0x08(rax),rax	; 80405E81 
	DB 0x48,0x8B,0x40,0xF8
;/*	mov	rax,-0x08(rbp)	; 80405E85 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	(rdx),rax	; 80405E89 
	DB 0x48,0x8B,0x2
;/*		negq	rax	; 80405E8C 
	DB 0x48,0xF7,0xD8
;/*	add	-0x08(rbp),rax	; 80405E8F 
	DB 0x48,0x3,0x45,0xF8
	ret		; 80405E93 C3 
;/
;/: RIPADR? ( w -- flg )
;/	CASE
;/
;/	DUP C7FF AND	05F6 XOR IF


_RIPADRque:
;/*	mov	rax,-0x08(rbp)	; 80405E94 
	DB 0x48,0x89,0x45,0xF8
;/*	and	$0xC7FF,eax	; 80405E98 
	DB 0x25,0xFF,0xC7,0x0,0x0
;/*	xor	$0x5F6,eax	; 80405E9D 
	DB 0x35,0xF6,0x5,0x0,0x0
	test	rax,rax	; 80405EA2 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80405EA5 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_RIPADRque+0x172 	; 80405EA9 
	DB 0xF,0x84,0x57,0x1,0x0,0x0
;/	DUP D7FF AND	15F7 XOR IF
;/*	mov	rax,-0x08(rbp)	; 80405EAF 
	DB 0x48,0x89,0x45,0xF8
;/*	and	$0xD7FF,eax	; 80405EB3 
	DB 0x25,0xFF,0xD7,0x0,0x0
;/*	xor	$0x15F7,eax	; 80405EB8 
	DB 0x35,0xF7,0x15,0x0,0x0
	test	rax,rax	; 80405EBD 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80405EC0 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_RIPADRque+0x172 	; 80405EC4 
	DB 0xF,0x84,0x3C,0x1,0x0,0x0
;/	DUP E7FF AND	25F7 XOR IF
;/*	mov	rax,-0x08(rbp)	; 80405ECA 
	DB 0x48,0x89,0x45,0xF8
;/*	and	$0xE7FF,eax	; 80405ECE 
	DB 0x25,0xFF,0xE7,0x0,0x0
;/*	xor	$0x25F7,eax	; 80405ED3 
	DB 0x35,0xF7,0x25,0x0,0x0
	test	rax,rax	; 80405ED8 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80405EDB 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_RIPADRque+0x172 	; 80405EDF 
	DB 0xF,0x84,0x21,0x1,0x0,0x0
;/	DUP F7FF AND	05FE XOR IF
;/*	mov	rax,-0x08(rbp)	; 80405EE5 
	DB 0x48,0x89,0x45,0xF8
;/*	and	$0xF7FF,eax	; 80405EE9 
	DB 0x25,0xFF,0xF7,0x0,0x0
;/*	xor	$0x5FE,eax	; 80405EEE 
	DB 0x35,0xFE,0x5,0x0,0x0
	test	rax,rax	; 80405EF3 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80405EF6 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_RIPADRque+0x172 	; 80405EFA 
	DB 0xF,0x84,0x6,0x1,0x0,0x0
;/	DUP C7FF AND	05FF XOR IF
;/*	mov	rax,-0x08(rbp)	; 80405F00 
	DB 0x48,0x89,0x45,0xF8
;/*	and	$0xC7FF,eax	; 80405F04 
	DB 0x25,0xFF,0xC7,0x0,0x0
;/*	xor	$0x5FF,eax	; 80405F09 
	DB 0x35,0xFF,0x5,0x0,0x0
	test	rax,rax	; 80405F0E 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80405F11 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_RIPADRque+0x172 	; 80405F15 
	DB 0xF,0x84,0xEB,0x0,0x0,0x0
;/
;/	DUP		05c0 XOR IF \ rolb    %e_x,x(%rip)
;/*	mov	rax,-0x08(rbp)	; 80405F1B 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x5C0,rax	; 80405F1F 
	DB 0x48,0x35,0xC0,0x5,0x0,0x0
	test	rax,rax	; 80405F25 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80405F28 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_RIPADRque+0x172 	; 80405F2C 
	DB 0xF,0x84,0xD4,0x0,0x0,0x0
;/	DUP		05c1 XOR IF \ roll    %e_x,x(%rip)
;/*	mov	rax,-0x08(rbp)	; 80405F32 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x5C1,rax	; 80405F36 
	DB 0x48,0x35,0xC1,0x5,0x0,0x0
	test	rax,rax	; 80405F3C 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80405F3F 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_RIPADRque+0x172 	; 80405F43 
	DB 0xF,0x84,0xBD,0x0,0x0,0x0
;/	DUP		05c6 XOR IF \ movb    %e_x,x(%rip)
;/*	mov	rax,-0x08(rbp)	; 80405F49 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x5C6,rax	; 80405F4D 
	DB 0x48,0x35,0xC6,0x5,0x0,0x0
	test	rax,rax	; 80405F53 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80405F56 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_RIPADRque+0x172 	; 80405F5A 
	DB 0xF,0x84,0xA6,0x0,0x0,0x0
;/	DUP		05c7 XOR IF \ movl    %e_x,x(%rip)
;/*	mov	rax,-0x08(rbp)	; 80405F60 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x5C7,rax	; 80405F64 
	DB 0x48,0x35,0xC7,0x5,0x0,0x0
	test	rax,rax	; 80405F6A 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80405F6D 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_RIPADRque+0x172 	; 80405F71 
	DB 0xF,0x84,0x8F,0x0,0x0,0x0
;/
;/	DUP C7C4 AND	0500 XOR IF \ add..cmp    %e_x,x(%rip)
;/*	mov	rax,-0x08(rbp)	; 80405F77 
	DB 0x48,0x89,0x45,0xF8
;/*	and	$0xC7C4,eax	; 80405F7B 
	DB 0x25,0xC4,0xC7,0x0,0x0
;/*	xor	$0x500,eax	; 80405F80 
	DB 0x35,0x0,0x5,0x0,0x0
	test	rax,rax	; 80405F85 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80405F88 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_RIPADRque+0x172 	; 80405F8C 
	DB 0xF,0x84,0x74,0x0,0x0,0x0
;/	DUP		0563 XOR IF \ movsxd    %e_x,x(%rip)
;/*	mov	rax,-0x08(rbp)	; 80405F92 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x563,rax	; 80405F96 
	DB 0x48,0x35,0x63,0x5,0x0,0x0
	test	rax,rax	; 80405F9C 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80405F9F 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_RIPADRque+0x172 	; 80405FA3 
	DB 0xF,0x84,0x5D,0x0,0x0,0x0
;/	C7FD AND
;/*	and	$0xC7FD,eax	; 80405FA9 
	DB 0x25,0xFD,0xC7,0x0,0x0
;/	DUP		0569 XOR IF \ imul    %e_x,x(%rip)
;/*	mov	rax,-0x08(rbp)	; 80405FAE 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x569,rax	; 80405FB2 
	DB 0x48,0x35,0x69,0x5,0x0,0x0
	test	rax,rax	; 80405FB8 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80405FBB 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_RIPADRque+0x172 	; 80405FBF 
	DB 0xF,0x84,0x41,0x0,0x0,0x0
;/	C7F0 AND
;/*	and	$0xC7F0,eax	; 80405FC5 
	DB 0x25,0xF0,0xC7,0x0,0x0
;/	DUP		0580 XOR IF \ mov..    %e_x,x(%rip)
;/*	mov	rax,-0x08(rbp)	; 80405FCA 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x580,rax	; 80405FCE 
	DB 0x48,0x35,0x80,0x5,0x0,0x0
	test	rax,rax	; 80405FD4 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80405FD7 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_RIPADRque+0x172 	; 80405FDB 
	DB 0xF,0x84,0x25,0x0,0x0,0x0
;/	DUP		0580 XOR IF \ mov..    %e_x,x(%rip)
;/*	mov	rax,-0x08(rbp)	; 80405FE1 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x580,rax	; 80405FE5 
	DB 0x48,0x35,0x80,0x5,0x0,0x0
	test	rax,rax	; 80405FEB 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80405FEE 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_RIPADRque+0x172 	; 80405FF2 
	DB 0xF,0x84,0xE,0x0,0x0,0x0
;/	    		05D0 = \ rol..    %e_x,x(%rip)
;/*	xor	$0x5D0,rax	; 80405FF8 
	DB 0x48,0x35,0xD0,0x5,0x0,0x0
;/*	sub	$0x01,rax	; 80405FFE 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80406002 
	DB 0x48,0x19,0xC0
;/		EXIT
	ret		; 80406005 C3 
;/  DUPENDCASE DROP TRUE ;
;/*	movq	$-0x1,rax	; 80406006 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
	ret		; 8040600D C3 
;/
;/VARIABLE PREF_S 

	DQ 0xFFFFFF
	DB 0x0,0x0
;/
;/: PREF+  PREF_S @ + ;

_PREFadd:
;/*	add	_RIPADRque+0x17C (%rip),rax	; 80406018 
	DB 0x48,0x3,0x5,0xF1,0xFF,0xFF,0xFF
	ret		; 8040601F C3 
;/
;/: >PREF  F0 AND 40 <> 1+ PREF_S ! ;


_greatPREF:
;/*	and	$0xF0,eax	; 80406020 
	DB 0x25,0xF0,0x0,0x0,0x0
;/*	xor	$0x40,rax	; 80406025 
	DB 0x48,0x35,0x40,0x0,0x0,0x0
;/*		negq	rax	; 8040602B 
	DB 0x48,0xF7,0xD8
;/*	sbb	rax,rax	; 8040602E 
	DB 0x48,0x19,0xC0
;/*	lea	0x01(rax),rax	; 80406031 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	rax,_RIPADRque+0x17C (%rip)	; 80406035 
	DB 0x48,0x89,0x5,0xD4,0xFF,0xFF,0xFF
;/*	mov	0x00(rbp),rax	; 8040603C 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406040 
	DB 0x48,0x8D,0x6D,0x8
	ret		; 80406044 C3 
;/
;/: OP_SHIFTS (  n OPX -- )
;/	OP0


_OP_SHIFTS:
;/*	mov	rax,-0x08(rbp)	; 80406045 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 80406049 
	DB 0x48,0x8D,0x5,0xF7,0xFA,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80406050 
	DB 0x48,0x8D,0x6D,0xF8
;/	?DO
	call	_cbigqueDOcend	; 80406054 E8 CE E6 FF FF 
	DQ _OP_SHIFTS+0x97 
;/	 I @ C@ >PREF
;/*	mov	rax,-0x08(rbp)	; 80406061 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	(r14),rax	; 80406065 
	DB 0x49,0x8B,0x6
;/*	movzb	(rax),eax	; 80406068 
	DB 0xF,0xB6,0x0
;/*	lea	-0x08(rbp),rbp	; 8040606B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_greatPREF	; 8040606F E8 AC FF FF FF 
;/	 I @ PREF+ W@ RIPADR? IF DUP NEGATE I @ PREF+ 2+ L+! THEN
;/*	mov	rax,-0x08(rbp)	; 80406074 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	(r14),rax	; 80406078 
	DB 0x49,0x8B,0x6
;/*	add	_RIPADRque+0x17C (%rip),rax	; 8040607B 
	DB 0x48,0x3,0x5,0x8E,0xFF,0xFF,0xFF
;/*	movzw	(rax),eax	; 80406082 
	DB 0xF,0xB7,0x0
;/*	lea	-0x08(rbp),rbp	; 80406085 
	DB 0x48,0x8D,0x6D,0xF8
	call	_RIPADRque	; 80406089 E8 6 FE FF FF 
	test	rax,rax	; 8040608E 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406091 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406095 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OP_SHIFTS+0x7D 	; 80406099 
	DB 0xF,0x84,0x23,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040609F 
	DB 0x48,0x89,0x45,0xF8
;/*		negq	rax	; 804060A3 
	DB 0x48,0xF7,0xD8
;/*	mov	rax,-0x10(rbp)	; 804060A6 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	(r14),rax	; 804060AA 
	DB 0x49,0x8B,0x6
;/*	add	_RIPADRque+0x17C (%rip),rax	; 804060AD 
	DB 0x48,0x3,0x5,0x5C,0xFF,0xFF,0xFF
;/*	lea	0x02(rax),rax	; 804060B4 
	DB 0x48,0x8D,0x40,0x2
;/*	mov	-0x10(rbp),rdx	; 804060B8 
	DB 0x48,0x8B,0x55,0xF0
;/*	add	edx,(rax)	; 804060BC 
	DB 0x1,0x10
;/*	mov	-0x08(rbp),rax	; 804060BE 
	DB 0x48,0x8B,0x45,0xF8
;/	DUP I +!
;/*	add	rax,(r14)	; 804060C2 
	DB 0x49,0x1,0x6
;/	CELL +LOOP
;/*	mov	rax,-0x08(rbp)	; 804060C5 
	DB 0x48,0x89,0x45,0xF8
;/*	add	$0x08,r14	; 804060C9 
	DB 0x49,0x83,0xC6,0x8
;/*	add	$0x08,r15	; 804060CD 
	DB 0x49,0x83,0xC7,0x8
;/*	mov	-0x08(rbp),rax	; 804060D1 
	DB 0x48,0x8B,0x45,0xF8
	jNo	_OP_SHIFTS+0x1C 	; 804060D5 71 8A 
	pop	r14	; 804060D7 41 5E 
	pop	r15	; 804060D9 41 5F 
	pop	rcx	; 804060DB 59 
;/;
	ret		; 804060DC C3 
;/
;/: OPresize ( OPX shift+ -- )
;/\ изменение размера кода на величину n. OPX адрес в таблице ссылок на код.
;/\ Код сдвигается. Если n больше 0 - сдвиг в сторону старших адресов.
;/\ Если n меньше 0 - сдвиг затиранием начала кода
;/  DUP>R


_OPresize:
	Push	rax	; 804060DD 50 
;/ OVER @ C@ >PREF
;/*	mov	rax,-0x08(rbp)	; 804060DE 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	0x00(rbp),rax	; 804060E2 
	DB 0x48,0x8B,0x45,0x0
;/*	mov	(rax),rax	; 804060E6 
	DB 0x48,0x8B,0x0
;/*	movzb	(rax),eax	; 804060E9 
	DB 0xF,0xB6,0x0
;/*	lea	-0x08(rbp),rbp	; 804060EC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_greatPREF	; 804060F0 E8 2B FF FF FF 
;/ OVER @ PREF+ W@ RIPADR? IF 2DUP NEGATE SWAP @ PREF+ 2+ L+! THEN
;/*	mov	rax,-0x08(rbp)	; 804060F5 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	0x00(rbp),rax	; 804060F9 
	DB 0x48,0x8B,0x45,0x0
;/*	mov	(rax),rax	; 804060FD 
	DB 0x48,0x8B,0x0
;/*	add	_RIPADRque+0x17C (%rip),rax	; 80406100 
	DB 0x48,0x3,0x5,0x9,0xFF,0xFF,0xFF
;/*	movzw	(rax),eax	; 80406107 
	DB 0xF,0xB7,0x0
;/*	lea	-0x08(rbp),rbp	; 8040610A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_RIPADRque	; 8040610E E8 81 FD FF FF 
	test	rax,rax	; 80406113 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406116 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040611A 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPresize+0x76 	; 8040611E 
	DB 0xF,0x84,0x2F,0x0,0x0,0x0
;/*	mov	0x00(rbp),rdx	; 80406124 
	DB 0x48,0x8B,0x55,0x0
;/*	mov	rax,-0x08(rbp)	; 80406128 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	rdx,-0x10(rbp)	; 8040612C 
	DB 0x48,0x89,0x55,0xF0
;/*		negq	rax	; 80406130 
	DB 0x48,0xF7,0xD8
;/*	mov	-0x10(rbp),rdx	; 80406133 
	DB 0x48,0x8B,0x55,0xF0
;/*	mov	rax,-0x10(rbp)	; 80406137 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	(rdx),rax	; 8040613B 
	DB 0x48,0x8B,0x2
;/*	add	_RIPADRque+0x17C (%rip),rax	; 8040613E 
	DB 0x48,0x3,0x5,0xCB,0xFE,0xFF,0xFF
;/*	lea	0x02(rax),rax	; 80406145 
	DB 0x48,0x8D,0x40,0x2
;/*	mov	-0x10(rbp),rdx	; 80406149 
	DB 0x48,0x8B,0x55,0xF0
;/*	add	edx,(rax)	; 8040614D 
	DB 0x1,0x10
;/*	mov	-0x08(rbp),rax	; 8040614F 
	DB 0x48,0x8B,0x45,0xF8
;/  OVER OP_SHIFTS
;/*	mov	rax,-0x08(rbp)	; 80406153 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	0x00(rbp),rax	; 80406157 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040615B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OP_SHIFTS	; 8040615F E8 E1 FE FF FF 
;/  ALLOT
;/*	add	rax,_HsubSTDOUT+0x18 (%rip)	; 80406164 
	DB 0x48,0x1,0x5,0xB1,0xEA,0xFF,0xFF
;/*	mov	0x00(rbp),rax	; 8040616B 
	DB 0x48,0x8B,0x45,0x0
;/*	mov	(rax),rax	; 8040616F 
	DB 0x48,0x8B,0x0
;/*	mov	rax,0x00(rbp)	; 80406172 
	DB 0x48,0x89,0x45,0x0
;/\  @ DUP  R> +
;/\  DUP   THERE - NEGATE MOVE
;/  @ DUP R>
;/*	mov	rax,-0x08(rbp)	; 80406176 
	DB 0x48,0x89,0x45,0xF8
	pop	rax	; 8040617A 58 
	test	rax,rax	; 8040617B 48 85 C0 
;/*	lea	-0x08(rbp),rbp	; 8040617E 
	DB 0x48,0x8D,0x6D,0xF8
;/  DUP 0<
;/*	jNl	_OPresize+0xC6 	; 80406182 
	DB 0xF,0x8D,0x1B,0x0,0x0,0x0
;/  IF   -  SWAP
;/*		negq	rax	; 80406188 
	DB 0x48,0xF7,0xD8
;/*	add	0x00(rbp),rax	; 8040618B 
	DB 0x48,0x3,0x45,0x0
;/*	mov	0x08(rbp),rdx	; 8040618F 
	DB 0x48,0x8B,0x55,0x8
;/*	mov	rax,0x08(rbp)	; 80406193 
	DB 0x48,0x89,0x45,0x8
;/*	mov	rdx,rax	; 80406197 
	DB 0x48,0x89,0xD0
;/*	lea	0x08(rbp),rbp	; 8040619A 
	DB 0x48,0x8D,0x6D,0x8
;/  ELSE +  
;/*	jmp	_OPresize+0xCE 	; 8040619E 
	DB 0xE9,0x8,0x0,0x0,0x0
;/*	add	0x00(rbp),rax	; 804061A3 
	DB 0x48,0x3,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804061A7 
	DB 0x48,0x8D,0x6D,0x8
;/  THEN DUP THERE - NEGATE MOVE
;/*	mov	rax,-0x08(rbp)	; 804061AB 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	rax,-0x10(rbp)	; 804061AF 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_HsubSTDOUT+0x18 (%rip),rax	; 804061B3 
	DB 0x48,0x8B,0x5,0x62,0xEA,0xFF,0xFF
;/*	sub	-0x10(rbp),rax	; 804061BA 
	DB 0x48,0x2B,0x45,0xF0
;/*	lea	-0x08(rbp),rbp	; 804061BE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_MOVE	; 804061C2 E8 36 F3 FF FF 
;/
;/;
	ret		; 804061C7 C3 
;/
;/
;/: OPinsert ( OPX n -- )
;/  DUP>R


_OPinsert:
	Push	rax	; 804061C8 50 
;/  2DUP OPresize DROP
;/*	mov	0x00(rbp),rdx	; 804061C9 
	DB 0x48,0x8B,0x55,0x0
;/*	mov	rax,-0x08(rbp)	; 804061CD 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	rdx,-0x10(rbp)	; 804061D1 
	DB 0x48,0x89,0x55,0xF0
;/*	lea	-0x10(rbp),rbp	; 804061D5 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPresize	; 804061D9 E8 FF FE FF FF 
;/*	mov	0x00(rbp),rax	; 804061DE 
	DB 0x48,0x8B,0x45,0x0
;/  DUP
;/  DUP CELL + OVER OP0 -  OpBuffSize CELL- - NEGATE MOVE
;/*	mov	rax,-0x08(rbp)	; 804061E2 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	0x08(rax),rax	; 804061E6 
	DB 0x48,0x8D,0x40,0x8
;/*	mov	rax,-0x10(rbp)	; 804061EA 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	-0x08(rbp),rax	; 804061EE 
	DB 0x48,0x8B,0x45,0xF8
;/*	mov	rax,-0x18(rbp)	; 804061F2 
	DB 0x48,0x89,0x45,0xE8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 804061F6 
	DB 0x48,0x8D,0x5,0x4A,0xF9,0xFF,0xFF
;/*		negq	rax	; 804061FD 
	DB 0x48,0xF7,0xD8
;/*	add	-0x18(rbp),rax	; 80406200 
	DB 0x48,0x3,0x45,0xE8
;/*	lea	-0x108(rax),rax	; 80406204 
	DB 0x48,0x8D,0x80,0xF8,0xFE,0xFF,0xFF
;/*		negq	rax	; 8040620B 
	DB 0x48,0xF7,0xD8
;/*	lea	-0x10(rbp),rbp	; 8040620E 
	DB 0x48,0x8D,0x6D,0xF0
	call	_MOVE	; 80406212 E8 E6 F2 FF FF 
;/  R> SWAP +!
;/*	mov	rax,rdx	; 80406217 
	DB 0x48,0x89,0xC2
;/*	pop	-0x08(rbp)	; 8040621A 
	DB 0x8F,0x45,0xF8
;/*	mov	rdx,rax	; 8040621D 
	DB 0x48,0x89,0xD0
;/*	mov	-0x08(rbp),rdx	; 80406220 
	DB 0x48,0x8B,0x55,0xF8
;/*	add	rdx,(rax)	; 80406224 
	DB 0x48,0x1,0x10
;/*	mov	0x00(rbp),rax	; 80406227 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040622B 
	DB 0x48,0x8D,0x6D,0x8
;/;
	ret		; 8040622F C3 
;/
;/: OPsize! ( OPX n -- )
;/\ установка нового размера кода. OPX - адрес в таблице ссылок на код.
;/\ код остается на месте. Если размер меньше прежнего, код урезается в конце
;/  OVER OP_SIZE -


_OPsizesave:
;/*	mov	rax,-0x08(rbp)	; 80406230 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	0x00(rbp),rax	; 80406234 
	DB 0x48,0x8B,0x45,0x0
;/*	mov	rax,rdx	; 80406238 
	DB 0x48,0x89,0xC2
;/*	mov	-0x08(rax),rax	; 8040623B 
	DB 0x48,0x8B,0x40,0xF8
;/*	mov	rax,-0x10(rbp)	; 8040623F 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	(rdx),rax	; 80406243 
	DB 0x48,0x8B,0x2
;/*	sub	-0x10(rbp),rax	; 80406246 
	DB 0x48,0x2B,0x45,0xF0
;/*	add	-0x08(rbp),rax	; 8040624A 
	DB 0x48,0x3,0x45,0xF8
;/  DUP>R
	Push	rax	; 8040624E 50 
;/  OVER OP_SHIFTS
;/*	mov	rax,-0x08(rbp)	; 8040624F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	0x00(rbp),rax	; 80406253 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 80406257 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OP_SHIFTS	; 8040625B E8 E5 FD FF FF 
;/  ALLOT
;/*	add	rax,_HsubSTDOUT+0x18 (%rip)	; 80406260 
	DB 0x48,0x1,0x5,0xB5,0xE9,0xFF,0xFF
;/*	mov	0x00(rbp),rax	; 80406267 
	DB 0x48,0x8B,0x45,0x0
;/*	mov	-0x08(rax),rax	; 8040626B 
	DB 0x48,0x8B,0x40,0xF8
;/  CELL- @ DUP R> - SWAP DUP THERE - NEGATE MOVE
;/*	mov	rax,0x00(rbp)	; 8040626F 
	DB 0x48,0x89,0x45,0x0
;/*	mov	rax,-0x08(rbp)	; 80406273 
	DB 0x48,0x89,0x45,0xF8
	pop	rax	; 80406277 58 
;/*		negq	rax	; 80406278 
	DB 0x48,0xF7,0xD8
;/*	add	-0x08(rbp),rax	; 8040627B 
	DB 0x48,0x3,0x45,0xF8
;/*	mov	0x00(rbp),rdx	; 8040627F 
	DB 0x48,0x8B,0x55,0x0
;/*	mov	rax,0x00(rbp)	; 80406283 
	DB 0x48,0x89,0x45,0x0
;/*	mov	rdx,rax	; 80406287 
	DB 0x48,0x89,0xD0
;/*	mov	rax,-0x08(rbp)	; 8040628A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	rax,-0x10(rbp)	; 8040628E 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_HsubSTDOUT+0x18 (%rip),rax	; 80406292 
	DB 0x48,0x8B,0x5,0x83,0xE9,0xFF,0xFF
;/*	sub	-0x10(rbp),rax	; 80406299 
	DB 0x48,0x2B,0x45,0xF0
;/*	lea	-0x08(rbp),rbp	; 8040629D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_MOVE	; 804062A1 E8 57 F2 FF FF 
;/;
	ret		; 804062A6 C3 
;/
;/: OPexcise ( OPX -- )
;/\ удаление кода вместе со ссылкой на него
;/	DUP OP0 = IF @ DP! OP1 ToOP0 BREAK


_OPexcise:
;/*	mov	rax,-0x08(rbp)	; 804062A7 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	rax,-0x10(rbp)	; 804062AB 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 804062AF 
	DB 0x48,0x8D,0x5,0x91,0xF8,0xFF,0xFF
;/*	xor	-0x10(rbp),rax	; 804062B6 
	DB 0x48,0x33,0x45,0xF0
;/*	sub	$0x01,rax	; 804062BA 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 804062BE 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 804062C1 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804062C4 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_OPexcise+0x3C 	; 804062C8 
	DB 0xF,0x84,0x15,0x0,0x0,0x0
;/*	mov	(rax),rax	; 804062CE 
	DB 0x48,0x8B,0x0
;/*	mov	rax,_HsubSTDOUT+0x18 (%rip)	; 804062D1 
	DB 0x48,0x89,0x5,0x44,0xE9,0xFF,0xFF
;/*	mov	$0x44C539,eax	; 804062D8 
	DB 0xB8,0x39,0xC5,0x44,0x0
	call	_ToOP0	; 804062DD E8 99 FA FF FF 
	ret		; 804062E2 C3 
;/	DUP 0 OPsize!
;/*	mov	rax,-0x08(rbp)	; 804062E3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	rax,-0x10(rbp)	; 804062E7 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x0,eax	; 804062EB 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 804062F0 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPsizesave	; 804062F4 E8 37 FF FF FF 
;/	DUP>R CELL+ R@ OpBuffSize CELL- R> - OP0 + CMOVE
	Push	rax	; 804062F9 50 
;/*	lea	0x08(rax),rax	; 804062FA 
	DB 0x48,0x8D,0x40,0x8
;/*	mov	rax,-0x08(rbp)	; 804062FE 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	(rsp),rax	; 80406302 
	DB 0x48,0x8B,0x4,0x24
;/*	mov	rax,-0x10(rbp)	; 80406306 
	DB 0x48,0x89,0x45,0xF0
;/*	movq	$0x108,-0x18(rbp)	; 8040630A 
	DB 0x48,0xC7,0x45,0xE8,0x8,0x1,0x0,0x0
	pop	rax	; 80406312 58 
;/*		negq	rax	; 80406313 
	DB 0x48,0xF7,0xD8
;/*	add	-0x18(rbp),rax	; 80406316 
	DB 0x48,0x3,0x45,0xE8
;/*	mov	rax,-0x18(rbp)	; 8040631A 
	DB 0x48,0x89,0x45,0xE8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040631E 
	DB 0x48,0x8D,0x5,0x22,0xF8,0xFF,0xFF
;/*	add	-0x18(rbp),rax	; 80406325 
	DB 0x48,0x3,0x45,0xE8
;/*	lea	-0x10(rbp),rbp	; 80406329 
	DB 0x48,0x8D,0x6D,0xF0
	call	_CMOVE	; 8040632D E8 9B E3 FF FF 
;/;
	ret		; 80406332 C3 
;/
;/: EVEN-EAX OFF-EAX


_EVENsubEAX:
;/*	mov	rax,-0x08(rbp)	; 80406333 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OFFsubEAX+0x5 (%rip),rax	; 80406337 
	DB 0x48,0x8B,0x5,0xE7,0xF7,0xFF,0xFF
	test	rax,rax	; 8040633E 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406341 
	DB 0x48,0x8B,0x45,0xF8
;/   IF      M\ 1000 DTST
;/*	jz	_EVENsubEAX+0x113 	; 80406345 
	DB 0xF,0x84,0xFB,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040634B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x1000,eax	; 8040634F 
	DB 0xB8,0x0,0x10,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406354 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80406358 E8 FA FA FF FF 
;/	SetOP 48 C, 
	call	_SetOP	; 8040635D E8 A3 F9 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406362 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x48,eax	; 80406366 
	DB 0xB8,0x48,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040636B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Ccom	; 8040636F E8 46 E9 FF FF 
;/	OFF-EAX DUP SHORT?
;/*	mov	rax,-0x08(rbp)	; 80406374 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OFFsubEAX+0x5 (%rip),rax	; 80406378 
	DB 0x48,0x8B,0x5,0xA6,0xF7,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 8040637F 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	-0x10(rbp),rbp	; 80406383 
	DB 0x48,0x8D,0x6D,0xF0
	call	_SHORTque	; 80406387 E8 A4 F6 FF FF 
;/     IF		J_COD IF c083 ELSE 408D THEN W, C,
	test	rax,rax	; 8040638C 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040638F 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406393 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_EVENsubEAX+0xB0 	; 80406397 
	DB 0xF,0x84,0x46,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040639D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_J_COD+0x5 (%rip),rax	; 804063A1 
	DB 0x48,0x8B,0x5,0x3C,0xF7,0xFF,0xFF
	test	rax,rax	; 804063A8 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804063AB 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_EVENsubEAX+0x94 	; 804063AF 
	DB 0xF,0x84,0x12,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804063B5 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC083,eax	; 804063B9 
	DB 0xB8,0x83,0xC0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804063BE 
	DB 0x48,0x8D,0x6D,0xF8
;/*	jmp	_EVENsubEAX+0xA1 	; 804063C2 
	DB 0xE9,0xD,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804063C7 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x408D,eax	; 804063CB 
	DB 0xB8,0x8D,0x40,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804063D0 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Wcom	; 804063D4 E8 BF E8 FF FF 
	call	_Ccom	; 804063D9 E8 DC E8 FF FF 
;/     ELSE	J_COD IF 5 C, ELSE 808D W, THEN  L,
;/*	jmp	_EVENsubEAX+0xF6 	; 804063DE 
	DB 0xE9,0x46,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804063E3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_J_COD+0x5 (%rip),rax	; 804063E7 
	DB 0x48,0x8B,0x5,0xF6,0xF6,0xFF,0xFF
	test	rax,rax	; 804063EE 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804063F1 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_EVENsubEAX+0xDF 	; 804063F5 
	DB 0xF,0x84,0x17,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804063FB 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x5,eax	; 804063FF 
	DB 0xB8,0x5,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406404 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Ccom	; 80406408 E8 AD E8 FF FF 
;/*	jmp	_EVENsubEAX+0xF1 	; 8040640D 
	DB 0xE9,0x12,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80406412 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x808D,eax	; 80406416 
	DB 0xB8,0x8D,0x80,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040641B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Wcom	; 8040641F E8 74 E8 FF FF 
	call	_Lcom	; 80406424 E8 4E E8 FF FF 
;/     THEN   \  LEA   EAX,  OFF-EBP [EAX]
;/     0 TO OFF-EAX
;/*	movq	$0x0,_OFFsubEAX+0x5 (%rip)	; 80406429 
	DB 0x48,0xC7,0x5,0xF1,0xF6,0xFF,0xFF,0x0,0x0,0x0,0x0
;/       M\ 1001 DTST
;/*	mov	rax,-0x08(rbp)	; 80406434 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x1001,eax	; 80406438 
	DB 0xB8,0x1,0x10,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040643D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80406441 E8 11 FA FF FF 
;/   THEN
;/;
	ret		; 80406446 C3 
;/
;/: EVEN-EBP OFF-EBP


_EVENsubEBP:
;/*	mov	rax,-0x08(rbp)	; 80406447 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OFFsubEBP+0x5 (%rip),rax	; 8040644B 
	DB 0x48,0x8B,0x5,0xC6,0xF6,0xFF,0xFF
	test	rax,rax	; 80406452 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406455 
	DB 0x48,0x8B,0x45,0xF8
;/   IF SetOP
;/*	jz	_EVENsubEBP+0x60 	; 80406459 
	DB 0xF,0x84,0x48,0x0,0x0,0x0
	call	_SetOP	; 8040645F E8 A1 F8 FF FF 
;/  48 C, 06D8D W, OFF-EBP C, \   LEA   ebp,  OFF-EBP [EBP]
;/*	mov	rax,-0x08(rbp)	; 80406464 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x48,eax	; 80406468 
	DB 0xB8,0x48,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040646D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Ccom	; 80406471 E8 44 E8 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406476 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x6D8D,eax	; 8040647A 
	DB 0xB8,0x8D,0x6D,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040647F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Wcom	; 80406483 E8 10 E8 FF FF 
;/*	mov	rax,-0x08(rbp)	; 80406488 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OFFsubEBP+0x5 (%rip),rax	; 8040648C 
	DB 0x48,0x8B,0x5,0x85,0xF6,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 80406493 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Ccom	; 80406497 E8 1E E8 FF FF 
;/      0 TO OFF-EBP
;/*	movq	$0x0,_OFFsubEBP+0x5 (%rip)	; 8040649C 
	DB 0x48,0xC7,0x5,0x71,0xF6,0xFF,0xFF,0x0,0x0,0x0,0x0
;/   THEN
;/;
	ret		; 804064A7 C3 
;/
;/: +>OFF-EBP ( C -- )
;/   C>S OFF-EBP + TO OFF-EBP ;


_addgreatOFFsubEBP:
;/*	movsbq	al,rax	; 804064A8 
	DB 0x48,0xF,0xBE,0xC0
;/*	add	_OFFsubEBP+0x5 (%rip),rax	; 804064AC 
	DB 0x48,0x3,0x5,0x65,0xF6,0xFF,0xFF
;/*	mov	rax,_OFFsubEBP+0x5 (%rip)	; 804064B3 
	DB 0x48,0x89,0x5,0x5E,0xF6,0xFF,0xFF
;/*	mov	0x00(rbp),rax	; 804064BA 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804064BE 
	DB 0x48,0x8D,0x6D,0x8
	ret		; 804064C2 C3 
;/
;/: ADD|OR|AND|XOR<>  ( l -- FLAG )
;/  FFFFFF AND


_ADDlORlANDlXORlessgreat:
;/*	and	$0xFFFFFF,eax	; 804064C3 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/   CASE
;/	DUP	450348 XOR IF \ ADD
;/*	mov	rax,-0x08(rbp)	; 804064C8 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x450348,rax	; 804064CC 
	DB 0x48,0x35,0x48,0x3,0x45,0x0
	test	rax,rax	; 804064D2 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804064D5 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_ADDlORlANDlXORlessgreat+0x69 	; 804064D9 
	DB 0xF,0x84,0x4D,0x0,0x0,0x0
;/	DUP	450B48 XOR IF \  OR
;/*	mov	rax,-0x08(rbp)	; 804064DF 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x450B48,rax	; 804064E3 
	DB 0x48,0x35,0x48,0xB,0x45,0x0
	test	rax,rax	; 804064E9 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804064EC 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_ADDlORlANDlXORlessgreat+0x69 	; 804064F0 
	DB 0xF,0x84,0x36,0x0,0x0,0x0
;/	DUP	452348 XOR IF \ AND
;/*	mov	rax,-0x08(rbp)	; 804064F6 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x452348,rax	; 804064FA 
	DB 0x48,0x35,0x48,0x23,0x45,0x0
	test	rax,rax	; 80406500 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406503 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_ADDlORlANDlXORlessgreat+0x69 	; 80406507 
	DB 0xF,0x84,0x1F,0x0,0x0,0x0
;/	DUP	453348 XOR IF \ XOR
;/*	mov	rax,-0x08(rbp)	; 8040650D 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x453348,rax	; 80406511 
	DB 0x48,0x35,0x48,0x33,0x45,0x0
	test	rax,rax	; 80406517 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040651A 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_ADDlORlANDlXORlessgreat+0x69 	; 8040651E 
	DB 0xF,0x84,0x8,0x0,0x0,0x0
;/             DROP TRUE EXIT
;/*	movq	$-0x1,rax	; 80406524 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
	ret		; 8040652B C3 
;/  DUPENDCASE DROP FALSE ;
;/*	mov	$0x0,eax	; 8040652C 
	DB 0xB8,0x0,0x0,0x0,0x0
	ret		; 80406531 C3 
;/
;/: -EVEN-EBP
;/     OP0 @ :-SET


_subEVENsubEBP:
;/*	mov	rax,-0x08(rbp)	; 80406532 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_LASTsubHERE+0xD (%rip),rax	; 80406536 
	DB 0x48,0x8B,0x5,0xA,0xF6,0xFF,0xFF
;/*	cmp	_dcomasubSET+0x5 (%rip),rax	; 8040653D 
	DB 0x48,0x3B,0x5,0x28,0xF7,0xFF,0xFF
;/*	sbb	rax,rax	; 80406544 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80406547 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040654A 
	DB 0x48,0x8B,0x45,0xF8
;/ U< IF BREAK
;/*	jz	_subEVENsubEBP+0x23 	; 8040654E 
	DB 0xF,0x84,0x1,0x0,0x0,0x0
	ret		; 80406554 C3 
;/     OP0 @ L@ FFFFFF AND 06D8D48 =  \  LEA   ebp,  OFF-EBP [EBP]
;/*	mov	rax,-0x08(rbp)	; 80406555 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_LASTsubHERE+0xD (%rip),rax	; 80406559 
	DB 0x48,0x8B,0x5,0xE7,0xF5,0xFF,0xFF
;/*	mov	(rax),eax	; 80406560 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80406562 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x6D8D48,rax	; 80406567 
	DB 0x48,0x35,0x48,0x8D,0x6D,0x0
;/*	sub	$0x01,rax	; 8040656D 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80406571 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80406574 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406577 
	DB 0x48,0x8B,0x45,0xF8
;/     IF  OP0 @ 3 + C@ +>OFF-EBP
;/*	jz	_subEVENsubEBP+0x87 	; 8040657B 
	DB 0xF,0x84,0x38,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80406581 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_LASTsubHERE+0xD (%rip),rax	; 80406585 
	DB 0x48,0x8B,0x5,0xBB,0xF5,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 8040658C 
	DB 0xF,0xB6,0x40,0x3
;/*	movsbq	al,rax	; 80406590 
	DB 0x48,0xF,0xBE,0xC0
;/*	add	_OFFsubEBP+0x5 (%rip),rax	; 80406594 
	DB 0x48,0x3,0x5,0x7D,0xF5,0xFF,0xFF
;/*	mov	rax,_OFFsubEBP+0x5 (%rip)	; 8040659B 
	DB 0x48,0x89,0x5,0x76,0xF5,0xFF,0xFF
;/*	mov	$0x44C539,eax	; 804065A2 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/         OP1 ToOP0
;/*	lea	-0x08(rbp),rbp	; 804065A7 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 804065AB E8 CB F7 FF FF 
;/        -4 ALLOT EXIT
;/*	add	$-0x04,_HsubSTDOUT+0x18 (%rip)	; 804065B0 
	DB 0x48,0x83,0x5,0x64,0xE6,0xFF,0xFF,0xFC
	ret		; 804065B8 C3 
;/     THEN ;
	ret		; 804065B9 C3 
;/
;/
;/: DUP2B? ( w -- w flg )
;/  DUP


_DUP2Bque:
;/*	mov	rax,-0x08(rbp)	; 804065BA 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	rax,-0x10(rbp)	; 804065BE 
	DB 0x48,0x89,0x45,0xF0
;/   CASE
;/  DUP		1088	XOR IF \	mov    %dl,(%rax)
;/*	xor	$0x1088,rax	; 804065C2 
	DB 0x48,0x35,0x88,0x10,0x0,0x0
	test	rax,rax	; 804065C8 48 85 C0 
;/*	mov	-0x10(rbp),rax	; 804065CB 
	DB 0x48,0x8B,0x45,0xF0
;/*	lea	-0x08(rbp),rbp	; 804065CF 
	DB 0x48,0x8D,0x6D,0xF8
;/*	jz	_DUP2Bque+0x190 	; 804065D3 
	DB 0xF,0x84,0x71,0x1,0x0,0x0
;/  DUP		1089	XOR IF \	mov    %edx,(%rax)
;/*	mov	rax,-0x08(rbp)	; 804065D9 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x1089,rax	; 804065DD 
	DB 0x48,0x35,0x89,0x10,0x0,0x0
	test	rax,rax	; 804065E3 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804065E6 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP2Bque+0x190 	; 804065EA 
	DB 0xF,0x84,0x5A,0x1,0x0,0x0
;/  DUP		1001	XOR IF \	add     %rdx,(%rax)
;/*	mov	rax,-0x08(rbp)	; 804065F0 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x1001,rax	; 804065F4 
	DB 0x48,0x35,0x1,0x10,0x0,0x0
	test	rax,rax	; 804065FA 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804065FD 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP2Bque+0x190 	; 80406601 
	DB 0xF,0x84,0x43,0x1,0x0,0x0
;/  DUP		C019	XOR IF \	sbb     %eax,%eax
;/*	mov	rax,-0x08(rbp)	; 80406607 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0xC019,rax	; 8040660B 
	DB 0x48,0x35,0x19,0xC0,0x0,0x0
	test	rax,rax	; 80406611 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406614 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP2Bque+0x190 	; 80406618 
	DB 0xF,0x84,0x2C,0x1,0x0,0x0
;/  DUP		C063	XOR IF \	movslq %eax,%rax
;/*	mov	rax,-0x08(rbp)	; 8040661E 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0xC063,rax	; 80406622 
	DB 0x48,0x35,0x63,0xC0,0x0,0x0
	test	rax,rax	; 80406628 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040662B 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP2Bque+0x190 	; 8040662F 
	DB 0xF,0x84,0x15,0x1,0x0,0x0
;/  DUP		D031	XOR IF \	xor     %rdx,%rax
;/*	mov	rax,-0x08(rbp)	; 80406635 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0xD031,rax	; 80406639 
	DB 0x48,0x35,0x31,0xD0,0x0,0x0
	test	rax,rax	; 8040663F 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406642 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP2Bque+0x190 	; 80406646 
	DB 0xF,0x84,0xFE,0x0,0x0,0x0
;/  DUP		D029	XOR IF \	sub     %rdx,%rax
;/*	mov	rax,-0x08(rbp)	; 8040664C 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0xD029,rax	; 80406650 
	DB 0x48,0x35,0x29,0xD0,0x0,0x0
	test	rax,rax	; 80406656 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406659 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP2Bque+0x190 	; 8040665D 
	DB 0xF,0x84,0xE7,0x0,0x0,0x0
;/  DUP		008B	XOR IF \	mov	(%rax),%eax
;/*	mov	rax,-0x08(rbp)	; 80406663 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x8B,rax	; 80406667 
	DB 0x48,0x35,0x8B,0x0,0x0,0x0
	test	rax,rax	; 8040666D 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406670 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP2Bque+0x190 	; 80406674 
	DB 0xF,0x84,0xD0,0x0,0x0,0x0
;/  DUP		00FF	XOR IF \	incl	(%rax)
;/*	mov	rax,-0x08(rbp)	; 8040667A 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0xFF,rax	; 8040667E 
	DB 0x48,0x35,0xFF,0x0,0x0,0x0
	test	rax,rax	; 80406684 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406687 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP2Bque+0x190 	; 8040668B 
	DB 0xF,0x84,0xB9,0x0,0x0,0x0
;/  DUP		028B	XOR IF \	mov	(%rdx),%eax
;/*	mov	rax,-0x08(rbp)	; 80406691 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x28B,rax	; 80406695 
	DB 0x48,0x35,0x8B,0x2,0x0,0x0
	test	rax,rax	; 8040669B 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040669E 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP2Bque+0x190 	; 804066A2 
	DB 0xF,0x84,0xA2,0x0,0x0,0x0
;/  DUP		F9F7	XOR IF \	idiv   %ecx
;/*	mov	rax,-0x08(rbp)	; 804066A8 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0xF9F7,rax	; 804066AC 
	DB 0x48,0x35,0xF7,0xF9,0x0,0x0
	test	rax,rax	; 804066B2 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804066B5 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP2Bque+0x190 	; 804066B9 
	DB 0xF,0x84,0x8B,0x0,0x0,0x0
;/  DUP		9948	XOR IF \	cqto
;/*	mov	rax,-0x08(rbp)	; 804066BF 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x9948,rax	; 804066C3 
	DB 0x48,0x35,0x48,0x99,0x0,0x0
	test	rax,rax	; 804066C9 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804066CC 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP2Bque+0x190 	; 804066D0 
	DB 0xF,0x84,0x74,0x0,0x0,0x0
;/  DUP E4FC AND	C088	XOR IF \   mov    %e<abcd>x,%e<abcd>x
;/*	mov	rax,-0x08(rbp)	; 804066D6 
	DB 0x48,0x89,0x45,0xF8
;/*	and	$0xE4FC,eax	; 804066DA 
	DB 0x25,0xFC,0xE4,0x0,0x0
;/*	xor	$0xC088,eax	; 804066DF 
	DB 0x35,0x88,0xC0,0x0,0x0
	test	rax,rax	; 804066E4 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804066E7 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP2Bque+0x190 	; 804066EB 
	DB 0xF,0x84,0x59,0x0,0x0,0x0
;/  DUP E7FC AND	E0D0	XOR IF \ s<a|h>r	$1,%rax
;/*	mov	rax,-0x08(rbp)	; 804066F1 
	DB 0x48,0x89,0x45,0xF8
;/*	and	$0xE7FC,eax	; 804066F5 
	DB 0x25,0xFC,0xE7,0x0,0x0
;/*	xor	$0xE0D0,eax	; 804066FA 
	DB 0x35,0xD0,0xE0,0x0,0x0
	test	rax,rax	; 804066FF 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406702 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP2Bque+0x190 	; 80406706 
	DB 0xF,0x84,0x3E,0x0,0x0,0x0
;/  F6FF AND
;/*	and	$0xF6FF,eax	; 8040670C 
	DB 0x25,0xFF,0xF6,0x0,0x0
;/  DUP		C0FF	XOR IF \ <in|de>cq	%eax
;/*	mov	rax,-0x08(rbp)	; 80406711 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0xC0FF,rax	; 80406715 
	DB 0x48,0x35,0xFF,0xC0,0x0,0x0
	test	rax,rax	; 8040671B 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040671E 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP2Bque+0x190 	; 80406722 
	DB 0xF,0x84,0x22,0x0,0x0,0x0
;/  F0FE AND
;/*	and	$0xF0FE,eax	; 80406728 
	DB 0x25,0xFE,0xF0,0x0,0x0
;/  DUP		D0F6	XOR IF \ n<ot|eg>	%eax
;/*	mov	rax,-0x08(rbp)	; 8040672D 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0xD0F6,rax	; 80406731 
	DB 0x48,0x35,0xF6,0xD0,0x0,0x0
	test	rax,rax	; 80406737 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040673A 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP2Bque+0x190 	; 8040673E 
	DB 0xF,0x84,0x6,0x0,0x0,0x0
;/ DROP  FALSE  EXIT
;/*	mov	$0x0,eax	; 80406744 
	DB 0xB8,0x0,0x0,0x0,0x0
	ret		; 80406749 C3 
;/   DUPENDCASE DROP TRUE ;
;/*	movq	$-0x1,rax	; 8040674A 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
	ret		; 80406751 C3 
;/
;/: DUP3B?[EBP]  ( u -- u FLAG )
;/  DUP FFFF AND


_DUP3BquexcEBPyc:
;/*	mov	rax,-0x08(rbp)	; 80406752 
	DB 0x48,0x89,0x45,0xF8
;/*	and	$0xFFFF,eax	; 80406756 
	DB 0x25,0xFF,0xFF,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040675B 
	DB 0x48,0x89,0x45,0xF0
;/   CASE
;/  DUP E7FC AND	4588	XOR IF \ mov    0x_(%rbp),%e<abcd>x | %e<abcd>x,0x_(%rbp)
;/*	and	$0xE7FC,eax	; 8040675F 
	DB 0x25,0xFC,0xE7,0x0,0x0
;/*	xor	$0x4588,eax	; 80406764 
	DB 0x35,0x88,0x45,0x0,0x0
	test	rax,rax	; 80406769 48 85 C0 
;/*	mov	-0x10(rbp),rax	; 8040676C 
	DB 0x48,0x8B,0x45,0xF0
;/*	lea	-0x08(rbp),rbp	; 80406770 
	DB 0x48,0x8D,0x6D,0xF8
;/*	jz	_DUP3BquexcEBPyc+0x77 	; 80406774 
	DB 0xF,0x84,0x4F,0x0,0x0,0x0
;/  DUP FFC5 AND	4501	XOR IF \ add|or|adc|sbb|and|sub|xor|cmp  0x_(%rbp),%eax | %eax,0x_(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040677A 
	DB 0x48,0x89,0x45,0xF8
;/*	and	$0xFFC5,eax	; 8040677E 
	DB 0x25,0xC5,0xFF,0x0,0x0
;/*	xor	$0x4501,eax	; 80406783 
	DB 0x35,0x1,0x45,0x0,0x0
	test	rax,rax	; 80406788 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040678B 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP3BquexcEBPyc+0x77 	; 8040678F 
	DB 0xF,0x84,0x34,0x0,0x0,0x0
;/  DUP		558B	XOR IF \ mov 0x00(%rbp),%edx
;/*	mov	rax,-0x08(rbp)	; 80406795 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x558B,rax	; 80406799 
	DB 0x48,0x35,0x8B,0x55,0x0,0x0
	test	rax,rax	; 8040679F 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804067A2 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP3BquexcEBPyc+0x77 	; 804067A6 
	DB 0xF,0x84,0x1D,0x0,0x0,0x0
;/  DUP		6DF7	XOR IF \ imulL   0x00(%rbp)
;/*	mov	rax,-0x08(rbp)	; 804067AC 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x6DF7,rax	; 804067B0 
	DB 0x48,0x35,0xF7,0x6D,0x0,0x0
	test	rax,rax	; 804067B6 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804067B9 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP3BquexcEBPyc+0x77 	; 804067BD 
	DB 0xF,0x84,0x6,0x0,0x0,0x0
;/            DROP FALSE EXIT
;/*	mov	$0x0,eax	; 804067C3 
	DB 0xB8,0x0,0x0,0x0,0x0
	ret		; 804067C8 C3 
;/  DUPENDCASE DROP TRUE ;
;/*	movq	$-0x1,rax	; 804067C9 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
	ret		; 804067D0 C3 
;/
;/: DUP3B? ( u -- u flg )
;/  DUP 


_DUP3Bque:
;/*	mov	rax,-0x08(rbp)	; 804067D1 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	rax,-0x10(rbp)	; 804067D5 
	DB 0x48,0x89,0x45,0xF0
;/  DUP FF AND 48 = IF 8 >> DUP2B? NIP BREAK  \ rex.w
;/*	and	$0xFF,eax	; 804067D9 
	DB 0x25,0xFF,0x0,0x0,0x0
;/*	xor	$0x48,rax	; 804067DE 
	DB 0x48,0x35,0x48,0x0,0x0,0x0
;/*	sub	$0x01,rax	; 804067E4 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 804067E8 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 804067EB 48 85 C0 
;/*	mov	-0x10(rbp),rax	; 804067EE 
	DB 0x48,0x8B,0x45,0xF0
;/*	lea	-0x08(rbp),rbp	; 804067F2 
	DB 0x48,0x8D,0x6D,0xF8
;/*	jz	_DUP3Bque+0x39 	; 804067F6 
	DB 0xF,0x84,0xE,0x0,0x0,0x0
;/*	shr	$0x08,rax	; 804067FC 
	DB 0x48,0xC1,0xE8,0x8
	call	_DUP2Bque	; 80406800 E8 B5 FD FF FF 
;/*	lea	0x08(rbp),rbp	; 80406805 
	DB 0x48,0x8D,0x6D,0x8
	ret		; 80406809 C3 
;/   CASE
;/ FFFFFF AND
;/*	and	$0xFFFFFF,eax	; 8040680A 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/  
;/  DUP		00B60F	XOR IF \ movzbl  (%rax),%eax 
;/*	mov	rax,-0x08(rbp)	; 8040680F 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0xB60F,rax	; 80406813 
	DB 0x48,0x35,0xF,0xB6,0x0,0x0
	test	rax,rax	; 80406819 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040681C 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP3Bque+0x179 	; 80406820 
	DB 0xF,0x84,0x24,0x1,0x0,0x0
;/  DUP		00B70F	XOR IF \ movzwl  (%rax),%eax 
;/*	mov	rax,-0x08(rbp)	; 80406826 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0xB70F,rax	; 8040682A 
	DB 0x48,0x35,0xF,0xB7,0x0,0x0
	test	rax,rax	; 80406830 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406833 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP3Bque+0x179 	; 80406837 
	DB 0xF,0x84,0xD,0x1,0x0,0x0
;/  DUP		C0BE0F	XOR IF \ movsbl %al,%eax
;/*	mov	rax,-0x08(rbp)	; 8040683D 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0xC0BE0F,rax	; 80406841 
	DB 0x48,0x35,0xF,0xBE,0xC0,0x0
	test	rax,rax	; 80406847 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040684A 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP3Bque+0x179 	; 8040684E 
	DB 0xF,0x84,0xF6,0x0,0x0,0x0
;/  DUP		C0BF0F	XOR IF \ movswl %ax,%eax
;/*	mov	rax,-0x08(rbp)	; 80406854 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0xC0BF0F,rax	; 80406858 
	DB 0x48,0x35,0xF,0xBF,0xC0,0x0
	test	rax,rax	; 8040685E 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406861 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP3Bque+0x179 	; 80406865 
	DB 0xF,0x84,0xDF,0x0,0x0,0x0
;/  DUP		C09F0F	XOR IF \ setg	%al
;/*	mov	rax,-0x08(rbp)	; 8040686B 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0xC09F0F,rax	; 8040686F 
	DB 0x48,0x35,0xF,0x9F,0xC0,0x0
	test	rax,rax	; 80406875 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406878 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP3Bque+0x179 	; 8040687C 
	DB 0xF,0x84,0xC8,0x0,0x0,0x0
;/  DUP		C09C0F	XOR IF \ setl	%al
;/*	mov	rax,-0x08(rbp)	; 80406882 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0xC09C0F,rax	; 80406886 
	DB 0x48,0x35,0xF,0x9C,0xC0,0x0
	test	rax,rax	; 8040688C 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040688F 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP3Bque+0x179 	; 80406893 
	DB 0xF,0x84,0xB1,0x0,0x0,0x0
;/  DUP		108966	XOR IF \ mov     %dx,(%rax)
;/*	mov	rax,-0x08(rbp)	; 80406899 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x108966,rax	; 8040689D 
	DB 0x48,0x35,0x66,0x89,0x10,0x0
	test	rax,rax	; 804068A3 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804068A6 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP3Bque+0x179 	; 804068AA 
	DB 0xF,0x84,0x9A,0x0,0x0,0x0
;/ FFFF AND
;/*	and	$0xFFFF,eax	; 804068B0 
	DB 0x25,0xFF,0xFF,0x0,0x0
;/  DUP		E883	XOR IF \ sub	$_,%rax
;/*	mov	rax,-0x08(rbp)	; 804068B5 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0xE883,rax	; 804068B9 
	DB 0x48,0x35,0x83,0xE8,0x0,0x0
	test	rax,rax	; 804068BF 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804068C2 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP3Bque+0x179 	; 804068C6 
	DB 0xF,0x84,0x7E,0x0,0x0,0x0
;/  DUP		408B	XOR IF \ mov    0x_(%rax),%eax
;/*	mov	rax,-0x08(rbp)	; 804068CC 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x408B,rax	; 804068D0 
	DB 0x48,0x35,0x8B,0x40,0x0,0x0
	test	rax,rax	; 804068D6 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804068D9 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP3Bque+0x179 	; 804068DD 
	DB 0xF,0x84,0x67,0x0,0x0,0x0
;/  DUP		408D	XOR IF \ lea    -0x70(%rax),%eax
;/*	mov	rax,-0x08(rbp)	; 804068E3 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x408D,rax	; 804068E7 
	DB 0x48,0x35,0x8D,0x40,0x0,0x0
	test	rax,rax	; 804068ED 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804068F0 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP3Bque+0x179 	; 804068F4 
	DB 0xF,0x84,0x50,0x0,0x0,0x0
;/  DUP		508D	XOR IF \ lea 0x_(%rax),%rdx
;/*	mov	rax,-0x08(rbp)	; 804068FA 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x508D,rax	; 804068FE 
	DB 0x48,0x35,0x8D,0x50,0x0,0x0
	test	rax,rax	; 80406904 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406907 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP3Bque+0x179 	; 8040690B 
	DB 0xF,0x84,0x39,0x0,0x0,0x0
;/  DUP		048D	XOR IF \ lea (%rax,%rax),%rax
;/*	mov	rax,-0x08(rbp)	; 80406911 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x48D,rax	; 80406915 
	DB 0x48,0x35,0x8D,0x4,0x0,0x0
	test	rax,rax	; 8040691B 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040691E 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP3Bque+0x179 	; 80406922 
	DB 0xF,0x84,0x22,0x0,0x0,0x0
;/C7FE AND
;/*	and	$0xC7FE,eax	; 80406928 
	DB 0x25,0xFE,0xC7,0x0,0x0
;/  DUP		C0C0	XOR IF \ rol..sar $X,%al
;/*	mov	rax,-0x08(rbp)	; 8040692D 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0xC0C0,rax	; 80406931 
	DB 0x48,0x35,0xC0,0xC0,0x0,0x0
	test	rax,rax	; 80406937 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040693A 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP3Bque+0x179 	; 8040693E 
	DB 0xF,0x84,0x6,0x0,0x0,0x0
;/	DROP FALSE EXIT
;/*	mov	$0x0,eax	; 80406944 
	DB 0xB8,0x0,0x0,0x0,0x0
	ret		; 80406949 C3 
;/  DUPENDCASE DROP TRUE ;
;/*	movq	$-0x1,rax	; 8040694A 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
	ret		; 80406951 C3 
;/
;/: DUP4B? ( u -- u flg )
;/  DUP FF AND 48 = IF DUP 8 >> DUP3B? NIP BREAK  \ rex.w


_DUP4Bque:
;/*	mov	rax,-0x08(rbp)	; 80406952 
	DB 0x48,0x89,0x45,0xF8
;/*	and	$0xFF,eax	; 80406956 
	DB 0x25,0xFF,0x0,0x0,0x0
;/*	xor	$0x48,rax	; 8040695B 
	DB 0x48,0x35,0x48,0x0,0x0,0x0
;/*	sub	$0x01,rax	; 80406961 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80406965 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80406968 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040696B 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP4Bque+0x39 	; 8040696F 
	DB 0xF,0x84,0x16,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80406975 
	DB 0x48,0x89,0x45,0xF8
;/*	shr	$0x08,rax	; 80406979 
	DB 0x48,0xC1,0xE8,0x8
;/*	lea	-0x08(rbp),rbp	; 8040697D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DUP3Bque	; 80406981 E8 4B FE FF FF 
;/*	lea	0x08(rbp),rbp	; 80406986 
	DB 0x48,0x8D,0x6D,0x8
	ret		; 8040698A C3 
;/   CASE
;/  DUP	40B60F	XOR IF \ movzbl X(%rax),%eax
;/*	mov	rax,-0x08(rbp)	; 8040698B 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x40B60F,rax	; 8040698F 
	DB 0x48,0x35,0xF,0xB6,0x40,0x0
	test	rax,rax	; 80406995 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406998 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP4Bque+0x66 	; 8040699C 
	DB 0xF,0x84,0x16,0x0,0x0,0x0
;/  DUP	40B70F	= EXIT \ movzwl	X(%rax),%eax             
;/*	mov	rax,-0x08(rbp)	; 804069A2 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x40B70F,rax	; 804069A6 
	DB 0x48,0x35,0xF,0xB7,0x40,0x0
;/*	sub	$0x01,rax	; 804069AC 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 804069B0 
	DB 0x48,0x19,0xC0
;/*	lea	-0x08(rbp),rbp	; 804069B3 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 804069B7 C3 
;/  DUPENDCASE  TRUE ;
;/*	mov	rax,-0x08(rbp)	; 804069B8 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x1,rax	; 804069BC 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804069C3 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 804069C7 C3 
;/
;/
;/: DUP5B? ( u -- u flg )
;/  DUP


_DUP5Bque:
;/*	mov	rax,-0x08(rbp)	; 804069C8 
	DB 0x48,0x89,0x45,0xF8
;/*	and	$0xFF,eax	; 804069CC 
	DB 0x25,0xFF,0x0,0x0,0x0
;/   CASE
;/ FF AND
;/*	mov	rax,-0x10(rbp)	; 804069D1 
	DB 0x48,0x89,0x45,0xF0
;/  DUP	B8 XOR IF \ mov    $_,%eax
;/*	xor	$0xB8,rax	; 804069D5 
	DB 0x48,0x35,0xB8,0x0,0x0,0x0
	test	rax,rax	; 804069DB 48 85 C0 
;/*	mov	-0x10(rbp),rax	; 804069DE 
	DB 0x48,0x8B,0x45,0xF0
;/*	lea	-0x08(rbp),rbp	; 804069E2 
	DB 0x48,0x8D,0x6D,0xF8
;/*	jz	_DUP5Bque+0x46 	; 804069E6 
	DB 0xF,0x84,0x22,0x0,0x0,0x0
;/ CF AND
;/*	and	$0xCF,eax	; 804069EC 
	DB 0x25,0xCF,0x0,0x0,0x0
;/  DUP	05 XOR IF \ sub	$_,%eax
;/*	mov	rax,-0x08(rbp)	; 804069F1 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x5,rax	; 804069F5 
	DB 0x48,0x35,0x5,0x0,0x0,0x0
	test	rax,rax	; 804069FB 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804069FE 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP5Bque+0x46 	; 80406A02 
	DB 0xF,0x84,0x6,0x0,0x0,0x0
;/	DROP FALSE EXIT
;/*	mov	$0x0,eax	; 80406A08 
	DB 0xB8,0x0,0x0,0x0,0x0
	ret		; 80406A0D C3 
;/  DUPENDCASE DROP TRUE ;
;/*	movq	$-0x1,rax	; 80406A0E 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
	ret		; 80406A15 C3 
;/
;/: DUP6B?  ( u -- u FLAG )
;/  DUP FF AND 48 = IF DUP 8 >> DUP5B? NIP BREAK  \ rex.w


_DUP6Bque:
;/*	mov	rax,-0x08(rbp)	; 80406A16 
	DB 0x48,0x89,0x45,0xF8
;/*	and	$0xFF,eax	; 80406A1A 
	DB 0x25,0xFF,0x0,0x0,0x0
;/*	xor	$0x48,rax	; 80406A1F 
	DB 0x48,0x35,0x48,0x0,0x0,0x0
;/*	sub	$0x01,rax	; 80406A25 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80406A29 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80406A2C 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406A2F 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP6Bque+0x39 	; 80406A33 
	DB 0xF,0x84,0x16,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80406A39 
	DB 0x48,0x89,0x45,0xF8
;/*	shr	$0x08,rax	; 80406A3D 
	DB 0x48,0xC1,0xE8,0x8
;/*	lea	-0x08(rbp),rbp	; 80406A41 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DUP5Bque	; 80406A45 E8 7E FF FF FF 
;/*	lea	0x08(rbp),rbp	; 80406A4A 
	DB 0x48,0x8D,0x6D,0x8
	ret		; 80406A4E C3 
;/  DUP FFFF AND
;/*	mov	rax,-0x08(rbp)	; 80406A4F 
	DB 0x48,0x89,0x45,0xF8
;/*	and	$0xFFFF,eax	; 80406A53 
	DB 0x25,0xFF,0xFF,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 80406A58 
	DB 0x48,0x89,0x45,0xF0
;/   CASE
;/  DUP		00C7	XOR IF \ movq	$_,(%rax)
;/*	xor	$0xC7,rax	; 80406A5C 
	DB 0x48,0x35,0xC7,0x0,0x0,0x0
	test	rax,rax	; 80406A62 48 85 C0 
;/*	mov	-0x10(rbp),rax	; 80406A65 
	DB 0x48,0x8B,0x45,0xF0
;/*	lea	-0x08(rbp),rbp	; 80406A69 
	DB 0x48,0x8D,0x6D,0xF8
;/*	jz	_DUP6Bque+0x63 	; 80406A6D 
	DB 0xF,0x84,0x6,0x0,0x0,0x0
;/            DROP FALSE EXIT
;/*	mov	$0x0,eax	; 80406A73 
	DB 0xB8,0x0,0x0,0x0,0x0
	ret		; 80406A78 C3 
;/  DUPENDCASE DROP TRUE ;
;/*	movq	$-0x1,rax	; 80406A79 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
	ret		; 80406A80 C3 
;/
;/: DUP4B?[EBP] ( u -- u flg )
;/  DUP 


_DUP4BquexcEBPyc:
;/*	mov	rax,-0x08(rbp)	; 80406A81 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	rax,-0x10(rbp)	; 80406A85 
	DB 0x48,0x89,0x45,0xF0
;/  DUP FF AND 48 = IF 8 >> DUP3B?[EBP] NIP BREAK
;/*	and	$0xFF,eax	; 80406A89 
	DB 0x25,0xFF,0x0,0x0,0x0
;/*	xor	$0x48,rax	; 80406A8E 
	DB 0x48,0x35,0x48,0x0,0x0,0x0
;/*	sub	$0x01,rax	; 80406A94 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80406A98 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80406A9B 48 85 C0 
;/*	mov	-0x10(rbp),rax	; 80406A9E 
	DB 0x48,0x8B,0x45,0xF0
;/*	lea	-0x08(rbp),rbp	; 80406AA2 
	DB 0x48,0x8D,0x6D,0xF8
;/*	jz	_DUP4BquexcEBPyc+0x39 	; 80406AA6 
	DB 0xF,0x84,0xE,0x0,0x0,0x0
;/*	shr	$0x08,rax	; 80406AAC 
	DB 0x48,0xC1,0xE8,0x8
	call	_DUP3BquexcEBPyc	; 80406AB0 E8 9D FC FF FF 
;/*	lea	0x08(rbp),rbp	; 80406AB5 
	DB 0x48,0x8D,0x6D,0x8
	ret		; 80406AB9 C3 
;/   CASE
;/ FFFFFF AND
;/*	and	$0xFFFFFF,eax	; 80406ABA 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/  DUP FFF0FF AND 45400F	XOR IF \ cmov_  0x0(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 80406ABF 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	rax,-0x10(rbp)	; 80406AC3 
	DB 0x48,0x89,0x45,0xF0
;/*	and	$0xFFF0FF,eax	; 80406AC7 
	DB 0x25,0xFF,0xF0,0xFF,0x0
;/*	xor	$0x45400F,eax	; 80406ACC 
	DB 0x35,0xF,0x40,0x45,0x0
	test	rax,rax	; 80406AD1 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406AD4 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP4BquexcEBPyc+0x63 	; 80406AD8 
	DB 0xF,0x84,0x6,0x0,0x0,0x0
;/            DROP FALSE EXIT
;/*	mov	$0x0,eax	; 80406ADE 
	DB 0xB8,0x0,0x0,0x0,0x0
	ret		; 80406AE3 C3 
;/  DUPENDCASE DROP TRUE ;
;/*	movq	$-0x1,rax	; 80406AE4 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
	ret		; 80406AEB C3 
;/
;/: DUP5B?[EBP] ( u -- u flg )
;/  DUP FF AND 48 = IF DUP 8 >> DUP4B?[EBP] NIP BREAK  \ 3b have meanings


_DUP5BquexcEBPyc:
;/*	mov	rax,-0x08(rbp)	; 80406AEC 
	DB 0x48,0x89,0x45,0xF8
;/*	and	$0xFF,eax	; 80406AF0 
	DB 0x25,0xFF,0x0,0x0,0x0
;/*	xor	$0x48,rax	; 80406AF5 
	DB 0x48,0x35,0x48,0x0,0x0,0x0
;/*	sub	$0x01,rax	; 80406AFB 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80406AFF 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80406B02 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406B05 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP5BquexcEBPyc+0x39 	; 80406B09 
	DB 0xF,0x84,0x16,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80406B0F 
	DB 0x48,0x89,0x45,0xF8
;/*	shr	$0x08,rax	; 80406B13 
	DB 0x48,0xC1,0xE8,0x8
;/*	lea	-0x08(rbp),rbp	; 80406B17 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DUP4BquexcEBPyc	; 80406B1B E8 61 FF FF FF 
;/*	lea	0x08(rbp),rbp	; 80406B20 
	DB 0x48,0x8D,0x6D,0x8
	ret		; 80406B24 C3 
;/  0 ;
;/*	mov	rax,-0x08(rbp)	; 80406B25 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 80406B29 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406B2E 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 80406B32 C3 
;/
;/: DUP6B?IP  ( u -- u FLAG )
;/  DUP


_DUP6BqueIP:
;/*	mov	rax,-0x08(rbp)	; 80406B33 
	DB 0x48,0x89,0x45,0xF8
;/*	and	$0xFFFF,eax	; 80406B37 
	DB 0x25,0xFF,0xFF,0x0,0x0
;/   CASE
;/  FFFF AND
;/*	mov	rax,-0x10(rbp)	; 80406B3C 
	DB 0x48,0x89,0x45,0xF0
;/  DUP		058D	XOR IF \ lea     X(%rip),%rax
;/*	xor	$0x58D,rax	; 80406B40 
	DB 0x48,0x35,0x8D,0x5,0x0,0x0
	test	rax,rax	; 80406B46 48 85 C0 
;/*	mov	-0x10(rbp),rax	; 80406B49 
	DB 0x48,0x8B,0x45,0xF0
;/*	lea	-0x08(rbp),rbp	; 80406B4D 
	DB 0x48,0x8D,0x6D,0xF8
;/*	jz	_DUP6BqueIP+0x62 	; 80406B51 
	DB 0xF,0x84,0x3E,0x0,0x0,0x0
;/  FFFD AND	\ direction independent
;/*	and	$0xFFFD,eax	; 80406B57 
	DB 0x25,0xFD,0xFF,0x0,0x0
;/  DUP		0589	XOR IF \ mov     %rax,X(%rip)
;/*	mov	rax,-0x08(rbp)	; 80406B5C 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x589,rax	; 80406B60 
	DB 0x48,0x35,0x89,0x5,0x0,0x0
	test	rax,rax	; 80406B66 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406B69 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP6BqueIP+0x62 	; 80406B6D 
	DB 0xF,0x84,0x22,0x0,0x0,0x0
;/  FFC0 AND	\
;/*	and	$0xFFC0,eax	; 80406B73 
	DB 0x25,0xC0,0xFF,0x0,0x0
;/  DUP		0500	XOR IF \ add .. cmp   %rax|al,X(%rip)
;/*	mov	rax,-0x08(rbp)	; 80406B78 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x500,rax	; 80406B7C 
	DB 0x48,0x35,0x0,0x5,0x0,0x0
	test	rax,rax	; 80406B82 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406B85 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP6BqueIP+0x62 	; 80406B89 
	DB 0xF,0x84,0x6,0x0,0x0,0x0
;/            DROP FALSE EXIT
;/*	mov	$0x0,eax	; 80406B8F 
	DB 0xB8,0x0,0x0,0x0,0x0
	ret		; 80406B94 C3 
;/  DUPENDCASE DROP TRUE ;
;/*	movq	$-0x1,rax	; 80406B95 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
	ret		; 80406B9C C3 
;/
;/: DUP7B? ( l -- l flg )
;/  DUP FF AND 48 = IF DUP 8 >> DUP6B? NIP BREAK  \ rex.w


_DUP7Bque:
;/*	mov	rax,-0x08(rbp)	; 80406B9D 
	DB 0x48,0x89,0x45,0xF8
;/*	and	$0xFF,eax	; 80406BA1 
	DB 0x25,0xFF,0x0,0x0,0x0
;/*	xor	$0x48,rax	; 80406BA6 
	DB 0x48,0x35,0x48,0x0,0x0,0x0
;/*	sub	$0x01,rax	; 80406BAC 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80406BB0 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80406BB3 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406BB6 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP7Bque+0x39 	; 80406BBA 
	DB 0xF,0x84,0x16,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80406BC0 
	DB 0x48,0x89,0x45,0xF8
;/*	shr	$0x08,rax	; 80406BC4 
	DB 0x48,0xC1,0xE8,0x8
;/*	lea	-0x08(rbp),rbp	; 80406BC8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DUP6Bque	; 80406BCC E8 45 FE FF FF 
;/*	lea	0x08(rbp),rbp	; 80406BD1 
	DB 0x48,0x8D,0x6D,0x8
	ret		; 80406BD5 C3 
;/ FALSE ;
;/*	mov	rax,-0x08(rbp)	; 80406BD6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 80406BDA 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406BDF 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 80406BE3 C3 
;/
;/: DUP7B?IP ( l -- l flg )
;/  DUP FF AND 48 = IF DUP 8 >> DUP6B?IP NIP BREAK  \ rex.w


_DUP7BqueIP:
;/*	mov	rax,-0x08(rbp)	; 80406BE4 
	DB 0x48,0x89,0x45,0xF8
;/*	and	$0xFF,eax	; 80406BE8 
	DB 0x25,0xFF,0x0,0x0,0x0
;/*	xor	$0x48,rax	; 80406BED 
	DB 0x48,0x35,0x48,0x0,0x0,0x0
;/*	sub	$0x01,rax	; 80406BF3 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80406BF7 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80406BFA 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406BFD 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DUP7BqueIP+0x39 	; 80406C01 
	DB 0xF,0x84,0x16,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80406C07 
	DB 0x48,0x89,0x45,0xF8
;/*	shr	$0x08,rax	; 80406C0B 
	DB 0x48,0xC1,0xE8,0x8
;/*	lea	-0x08(rbp),rbp	; 80406C0F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DUP6BqueIP	; 80406C13 E8 1B FF FF FF 
;/*	lea	0x08(rbp),rbp	; 80406C18 
	DB 0x48,0x8D,0x6D,0x8
	ret		; 80406C1C C3 
;/ FALSE ;
;/*	mov	rax,-0x08(rbp)	; 80406C1D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x0,eax	; 80406C21 
	DB 0xB8,0x0,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80406C26 
	DB 0x48,0x8D,0x6D,0xF8
	ret		; 80406C2A C3 
;/
;/: NEWRAX0  ( addr -- flg ) \ 0 set rax wichout rax using
;/ L@ DUP FF AND 48 = IF 8 >> THEN \ rax -> eax


_NEWRAX0:
;/*	mov	(rax),eax	; 80406C2B 
	DB 0x8B,0x0
;/*	mov	rax,-0x08(rbp)	; 80406C2D 
	DB 0x48,0x89,0x45,0xF8
;/*	and	$0xFF,eax	; 80406C31 
	DB 0x25,0xFF,0x0,0x0,0x0
;/*	xor	$0x48,rax	; 80406C36 
	DB 0x48,0x35,0x48,0x0,0x0,0x0
;/*	sub	$0x01,rax	; 80406C3C 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80406C40 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80406C43 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406C46 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_NEWRAX0+0x29 	; 80406C4A 
	DB 0xF,0x84,0x4,0x0,0x0,0x0
;/*	shr	$0x08,rax	; 80406C50 
	DB 0x48,0xC1,0xE8,0x8
;/   CASE
;/ FFFFFF AND
;/*	and	$0xFFFFFF,eax	; 80406C54 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/ DUP F0894C XOR IF \ mov     %r14,%rax
;/*	mov	rax,-0x08(rbp)	; 80406C59 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0xF0894C,rax	; 80406C5D 
	DB 0x48,0x35,0x4C,0x89,0xF0,0x0
	test	rax,rax	; 80406C63 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406C66 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_NEWRAX0+0xF8 	; 80406C6A 
	DB 0xF,0x84,0xB3,0x0,0x0,0x0
;/ FFFF AND
;/*	and	$0xFFFF,eax	; 80406C70 
	DB 0x25,0xFF,0xFF,0x0,0x0
;/ DUP	458B XOR IF \	mov    X(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 80406C75 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x458B,rax	; 80406C79 
	DB 0x48,0x35,0x8B,0x45,0x0,0x0
	test	rax,rax	; 80406C7F 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406C82 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_NEWRAX0+0xF8 	; 80406C86 
	DB 0xF,0x84,0x97,0x0,0x0,0x0
;/ DUP	058a XOR IF \	mov    X(%rip),%al
;/*	mov	rax,-0x08(rbp)	; 80406C8C 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x58A,rax	; 80406C90 
	DB 0x48,0x35,0x8A,0x5,0x0,0x0
	test	rax,rax	; 80406C96 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406C99 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_NEWRAX0+0xF8 	; 80406C9D 
	DB 0xF,0x84,0x80,0x0,0x0,0x0
;/ DUP	058b XOR IF \	mov    X(%rip),%eax
;/*	mov	rax,-0x08(rbp)	; 80406CA3 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x58B,rax	; 80406CA7 
	DB 0x48,0x35,0x8B,0x5,0x0,0x0
	test	rax,rax	; 80406CAD 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406CB0 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_NEWRAX0+0xF8 	; 80406CB4 
	DB 0xF,0x84,0x69,0x0,0x0,0x0
;/ DUP	058d XOR IF \	lea    X(%rip),%eax
;/*	mov	rax,-0x08(rbp)	; 80406CBA 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x58D,rax	; 80406CBE 
	DB 0x48,0x35,0x8D,0x5,0x0,0x0
	test	rax,rax	; 80406CC4 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406CC7 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_NEWRAX0+0xF8 	; 80406CCB 
	DB 0xF,0x84,0x52,0x0,0x0,0x0
;/ DUP	D089 XOR IF \	mov     %rdx,%rax
;/*	mov	rax,-0x08(rbp)	; 80406CD1 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0xD089,rax	; 80406CD5 
	DB 0x48,0x35,0x89,0xD0,0x0,0x0
	test	rax,rax	; 80406CDB 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406CDE 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_NEWRAX0+0xF8 	; 80406CE2 
	DB 0xF,0x84,0x3B,0x0,0x0,0x0
;/ DUP	C0C7 XOR IF \	movq    $-0x2CBE,%rax
;/*	mov	rax,-0x08(rbp)	; 80406CE8 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0xC0C7,rax	; 80406CEC 
	DB 0x48,0x35,0xC7,0xC0,0x0,0x0
	test	rax,rax	; 80406CF2 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406CF5 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_NEWRAX0+0xF8 	; 80406CF9 
	DB 0xF,0x84,0x24,0x0,0x0,0x0
;/ FF AND
;/*	and	$0xFF,eax	; 80406CFF 
	DB 0x25,0xFF,0x0,0x0,0x0
;/ DUP	B8 XOR IF \	 mov     $X,%eax
;/*	mov	rax,-0x08(rbp)	; 80406D04 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0xB8,rax	; 80406D08 
	DB 0x48,0x35,0xB8,0x0,0x0,0x0
	test	rax,rax	; 80406D0E 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406D11 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_NEWRAX0+0xF8 	; 80406D15 
	DB 0xF,0x84,0x8,0x0,0x0,0x0
;/ DROP TRUE EXIT
;/*	movq	$-0x1,rax	; 80406D1B 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
	ret		; 80406D22 C3 
;/ DUPENDCASE DROP FALSE ;
;/*	mov	$0x0,eax	; 80406D23 
	DB 0xB8,0x0,0x0,0x0,0x0
	ret		; 80406D28 C3 
;/
;/: NEWRAX0+  ( addr -- flg ) \ NEWRAX0 with a ban on deletion
;/  DUP C@ 58 XOR IF \ pop     %rax 


_NEWRAX0add:
;/*	mov	rax,-0x08(rbp)	; 80406D29 
	DB 0x48,0x89,0x45,0xF8
;/*	movzb	(rax),eax	; 80406D2D 
	DB 0xF,0xB6,0x0
;/*	xor	$0x58,al	; 80406D30 
	DB 0x34,0x58
	test	rax,rax	; 80406D32 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406D35 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_NEWRAX0add+0x1C 	; 80406D39 
	DB 0xF,0x84,0x6,0x0,0x0,0x0
;/  NEWRAX0
	call	_NEWRAX0	; 80406D3F E8 E7 FE FF FF 
;/  BREAK DROP FALSE ;
	ret		; 80406D44 C3 
;/*	mov	$0x0,eax	; 80406D45 
	DB 0xB8,0x0,0x0,0x0,0x0
	ret		; 80406D4A C3 
;/
;/: AX_apply<> ( addr -- flg )  \ 0 is not AX application
;/ L@ DUP FF AND 48 = IF 8 >> THEN \ rax -> eax


_AX_applylessgreat:
;/*	mov	(rax),eax	; 80406D4B 
	DB 0x8B,0x0
;/*	mov	rax,-0x08(rbp)	; 80406D4D 
	DB 0x48,0x89,0x45,0xF8
;/*	and	$0xFF,eax	; 80406D51 
	DB 0x25,0xFF,0x0,0x0,0x0
;/*	xor	$0x48,rax	; 80406D56 
	DB 0x48,0x35,0x48,0x0,0x0,0x0
;/*	sub	$0x01,rax	; 80406D5C 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80406D60 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80406D63 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406D66 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_AX_applylessgreat+0x29 	; 80406D6A 
	DB 0xF,0x84,0x4,0x0,0x0,0x0
;/*	shr	$0x08,rax	; 80406D70 
	DB 0x48,0xC1,0xE8,0x8
;/   CASE
;/ FFFFFF AND
;/*	and	$0xFFFFFF,eax	; 80406D74 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/ DUP 75894C XOR IF \ mov     %r14,-0x10(%rbp)
;/*	mov	rax,-0x08(rbp)	; 80406D79 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x75894C,rax	; 80406D7D 
	DB 0x48,0x35,0x4C,0x89,0x75,0x0
	test	rax,rax	; 80406D83 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406D86 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_AX_applylessgreat+0xB3 	; 80406D8A 
	DB 0xF,0x84,0x6E,0x0,0x0,0x0
;/ FFFF AND
;/*	and	$0xFFFF,eax	; 80406D90 
	DB 0x25,0xFF,0xFF,0x0,0x0
;/ DUP d285 XOR IF \ test   %rdx,%rdx
;/*	mov	rax,-0x08(rbp)	; 80406D95 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0xD285,rax	; 80406D99 
	DB 0x48,0x35,0x85,0xD2,0x0,0x0
	test	rax,rax	; 80406D9F 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406DA2 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_AX_applylessgreat+0xB3 	; 80406DA6 
	DB 0xF,0x84,0x52,0x0,0x0,0x0
;/ DUP 35FF XOR IF \ pushq   X (%rip)
;/*	mov	rax,-0x08(rbp)	; 80406DAC 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x35FF,rax	; 80406DB0 
	DB 0x48,0x35,0xFF,0x35,0x0,0x0
	test	rax,rax	; 80406DB6 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406DB9 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_AX_applylessgreat+0xB3 	; 80406DBD 
	DB 0xF,0x84,0x3B,0x0,0x0,0x0
;/ DUP 45C7 XOR IF \ mov<lq>    $0x4D,-0x08(%rbp)
;/*	mov	rax,-0x08(rbp)	; 80406DC3 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x45C7,rax	; 80406DC7 
	DB 0x48,0x35,0xC7,0x45,0x0,0x0
	test	rax,rax	; 80406DCD 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406DD0 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_AX_applylessgreat+0xB3 	; 80406DD4 
	DB 0xF,0x84,0x24,0x0,0x0,0x0
;/ FF AND
;/*	and	$0xFF,eax	; 80406DDA 
	DB 0x25,0xFF,0x0,0x0,0x0
;/ DUP	B1 XOR IF \ mov     $0x03,%cl
;/*	mov	rax,-0x08(rbp)	; 80406DDF 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0xB1,rax	; 80406DE3 
	DB 0x48,0x35,0xB1,0x0,0x0,0x0
	test	rax,rax	; 80406DE9 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406DEC 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_AX_applylessgreat+0xB3 	; 80406DF0 
	DB 0xF,0x84,0x8,0x0,0x0,0x0
;/ DROP TRUE EXIT
;/*	movq	$-0x1,rax	; 80406DF6 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
	ret		; 80406DFD C3 
;/ DUPENDCASE DROP FALSE ;
;/*	mov	$0x0,eax	; 80406DFE 
	DB 0xB8,0x0,0x0,0x0,0x0
	ret		; 80406E03 C3 
;/
;/: ?ChRAX<> ( addr -- flg ) \ 0 is't chench rax
;/ DUP NEWRAX0+ 0= IF DROP TRUE BREAK


_queChRAXlessgreat:
;/*	mov	rax,-0x08(rbp)	; 80406E04 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	-0x08(rbp),rbp	; 80406E08 
	DB 0x48,0x8D,0x6D,0xF8
	call	_NEWRAX0add	; 80406E0C E8 18 FF FF FF 
;/*	sub	$0x01,rax	; 80406E11 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80406E15 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80406E18 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406E1B 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406E1F 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_queChRAXlessgreat+0x2D 	; 80406E23 
	DB 0xF,0x84,0x8,0x0,0x0,0x0
;/*	movq	$-0x1,rax	; 80406E29 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
	ret		; 80406E30 C3 
;/ DUP AX_apply<> 0= IF DROP FALSE BREAK
;/*	mov	rax,-0x08(rbp)	; 80406E31 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	-0x08(rbp),rbp	; 80406E35 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AX_applylessgreat	; 80406E39 E8 D FF FF FF 
;/*	sub	$0x01,rax	; 80406E3E 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80406E42 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80406E45 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406E48 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406E4C 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_queChRAXlessgreat+0x58 	; 80406E50 
	DB 0xF,0x84,0x6,0x0,0x0,0x0
;/*	mov	$0x0,eax	; 80406E56 
	DB 0xB8,0x0,0x0,0x0,0x0
	ret		; 80406E5B C3 
;/ L@ DUP F8 AND 48 = IF 8 >> THEN \ rax -> eax
;/*	mov	(rax),eax	; 80406E5C 
	DB 0x8B,0x0
;/*	mov	rax,-0x08(rbp)	; 80406E5E 
	DB 0x48,0x89,0x45,0xF8
;/*	and	$0xF8,eax	; 80406E62 
	DB 0x25,0xF8,0x0,0x0,0x0
;/*	xor	$0x48,rax	; 80406E67 
	DB 0x48,0x35,0x48,0x0,0x0,0x0
;/*	sub	$0x01,rax	; 80406E6D 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80406E71 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80406E74 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406E77 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_queChRAXlessgreat+0x81 	; 80406E7B 
	DB 0xF,0x84,0x4,0x0,0x0,0x0
;/*	shr	$0x08,rax	; 80406E81 
	DB 0x48,0xC1,0xE8,0x8
;/	CASE
;/ FFFFFF AND
;/*	and	$0xFFFFFF,eax	; 80406E85 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/ DUP 243C83 XOR IF \ cmp    $X,(%rsp)
;/*	mov	rax,-0x08(rbp)	; 80406E8A 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x243C83,rax	; 80406E8E 
	DB 0x48,0x35,0x83,0x3C,0x24,0x0
	test	rax,rax	; 80406E94 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406E97 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_queChRAXlessgreat+0x186 	; 80406E9B 
	DB 0xF,0x84,0xE9,0x0,0x0,0x0
;/ DUP 583880 XOR IF \ cmpb   $X,(%rax)
;/*	mov	rax,-0x08(rbp)	; 80406EA1 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x583880,rax	; 80406EA5 
	DB 0x48,0x35,0x80,0x38,0x58,0x0
	test	rax,rax	; 80406EAB 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406EAE 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_queChRAXlessgreat+0x186 	; 80406EB2 
	DB 0xF,0x84,0xD2,0x0,0x0,0x0
;/ FFFF AND
;/*	and	$0xFFFF,eax	; 80406EB8 
	DB 0x25,0xFF,0xFF,0x0,0x0
;/
;/ DUP 0601 XOR IF \ add    %eax,(%rsi) add    %rax,(%r14)
;/*	mov	rax,-0x08(rbp)	; 80406EBD 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x601,rax	; 80406EC1 
	DB 0x48,0x35,0x1,0x6,0x0,0x0
	test	rax,rax	; 80406EC7 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406ECA 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_queChRAXlessgreat+0x186 	; 80406ECE 
	DB 0xF,0x84,0xB6,0x0,0x0,0x0
;/ DUP 0689 XOR IF \ mov    %eax,(%rsi) mov    %rax,(%r14)
;/*	mov	rax,-0x08(rbp)	; 80406ED4 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x689,rax	; 80406ED8 
	DB 0x48,0x35,0x89,0x6,0x0,0x0
	test	rax,rax	; 80406EDE 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406EE1 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_queChRAXlessgreat+0x186 	; 80406EE5 
	DB 0xF,0x84,0x9F,0x0,0x0,0x0
;/ DUP F883 XOR IF \ cmp	$-0x01,%eax
;/*	mov	rax,-0x08(rbp)	; 80406EEB 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0xF883,rax	; 80406EEF 
	DB 0x48,0x35,0x83,0xF8,0x0,0x0
	test	rax,rax	; 80406EF5 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406EF8 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_queChRAXlessgreat+0x186 	; 80406EFC 
	DB 0xF,0x84,0x88,0x0,0x0,0x0
;/ DUP 00FF XOR IF \ incl   (%rax)
;/*	mov	rax,-0x08(rbp)	; 80406F02 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0xFF,rax	; 80406F06 
	DB 0x48,0x35,0xFF,0x0,0x0,0x0
	test	rax,rax	; 80406F0C 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406F0F 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_queChRAXlessgreat+0x186 	; 80406F13 
	DB 0xF,0x84,0x71,0x0,0x0,0x0
;/
;/ DUP FFF0 AND	0580 XOR IF \ mov     %eax,dcomasubSET+0x5 (%rip) ...
;/*	mov	rax,-0x08(rbp)	; 80406F19 
	DB 0x48,0x89,0x45,0xF8
;/*	and	$0xFFF0,eax	; 80406F1D 
	DB 0x25,0xF0,0xFF,0x0,0x0
;/*	xor	$0x580,eax	; 80406F22 
	DB 0x35,0x80,0x5,0x0,0x0
	test	rax,rax	; 80406F27 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406F2A 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_queChRAXlessgreat+0x186 	; 80406F2E 
	DB 0xF,0x84,0x56,0x0,0x0,0x0
;/ DUP		05C7 XOR IF \ mov     $X,Y(%rip)
;/*	mov	rax,-0x08(rbp)	; 80406F34 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x5C7,rax	; 80406F38 
	DB 0x48,0x35,0xC7,0x5,0x0,0x0
	test	rax,rax	; 80406F3E 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406F41 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_queChRAXlessgreat+0x186 	; 80406F45 
	DB 0xF,0x84,0x3F,0x0,0x0,0x0
;/ DUP FFF0 AND	5580 XOR IF \ mov|lea     0x08(%rbp),%rdx ...
;/*	mov	rax,-0x08(rbp)	; 80406F4B 
	DB 0x48,0x89,0x45,0xF8
;/*	and	$0xFFF0,eax	; 80406F4F 
	DB 0x25,0xF0,0xFF,0x0,0x0
;/*	xor	$0x5580,eax	; 80406F54 
	DB 0x35,0x80,0x55,0x0,0x0
	test	rax,rax	; 80406F59 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406F5C 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_queChRAXlessgreat+0x186 	; 80406F60 
	DB 0xF,0x84,0x24,0x0,0x0,0x0
;/ F8 AND
;/*	and	$0xF8,eax	; 80406F66 
	DB 0x25,0xF8,0x0,0x0,0x0
;/ DUP	38 XOR IF \ cmp
;/*	mov	rax,-0x08(rbp)	; 80406F6B 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x38,rax	; 80406F6F 
	DB 0x48,0x35,0x38,0x0,0x0,0x0
	test	rax,rax	; 80406F75 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406F78 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_queChRAXlessgreat+0x186 	; 80406F7C 
	DB 0xF,0x84,0x8,0x0,0x0,0x0
;/ DROP TRUE EXIT
;/*	movq	$-0x1,rax	; 80406F82 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
	ret		; 80406F89 C3 
;/ DUPENDCASE DROP FALSE ;
;/*	mov	$0x0,eax	; 80406F8A 
	DB 0xB8,0x0,0x0,0x0,0x0
	ret		; 80406F8F C3 
;/
;/: ?ChRDX<> ( addr -- flg ) \ 0 is't chench rax
;/ DUP NEWRAX0+ 0= IF DROP FALSE BREAK


_queChRDXlessgreat:
;/*	mov	rax,-0x08(rbp)	; 80406F90 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	-0x08(rbp),rbp	; 80406F94 
	DB 0x48,0x8D,0x6D,0xF8
	call	_NEWRAX0add	; 80406F98 E8 8C FD FF FF 
;/*	sub	$0x01,rax	; 80406F9D 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80406FA1 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80406FA4 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80406FA7 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80406FAB 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_queChRDXlessgreat+0x2B 	; 80406FAF 
	DB 0xF,0x84,0x6,0x0,0x0,0x0
;/*	mov	$0x0,eax	; 80406FB5 
	DB 0xB8,0x0,0x0,0x0,0x0
	ret		; 80406FBA C3 
;/DROP TRUE
;/*	movq	$-0x1,rax	; 80406FBB 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/;
	ret		; 80406FC2 C3 
;/
;/: DX_apply<> ( addr -- flg )  \ 0 is not DX application
;/ L@ DUP F8 AND 48 = IF 8 >> THEN \ rax -> eax


_DX_applylessgreat:
;/*	mov	(rax),eax	; 80406FC3 
	DB 0x8B,0x0
;/*	mov	rax,-0x08(rbp)	; 80406FC5 
	DB 0x48,0x89,0x45,0xF8
;/*	and	$0xF8,eax	; 80406FC9 
	DB 0x25,0xF8,0x0,0x0,0x0
;/*	xor	$0x48,rax	; 80406FCE 
	DB 0x48,0x35,0x48,0x0,0x0,0x0
;/*	sub	$0x01,rax	; 80406FD4 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80406FD8 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80406FDB 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406FDE 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DX_applylessgreat+0x29 	; 80406FE2 
	DB 0xF,0x84,0x4,0x0,0x0,0x0
;/*	shr	$0x08,rax	; 80406FE8 
	DB 0x48,0xC1,0xE8,0x8
;/   CASE
;/ FFFF AND
;/*	and	$0xFFFF,eax	; 80406FEC 
	DB 0x25,0xFF,0xFF,0x0,0x0
;/DUP	058d XOR IF	\ lea     X(%rip),%eax
;/*	mov	rax,-0x08(rbp)	; 80406FF1 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x58D,rax	; 80406FF5 
	DB 0x48,0x35,0x8D,0x5,0x0,0x0
	test	rax,rax	; 80406FFB 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80406FFE 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DX_applylessgreat+0xFB 	; 80407002 
	DB 0xF,0x84,0xB6,0x0,0x0,0x0
;/DUP	408B XOR IF	\ mov	-0x08(%rax),%eax
;/*	mov	rax,-0x08(rbp)	; 80407008 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x408B,rax	; 8040700C 
	DB 0x48,0x35,0x8B,0x40,0x0,0x0
	test	rax,rax	; 80407012 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80407015 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DX_applylessgreat+0xFB 	; 80407019 
	DB 0xF,0x84,0x9F,0x0,0x0,0x0
;/DUP	458B XOR IF	\ mov	-0x08(%rbp),%eax
;/*	mov	rax,-0x08(rbp)	; 8040701F 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x458B,rax	; 80407023 
	DB 0x48,0x35,0x8B,0x45,0x0,0x0
	test	rax,rax	; 80407029 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040702C 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DX_applylessgreat+0xFB 	; 80407030 
	DB 0xF,0x84,0x88,0x0,0x0,0x0
;/DUP	008B XOR IF	\ mov	 (%rax),%eax
;/*	mov	rax,-0x08(rbp)	; 80407036 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x8B,rax	; 8040703A 
	DB 0x48,0x35,0x8B,0x0,0x0,0x0
	test	rax,rax	; 80407040 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80407043 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DX_applylessgreat+0xFB 	; 80407047 
	DB 0xF,0x84,0x71,0x0,0x0,0x0
;/DUP	FFC0 AND 4500 XOR IF	\ add .. cmp -0x08(%rbp),%eax
;/*	mov	rax,-0x08(rbp)	; 8040704D 
	DB 0x48,0x89,0x45,0xF8
;/*	and	$0xFFC0,eax	; 80407051 
	DB 0x25,0xC0,0xFF,0x0,0x0
;/*	xor	$0x4500,eax	; 80407056 
	DB 0x35,0x0,0x45,0x0,0x0
	test	rax,rax	; 8040705B 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040705E 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DX_applylessgreat+0xFB 	; 80407062 
	DB 0xF,0x84,0x56,0x0,0x0,0x0
;/DUP	f089 XOR IF	\ mov    %esi,%eax mov    %r14,%rax
;/*	mov	rax,-0x08(rbp)	; 80407068 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	rax,-0x10(rbp)	; 8040706C 
	DB 0x48,0x89,0x45,0xF0
;/*	xor	$0xF089,rax	; 80407070 
	DB 0x48,0x35,0x89,0xF0,0x0,0x0
	test	rax,rax	; 80407076 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80407079 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DX_applylessgreat+0xFB 	; 8040707D 
	DB 0xF,0x84,0x3B,0x0,0x0,0x0
;/  FF AND
;/*	and	$0xFF,eax	; 80407083 
	DB 0x25,0xFF,0x0,0x0,0x0
;/DUP	B8 XOR IF	\ mov     $0x0,%eax
;/*	mov	rax,-0x08(rbp)	; 80407088 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0xB8,rax	; 8040708C 
	DB 0x48,0x35,0xB8,0x0,0x0,0x0
	test	rax,rax	; 80407092 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80407095 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DX_applylessgreat+0xFB 	; 80407099 
	DB 0xF,0x84,0x1F,0x0,0x0,0x0
;/DUP	58 XOR IF	\ pop     %rax
;/*	mov	rax,-0x08(rbp)	; 8040709F 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x58,rax	; 804070A3 
	DB 0x48,0x35,0x58,0x0,0x0,0x0
	test	rax,rax	; 804070A9 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804070AC 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_DX_applylessgreat+0xFB 	; 804070B0 
	DB 0xF,0x84,0x8,0x0,0x0,0x0
;/
;/ DROP TRUE EXIT
;/*	movq	$-0x1,rax	; 804070B6 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
	ret		; 804070BD C3 
;/ DUPENDCASE DROP FALSE ;
;/*	mov	$0x0,eax	; 804070BE 
	DB 0xB8,0x0,0x0,0x0,0x0
	ret		; 804070C3 C3 
;/
;/: -EBPCLR  ( FLAG OPX  -- FLAG' )
;/   DUP @  :-SET  U< IF DROP BREAK


_subEBPCLR:
;/*	mov	rax,-0x08(rbp)	; 804070C4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	(rax),rax	; 804070C8 
	DB 0x48,0x8B,0x0
;/*	cmp	_dcomasubSET+0x5 (%rip),rax	; 804070CB 
	DB 0x48,0x3B,0x5,0x9A,0xEB,0xFF,0xFF
;/*	sbb	rax,rax	; 804070D2 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 804070D5 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804070D8 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_subEBPCLR+0x27 	; 804070DC 
	DB 0xF,0x84,0x9,0x0,0x0,0x0
;/*	mov	0x00(rbp),rax	; 804070E2 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804070E6 
	DB 0x48,0x8D,0x6D,0x8
	ret		; 804070EA C3 
;/  OFF-EBP CELL- TO OFF-EBP
;/*	mov	rax,-0x08(rbp)	; 804070EB 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OFFsubEBP+0x5 (%rip),rax	; 804070EF 
	DB 0x48,0x8B,0x5,0x22,0xEA,0xFF,0xFF
;/*	lea	-0x08(rax),rax	; 804070F6 
	DB 0x48,0x8D,0x40,0xF8
;/*	mov	rax,_OFFsubEBP+0x5 (%rip)	; 804070FA 
	DB 0x48,0x89,0x5,0x17,0xEA,0xFF,0xFF
;/*	mov	-0x08(rbp),rax	; 80407101 
	DB 0x48,0x8B,0x45,0xF8
;/  BEGIN
;/	DUP @  4 + THERE  U> IF CELL+ THEN
;/*	mov	rax,-0x08(rbp)	; 80407105 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	(rax),rax	; 80407109 
	DB 0x48,0x8B,0x0
;/*	lea	0x04(rax),rax	; 8040710C 
	DB 0x48,0x8D,0x40,0x4
;/*	cmp	rax,_HsubSTDOUT+0x18 (%rip)	; 80407110 
	DB 0x48,0x39,0x5,0x5,0xDB,0xFF,0xFF
;/*	sbb	rax,rax	; 80407117 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040711A 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040711D 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_subEBPCLR+0x67 	; 80407121 
	DB 0xF,0x84,0x4,0x0,0x0,0x0
;/*	lea	0x08(rax),rax	; 80407127 
	DB 0x48,0x8D,0x40,0x8
;/		?OPlast    IF DROP BREAK
;/*	mov	rax,-0x08(rbp)	; 8040712B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	rax,-0x10(rbp)	; 8040712F 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	_LASTsubHERE+0x10D (%rip),rax	; 80407133 
	DB 0x48,0x8D,0x5,0xD,0xEB,0xFF,0xFF
;/*	cmp	-0x10(rbp),rax	; 8040713A 
	DB 0x48,0x3B,0x45,0xF0
;/*	sbb	rax,rax	; 8040713E 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80407141 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80407144 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_subEBPCLR+0x93 	; 80407148 
	DB 0xF,0x84,0x9,0x0,0x0,0x0
;/*	mov	0x00(rbp),rax	; 8040714E 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407152 
	DB 0x48,0x8D,0x6D,0x8
	ret		; 80407156 C3 
;/	DUP @ C@ F0
;/*	mov	rax,-0x08(rbp)	; 80407157 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	(rax),rax	; 8040715B 
	DB 0x48,0x8B,0x0
;/*	movzb	(rax),eax	; 8040715E 
	DB 0xF,0xB6,0x0
;/*	and	$0xF0,eax	; 80407161 
	DB 0x25,0xF0,0x0,0x0,0x0
;/*	xor	$0x70,rax	; 80407166 
	DB 0x48,0x35,0x70,0x0,0x0,0x0
;/*	sub	$0x01,rax	; 8040716C 
	DB 0x48,0x83,0xE8,0x1
;/		AND 70   = IF DROP BREAK \ Jx
;/*	sbb	rax,rax	; 80407170 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80407173 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80407176 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_subEBPCLR+0xC5 	; 8040717A 
	DB 0xF,0x84,0x9,0x0,0x0,0x0
;/*	mov	0x00(rbp),rax	; 80407180 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407184 
	DB 0x48,0x8D,0x6D,0x8
	ret		; 80407188 C3 
;/
;/     DUP @  \ FLAG OPX [OPX]
;/*	mov	rax,-0x08(rbp)	; 80407189 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	(rax),rax	; 8040718D 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 80407190 
	DB 0x48,0x89,0x45,0xF0
;/     DUP W@ 6D8D = IF 2DROP BREAK \ lea  ebp, X[rbp]
;/*	movzw	(rax),eax	; 80407194 
	DB 0xF,0xB7,0x0
;/*	xor	$0x6D8D,rax	; 80407197 
	DB 0x48,0x35,0x8D,0x6D,0x0,0x0
;/*	sub	$0x01,rax	; 8040719D 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 804071A1 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 804071A4 48 85 C0 
;/*	mov	-0x10(rbp),rax	; 804071A7 
	DB 0x48,0x8B,0x45,0xF0
;/*	lea	-0x08(rbp),rbp	; 804071AB 
	DB 0x48,0x8D,0x6D,0xF8
;/*	jz	_subEBPCLR+0xFA 	; 804071AF 
	DB 0xF,0x84,0x9,0x0,0x0,0x0
;/*	mov	0x08(rbp),rax	; 804071B5 
	DB 0x48,0x8B,0x45,0x8
;/*	lea	0x10(rbp),rbp	; 804071B9 
	DB 0x48,0x8D,0x6D,0x10
	ret		; 804071BD C3 
;/     DUP 1+ W@ 6D8D = IF 2DROP BREAK \ lea  rbp, X[rbp]
;/*	mov	rax,-0x08(rbp)	; 804071BE 
	DB 0x48,0x89,0x45,0xF8
;/*	movzw	0x01(rax),eax	; 804071C2 
	DB 0xF,0xB7,0x40,0x1
;/*	xor	$0x6D8D,rax	; 804071C6 
	DB 0x48,0x35,0x8D,0x6D,0x0,0x0
;/*	sub	$0x01,rax	; 804071CC 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 804071D0 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 804071D3 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804071D6 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_subEBPCLR+0x125 	; 804071DA 
	DB 0xF,0x84,0x9,0x0,0x0,0x0
;/*	mov	0x08(rbp),rax	; 804071E0 
	DB 0x48,0x8B,0x45,0x8
;/*	lea	0x10(rbp),rbp	; 804071E4 
	DB 0x48,0x8D,0x6D,0x10
	ret		; 804071E8 C3 
;/     DUP C@ FF   = IF 2DROP BREAK \ CALL [x]
;/*	mov	rax,-0x08(rbp)	; 804071E9 
	DB 0x48,0x89,0x45,0xF8
;/*	movzb	(rax),eax	; 804071ED 
	DB 0xF,0xB6,0x0
;/*	xor	$0xFF,rax	; 804071F0 
	DB 0x48,0x35,0xFF,0x0,0x0,0x0
;/*	sub	$0x01,rax	; 804071F6 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 804071FA 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 804071FD 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80407200 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_subEBPCLR+0x14F 	; 80407204 
	DB 0xF,0x84,0x9,0x0,0x0,0x0
;/*	mov	0x08(rbp),rax	; 8040720A 
	DB 0x48,0x8B,0x45,0x8
;/*	lea	0x10(rbp),rbp	; 8040720E 
	DB 0x48,0x8D,0x6D,0x10
	ret		; 80407212 C3 
;/     DUP C@ E8   = IF 2DROP BREAK \ CALL
;/*	mov	rax,-0x08(rbp)	; 80407213 
	DB 0x48,0x89,0x45,0xF8
;/*	movzb	(rax),eax	; 80407217 
	DB 0xF,0xB6,0x0
;/*	xor	$0xE8,rax	; 8040721A 
	DB 0x48,0x35,0xE8,0x0,0x0,0x0
;/*	sub	$0x01,rax	; 80407220 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80407224 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80407227 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040722A 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_subEBPCLR+0x179 	; 8040722E 
	DB 0xF,0x84,0x9,0x0,0x0,0x0
;/*	mov	0x08(rbp),rax	; 80407234 
	DB 0x48,0x8B,0x45,0x8
;/*	lea	0x10(rbp),rbp	; 80407238 
	DB 0x48,0x8D,0x6D,0x10
	ret		; 8040723C C3 
;/     DUP C@ E9   = IF 2DROP BREAK \ JMP
;/*	mov	rax,-0x08(rbp)	; 8040723D 
	DB 0x48,0x89,0x45,0xF8
;/*	movzb	(rax),eax	; 80407241 
	DB 0xF,0xB6,0x0
;/*	xor	$0xE9,rax	; 80407244 
	DB 0x48,0x35,0xE9,0x0,0x0,0x0
;/*	sub	$0x01,rax	; 8040724A 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 8040724E 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80407251 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80407254 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_subEBPCLR+0x1A3 	; 80407258 
	DB 0xF,0x84,0x9,0x0,0x0,0x0
;/*	mov	0x08(rbp),rax	; 8040725E 
	DB 0x48,0x8B,0x45,0x8
;/*	lea	0x10(rbp),rbp	; 80407262 
	DB 0x48,0x8D,0x6D,0x10
	ret		; 80407266 C3 
;/     DUP C@ EB   = IF 2DROP BREAK
;/*	mov	rax,-0x08(rbp)	; 80407267 
	DB 0x48,0x89,0x45,0xF8
;/*	movzb	(rax),eax	; 8040726B 
	DB 0xF,0xB6,0x0
;/*	xor	$0xEB,rax	; 8040726E 
	DB 0x48,0x35,0xEB,0x0,0x0,0x0
;/*	sub	$0x01,rax	; 80407274 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80407278 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040727B 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040727E 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_subEBPCLR+0x1CD 	; 80407282 
	DB 0xF,0x84,0x9,0x0,0x0,0x0
;/*	mov	0x08(rbp),rax	; 80407288 
	DB 0x48,0x8B,0x45,0x8
;/*	lea	0x10(rbp),rbp	; 8040728C 
	DB 0x48,0x8D,0x6D,0x10
	ret		; 80407290 C3 
;/     DUP L@ F0FF
;/*	mov	rax,-0x08(rbp)	; 80407291 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	(rax),eax	; 80407295 
	DB 0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 80407297 
	DB 0x48,0x89,0x45,0xF0
;/*	and	$0xF0FF,eax	; 8040729B 
	DB 0x25,0xFF,0xF0,0x0,0x0
;/*	xor	$0x800F,rax	; 804072A0 
	DB 0x48,0x35,0xF,0x80,0x0,0x0
;/          AND 800F = IF 2DROP BREAK \ Jx
;/*	sub	$0x01,rax	; 804072A6 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 804072AA 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 804072AD 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804072B0 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_subEBPCLR+0x1FF 	; 804072B4 
	DB 0xF,0x84,0x9,0x0,0x0,0x0
;/*	mov	0x08(rbp),rax	; 804072BA 
	DB 0x48,0x8B,0x45,0x8
;/*	lea	0x10(rbp),rbp	; 804072BE 
	DB 0x48,0x8D,0x6D,0x10
	ret		; 804072C2 C3 
;/     DUP L@ FFFFFF AND C5448B = \ MOV  EAX , FC [EBP] [EAX*8]
;/*	mov	rax,-0x08(rbp)	; 804072C3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	(rax),eax	; 804072C7 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 804072C9 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xC5448B,rax	; 804072CE 
	DB 0x48,0x35,0x8B,0x44,0xC5,0x0
;/*	sub	$0x01,rax	; 804072D4 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 804072D8 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 804072DB 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804072DE 
	DB 0x48,0x8B,0x45,0xF8
;/              IF 2DROP BREAK
;/*	jz	_subEBPCLR+0x22D 	; 804072E2 
	DB 0xF,0x84,0x9,0x0,0x0,0x0
;/*	mov	0x08(rbp),rax	; 804072E8 
	DB 0x48,0x8B,0x45,0x8
;/*	lea	0x10(rbp),rbp	; 804072EC 
	DB 0x48,0x8D,0x6D,0x10
	ret		; 804072F0 C3 
;/
;/     DUP L@  C5448B48 = \ MOV  EAX , FC [EBP] [EAX*8]
;/*	mov	rax,-0x08(rbp)	; 804072F1 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	(rax),eax	; 804072F5 
	DB 0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 804072F7 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0xC5448B48,eax	; 804072FB 
	DB 0xB8,0x48,0x8B,0x44,0xC5
;/*	xor	-0x10(rbp),rax	; 80407300 
	DB 0x48,0x33,0x45,0xF0
;/*	sub	$0x01,rax	; 80407304 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80407308 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040730B 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040730E 
	DB 0x48,0x8B,0x45,0xF8
;/              IF 2DROP BREAK
;/*	jz	_subEBPCLR+0x25D 	; 80407312 
	DB 0xF,0x84,0x9,0x0,0x0,0x0
;/*	mov	0x08(rbp),rax	; 80407318 
	DB 0x48,0x8B,0x45,0x8
;/*	lea	0x10(rbp),rbp	; 8040731C 
	DB 0x48,0x8D,0x6D,0x10
	ret		; 80407320 C3 
;/
;/     DUP C@ >PREF
;/*	mov	rax,-0x08(rbp)	; 80407321 
	DB 0x48,0x89,0x45,0xF8
;/*	movzb	(rax),eax	; 80407325 
	DB 0xF,0xB6,0x0
;/*	lea	-0x08(rbp),rbp	; 80407328 
	DB 0x48,0x8D,0x6D,0xF8
	call	_greatPREF	; 8040732C E8 EF EC FF FF 
;/     DUP PREF+ C@ F = IF 1 PREF_S +! THEN
;/*	mov	rax,-0x08(rbp)	; 80407331 
	DB 0x48,0x89,0x45,0xF8
;/*	add	_RIPADRque+0x17C (%rip),rax	; 80407335 
	DB 0x48,0x3,0x5,0xD4,0xEC,0xFF,0xFF
;/*	movzb	(rax),eax	; 8040733C 
	DB 0xF,0xB6,0x0
;/*	xor	$0xF,rax	; 8040733F 
	DB 0x48,0x35,0xF,0x0,0x0,0x0
;/*	sub	$0x01,rax	; 80407345 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80407349 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040734C 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040734F 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_subEBPCLR+0x2AE 	; 80407353 
	DB 0xF,0x84,0x19,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80407359 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_RIPADRque+0x17C (%rip),rax	; 8040735D 
	DB 0x48,0x8D,0x5,0xAC,0xEC,0xFF,0xFF
;/*	movq	$0x1,rdx	; 80407364 
	DB 0x48,0xC7,0xC2,0x1,0x0,0x0,0x0
;/*	add	rdx,(rax)	; 8040736B 
	DB 0x48,0x1,0x10
;/*	mov	-0x08(rbp),rax	; 8040736E 
	DB 0x48,0x8B,0x45,0xF8
;/
;/     DUP PREF+ 2+ C@ C>S OFF-EBP =
;/*	mov	rax,-0x08(rbp)	; 80407372 
	DB 0x48,0x89,0x45,0xF8
;/*	add	_RIPADRque+0x17C (%rip),rax	; 80407376 
	DB 0x48,0x3,0x5,0x93,0xEC,0xFF,0xFF
;/*	movzb	0x02(rax),eax	; 8040737D 
	DB 0xF,0xB6,0x40,0x2
;/*	movsbq	al,rax	; 80407381 
	DB 0x48,0xF,0xBE,0xC0
;/*	xor	_OFFsubEBP+0x5 (%rip),rax	; 80407385 
	DB 0x48,0x33,0x5,0x8C,0xE7,0xFF,0xFF
;/*	sub	$0x01,rax	; 8040738C 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80407390 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80407393 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80407396 
	DB 0x48,0x8B,0x45,0xF8
;/     IF   DUP	PREF+ W@  E7FF AND  4589 =    \ MOV X [EBP] , EAX|EDX|EBX|ECX
;/*	jz	_subEBPCLR+0x3A3 	; 8040739A 
	DB 0xF,0x84,0xC7,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804073A0 
	DB 0x48,0x89,0x45,0xF8
;/*	add	_RIPADRque+0x17C (%rip),rax	; 804073A4 
	DB 0x48,0x3,0x5,0x65,0xEC,0xFF,0xFF
;/*	movzw	(rax),eax	; 804073AB 
	DB 0xF,0xB7,0x0
;/*	and	$0xE7FF,eax	; 804073AE 
	DB 0x25,0xFF,0xE7,0x0,0x0
;/*	xor	$0x4589,rax	; 804073B3 
	DB 0x48,0x35,0x89,0x45,0x0,0x0
;/*	sub	$0x01,rax	; 804073B9 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 804073BD 
	DB 0x48,0x19,0xC0
;/*	mov	rax,-0x10(rbp)	; 804073C0 
	DB 0x48,0x89,0x45,0xF0
;/          OVER	PREF+ W@            45C7 = OR \ MOV     F8 [EBP] , # 2710
;/*	mov	-0x08(rbp),rax	; 804073C4 
	DB 0x48,0x8B,0x45,0xF8
;/*	add	_RIPADRque+0x17C (%rip),rax	; 804073C8 
	DB 0x48,0x3,0x5,0x41,0xEC,0xFF,0xFF
;/*	movzw	(rax),eax	; 804073CF 
	DB 0xF,0xB7,0x0
;/*	xor	$0x45C7,rax	; 804073D2 
	DB 0x48,0x35,0xC7,0x45,0x0,0x0
;/*	sub	$0x01,rax	; 804073D8 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 804073DC 
	DB 0x48,0x19,0xC0
;/*	or	-0x10(rbp),rax	; 804073DF 
	DB 0x48,0xB,0x45,0xF0
	test	rax,rax	; 804073E3 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804073E6 
	DB 0x48,0x8B,0x45,0xF8
;/          IF M\ 200 DTST
;/*	jz	_subEBPCLR+0x379 	; 804073EA 
	DB 0xF,0x84,0x4D,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804073F0 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x200,eax	; 804073F4 
	DB 0xB8,0x0,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804073F9 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 804073FD E8 55 EA FF FF 
;/               OVER  OPexcise >R NIP TRUE SWAP CELL- R>
;/*	mov	rax,-0x08(rbp)	; 80407402 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	0x00(rbp),rax	; 80407406 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	-0x08(rbp),rbp	; 8040740A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040740E E8 94 EE FF FF 
	Push	rax	; 80407413 50 
;/*	mov	0x00(rbp),rax	; 80407414 
	DB 0x48,0x8B,0x45,0x0
;/*	mov	rax,0x08(rbp)	; 80407418 
	DB 0x48,0x89,0x45,0x8
;/*	movq	$-0x1,rax	; 8040741C 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	mov	0x08(rbp),rdx	; 80407423 
	DB 0x48,0x8B,0x55,0x8
;/*	mov	rax,0x08(rbp)	; 80407427 
	DB 0x48,0x89,0x45,0x8
;/*	lea	-0x04(rdx),rax	; 8040742B 
	DB 0x48,0x8D,0x42,0xFC
;/*	lea	-0x04(rax),rax	; 8040742F 
	DB 0x48,0x8D,0x40,0xFC
;/*	mov	rax,0x00(rbp)	; 80407433 
	DB 0x48,0x89,0x45,0x0
	pop	rax	; 80407437 58 
;/          ELSE  DUP	PREF+ W@ 408B XOR \ not (%rbp)
;/*	jmp	_subEBPCLR+0x3A3 	; 80407438 
	DB 0xE9,0x2A,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040743D 
	DB 0x48,0x89,0x45,0xF8
;/*	add	_RIPADRque+0x17C (%rip),rax	; 80407441 
	DB 0x48,0x3,0x5,0xC8,0xEB,0xFF,0xFF
;/*	movzw	(rax),eax	; 80407448 
	DB 0xF,0xB7,0x0
;/*	xor	$0x408B,rax	; 8040744B 
	DB 0x48,0x35,0x8B,0x40,0x0,0x0
	test	rax,rax	; 80407451 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80407454 
	DB 0x48,0x8B,0x45,0xF8
;/		IF  2DROP BREAK
;/*	jz	_subEBPCLR+0x3A3 	; 80407458 
	DB 0xF,0x84,0x9,0x0,0x0,0x0
;/*	mov	0x08(rbp),rax	; 8040745E 
	DB 0x48,0x8B,0x45,0x8
;/*	lea	0x10(rbp),rbp	; 80407462 
	DB 0x48,0x8D,0x6D,0x10
	ret		; 80407466 C3 
;/          THEN
;/     THEN
;/
;/   DROP  CELL+   DUP @  :-SET  U<
;/*	mov	0x00(rbp),rax	; 80407467 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rax),rax	; 8040746B 
	DB 0x48,0x8D,0x40,0x8
;/*	mov	rax,0x00(rbp)	; 8040746F 
	DB 0x48,0x89,0x45,0x0
;/*	mov	(rax),rax	; 80407473 
	DB 0x48,0x8B,0x0
;/*	cmp	_dcomasubSET+0x5 (%rip),rax	; 80407476 
	DB 0x48,0x3B,0x5,0xEF,0xE7,0xFF,0xFF
;/*	sbb	rax,rax	; 8040747D 
	DB 0x48,0x19,0xC0
;/  UNTIL DROP ;
	test	rax,rax	; 80407480 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407483 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407487 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_subEBPCLR+0x41 	; 8040748B 
	DB 0xF,0x84,0x74,0xFC,0xFF,0xFF
;/*	mov	0x00(rbp),rax	; 80407491 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407495 
	DB 0x48,0x8D,0x6D,0x8
	ret		; 80407499 C3 
;/
;/: X?EBP
;/ DROP EXIT


_XqueEBP:
;/*	mov	0x00(rbp),rax	; 8040749A 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040749E 
	DB 0x48,0x8D,0x6D,0x8
	ret		; 804074A2 C3 
;/ C@ C>S OFF-EBP  +
;/*	movzb	(rax),eax	; 804074A3 
	DB 0xF,0xB6,0x0
;/*	movsbq	al,rax	; 804074A6 
	DB 0x48,0xF,0xBE,0xC0
;/*	add	_OFFsubEBP+0x5 (%rip),rax	; 804074AA 
	DB 0x48,0x3,0x5,0x67,0xE6,0xFF,0xFF
;/  40 + -80 AND
;/*	lea	0x40(rax),rax	; 804074B1 
	DB 0x48,0x8D,0x40,0x40
;/*	and	$-0x80,rax	; 804074B5 
	DB 0x48,0x83,0xE0,0x80
;/  IF EVEN-EBP THEN ;
;/*	mov	0x00(rbp),rax	; 804074B9 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804074BD 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_XqueEBP+0x32 	; 804074C1 
	DB 0xF,0x84,0x5,0x0,0x0,0x0
	call	_EVENsubEBP	; 804074C7 E8 7B EF FF FF 
	ret		; 804074CC C3 
;/
;/: 2?EBP OVER 2+  X?EBP ;


_2queEBP:
;/*	mov	rax,-0x08(rbp)	; 804074CD 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	0x00(rbp),rax	; 804074D1 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x02(rax),rax	; 804074D5 
	DB 0x48,0x8D,0x40,0x2
;/*	mov	-0x08(rbp),rax	; 804074D9 
	DB 0x48,0x8B,0x45,0xF8
	ret		; 804074DD C3 
;/: 3?EBP OVER 3 + X?EBP ;


_3queEBP:
;/*	mov	rax,-0x08(rbp)	; 804074DE 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	0x00(rbp),rax	; 804074E2 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x03(rax),rax	; 804074E6 
	DB 0x48,0x8D,0x40,0x3
;/*	mov	-0x08(rbp),rax	; 804074EA 
	DB 0x48,0x8B,0x45,0xF8
	ret		; 804074EE C3 
;/: 4?EBP OVER 4 + X?EBP ;


_4queEBP:
;/*	mov	rax,-0x08(rbp)	; 804074EF 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	0x00(rbp),rax	; 804074F3 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x04(rax),rax	; 804074F7 
	DB 0x48,0x8D,0x40,0x4
;/*	mov	-0x08(rbp),rax	; 804074FB 
	DB 0x48,0x8B,0x45,0xF8
	ret		; 804074FF C3 
;/
;/\- LOW_LIM 0 VALUE LOW_LIM
;/: -EVEN-EAX
;/   BEGIN
;/ OP0 @ DUP :-SET U< IF DROP BREAK TO OP0@


_subEVENsubEAX:
;/*	mov	rax,-0x08(rbp)	; 80407500 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_LASTsubHERE+0xD (%rip),rax	; 80407504 
	DB 0x48,0x8B,0x5,0x3C,0xE6,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 8040750B 
	DB 0x48,0x89,0x45,0xF0
;/*	cmp	_dcomasubSET+0x5 (%rip),rax	; 8040750F 
	DB 0x48,0x3B,0x5,0x56,0xE7,0xFF,0xFF
;/*	sbb	rax,rax	; 80407516 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80407519 48 85 C0 
;/*	mov	-0x10(rbp),rax	; 8040751C 
	DB 0x48,0x8B,0x45,0xF0
;/*	lea	-0x08(rbp),rbp	; 80407520 
	DB 0x48,0x8D,0x6D,0xF8
;/*	jz	_subEVENsubEAX+0x33 	; 80407524 
	DB 0xF,0x84,0x9,0x0,0x0,0x0
;/*	mov	0x00(rbp),rax	; 8040752A 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040752E 
	DB 0x48,0x8D,0x6D,0x8
	ret		; 80407532 C3 
;/*	mov	rax,_OP0load+0x5 (%rip)	; 80407533 
	DB 0x48,0x89,0x5,0x57,0xE7,0xFF,0xFF
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040753A 
	DB 0x48,0x8B,0x5,0x50,0xE7,0xFF,0xFF
;/*	mov	(rax),eax	; 80407541 
	DB 0x8B,0x0
;/  OP0@ L@ FFFFFF AND 408D48 = \      lea     0x02(%rax),%rax # 41CE14 48 8D 40 2
;/*	and	$0xFFFFFF,eax	; 80407543 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x408D48,rax	; 80407548 
	DB 0x48,0x35,0x48,0x8D,0x40,0x0
;/*	sub	$0x01,rax	; 8040754E 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80407552 
	DB 0x48,0x19,0xC0
;/   M_WL  M\ 2 DTST
	test	rax,rax	; 80407555 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407558 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040755C 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_subEVENsubEAX+0xC6 	; 80407560 
	DB 0xF,0x84,0x60,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80407566 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x2,eax	; 8040756A 
	DB 0xB8,0x2,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040756F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80407573 E8 DF E8 FF FF 
;/       OP0@ 3 + C@ C>S OFF-EAX + TO OFF-EAX
;/*	mov	rax,-0x08(rbp)	; 80407578 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040757C 
	DB 0x48,0x8B,0x5,0xE,0xE7,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 80407583 
	DB 0xF,0xB6,0x40,0x3
;/*	movsbq	al,rax	; 80407587 
	DB 0x48,0xF,0xBE,0xC0
;/*	add	_OFFsubEAX+0x5 (%rip),rax	; 8040758B 
	DB 0x48,0x3,0x5,0x93,0xE5,0xFF,0xFF
;/*	mov	rax,_OFFsubEAX+0x5 (%rip)	; 80407592 
	DB 0x48,0x89,0x5,0x8C,0xE5,0xFF,0xFF
;/*	mov	$0x44C539,eax	; 80407599 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/       OP1 ToOP0
;/*	lea	-0x08(rbp),rbp	; 8040759E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 804075A2 E8 D4 E7 FF FF 
;/       -4 ALLOT M\ 3 DTST
;/*	add	$-0x04,_HsubSTDOUT+0x18 (%rip)	; 804075A7 
	DB 0x48,0x83,0x5,0x6D,0xD6,0xFF,0xFF,0xFC
;/*	mov	rax,-0x08(rbp)	; 804075AF 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x3,eax	; 804075B3 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804075B8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 804075BC E8 96 E8 FF FF 
;/   REPEAT
;/*	jmp	_subEVENsubEAX	; 804075C1 
	DB 0xE9,0x3A,0xFF,0xFF,0xFF
;/ exit
	ret		; 804075C6 C3 
;/  OP0@ L@ FFFFFF AND 808D48 = \      lea     0x02(%rax),%rax # 41CE14 48 8D 40 2
;/*	mov	rax,-0x08(rbp)	; 804075C7 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP0load+0x5 (%rip),rax	; 804075CB 
	DB 0x48,0x8B,0x5,0xBF,0xE6,0xFF,0xFF
;/*	mov	(rax),eax	; 804075D2 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 804075D4 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x808D48,rax	; 804075D9 
	DB 0x48,0x35,0x48,0x8D,0x80,0x0
;/*	sub	$0x01,rax	; 804075DF 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 804075E3 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 804075E6 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804075E9 
	DB 0x48,0x8B,0x45,0xF8
;/   M_WL  M\ 22 DTST
;/*	jz	_subEVENsubEAX+0x151 	; 804075ED 
	DB 0xF,0x84,0x5E,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804075F3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x22,eax	; 804075F7 
	DB 0xB8,0x22,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804075FC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80407600 E8 52 E8 FF FF 
;/       OP0@ 3 + L@ L>S OFF-EAX + TO OFF-EAX
;/*	mov	rax,-0x08(rbp)	; 80407605 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP0load+0x5 (%rip),rax	; 80407609 
	DB 0x48,0x8B,0x5,0x81,0xE6,0xFF,0xFF
;/*	mov	0x03(rax),eax	; 80407610 
	DB 0x8B,0x40,0x3
;/*	movslq	rax,rax	; 80407613 
	DB 0x48,0x63,0xC0
;/*	add	_OFFsubEAX+0x5 (%rip),rax	; 80407616 
	DB 0x48,0x3,0x5,0x8,0xE5,0xFF,0xFF
;/*	mov	rax,_OFFsubEAX+0x5 (%rip)	; 8040761D 
	DB 0x48,0x89,0x5,0x1,0xE5,0xFF,0xFF
;/*	mov	$0x44C539,eax	; 80407624 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/       OP1 ToOP0
;/*	lea	-0x08(rbp),rbp	; 80407629 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 8040762D E8 49 E7 FF FF 
;/       -7 ALLOT M\ 23 DTST
;/*	add	$-0x07,_HsubSTDOUT+0x18 (%rip)	; 80407632 
	DB 0x48,0x83,0x5,0xE2,0xD5,0xFF,0xFF,0xF9
;/*	mov	rax,-0x08(rbp)	; 8040763A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x23,eax	; 8040763E 
	DB 0xB8,0x23,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407643 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80407647 E8 B E8 FF FF 
;/   REPEAT
;/*	jmp	_subEVENsubEAX	; 8040764C 
	DB 0xE9,0xAF,0xFE,0xFF,0xFF
;/
;/  OP0@ L@ F7FFFF AND C0FF48 = \      incq|decq    %rax
;/*	mov	rax,-0x08(rbp)	; 80407651 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP0load+0x5 (%rip),rax	; 80407655 
	DB 0x48,0x8B,0x5,0x35,0xE6,0xFF,0xFF
;/*	mov	(rax),eax	; 8040765C 
	DB 0x8B,0x0
;/*	and	$0xF7FFFF,eax	; 8040765E 
	DB 0x25,0xFF,0xFF,0xF7,0x0
;/*	xor	$0xC0FF48,rax	; 80407663 
	DB 0x48,0x35,0x48,0xFF,0xC0,0x0
;/*	sub	$0x01,rax	; 80407669 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 8040766D 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80407670 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80407673 
	DB 0x48,0x8B,0x45,0xF8
;/   M_WL  M\ 4 DTST
;/*	jz	_subEVENsubEAX+0x1F0 	; 80407677 
	DB 0xF,0x84,0x73,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040767D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x4,eax	; 80407681 
	DB 0xB8,0x4,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407686 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040768A E8 C8 E7 FF FF 
;/       OFF-EAX OP0@ L@ 80000 AND 0<> 1 OR + TO OFF-EAX
;/*	mov	rax,-0x08(rbp)	; 8040768F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OFFsubEAX+0x5 (%rip),rax	; 80407693 
	DB 0x48,0x8B,0x5,0x8B,0xE4,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 8040769A 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040769E 
	DB 0x48,0x8B,0x5,0xEC,0xE5,0xFF,0xFF
;/*	mov	(rax),eax	; 804076A5 
	DB 0x8B,0x0
;/*	and	$0x80000,eax	; 804076A7 
	DB 0x25,0x0,0x0,0x8,0x0
;/*		negq	rax	; 804076AC 
	DB 0x48,0xF7,0xD8
;/*	sbb	rax,rax	; 804076AF 
	DB 0x48,0x19,0xC0
;/*	or	$0x1,rax	; 804076B2 
	DB 0x48,0xD,0x1,0x0,0x0,0x0
;/*	add	-0x10(rbp),rax	; 804076B8 
	DB 0x48,0x3,0x45,0xF0
;/*	mov	rax,_OFFsubEAX+0x5 (%rip)	; 804076BC 
	DB 0x48,0x89,0x5,0x62,0xE4,0xFF,0xFF
;/*	mov	$0x44C539,eax	; 804076C3 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/       OP1 ToOP0
;/*	lea	-0x08(rbp),rbp	; 804076C8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 804076CC E8 AA E6 FF FF 
;/       -3 ALLOT M\ 5 DTST
;/*	add	$-0x03,_HsubSTDOUT+0x18 (%rip)	; 804076D1 
	DB 0x48,0x83,0x5,0x43,0xD5,0xFF,0xFF,0xFD
;/*	mov	rax,-0x08(rbp)	; 804076D9 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x5,eax	; 804076DD 
	DB 0xB8,0x5,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804076E2 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 804076E6 E8 6C E7 FF FF 
;/   REPEAT
;/*	jmp	_subEVENsubEAX	; 804076EB 
	DB 0xE9,0x10,0xFE,0xFF,0xFF
;/
;/  OP0@ L@ FFFFFF AND C08148 = \     add     $0x30,%rax
;/*	mov	rax,-0x08(rbp)	; 804076F0 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP0load+0x5 (%rip),rax	; 804076F4 
	DB 0x48,0x8B,0x5,0x96,0xE5,0xFF,0xFF
;/*	mov	(rax),eax	; 804076FB 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 804076FD 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xC08148,rax	; 80407702 
	DB 0x48,0x35,0x48,0x81,0xC0,0x0
;/*	sub	$0x01,rax	; 80407708 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 8040770C 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040770F 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80407712 
	DB 0x48,0x8B,0x45,0xF8
;/   M_WL  M\ E DTST
;/*	jz	_subEVENsubEAX+0x27A 	; 80407716 
	DB 0xF,0x84,0x5E,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040771C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xE,eax	; 80407720 
	DB 0xB8,0xE,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407725 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80407729 E8 29 E7 FF FF 
;/       OP0@ 3 + L@ L>S OFF-EAX + TO OFF-EAX
;/*	mov	rax,-0x08(rbp)	; 8040772E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP0load+0x5 (%rip),rax	; 80407732 
	DB 0x48,0x8B,0x5,0x58,0xE5,0xFF,0xFF
;/*	mov	0x03(rax),eax	; 80407739 
	DB 0x8B,0x40,0x3
;/*	movslq	rax,rax	; 8040773C 
	DB 0x48,0x63,0xC0
;/*	add	_OFFsubEAX+0x5 (%rip),rax	; 8040773F 
	DB 0x48,0x3,0x5,0xDF,0xE3,0xFF,0xFF
;/*	mov	rax,_OFFsubEAX+0x5 (%rip)	; 80407746 
	DB 0x48,0x89,0x5,0xD8,0xE3,0xFF,0xFF
;/*	mov	$0x44C539,eax	; 8040774D 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/       OP1 ToOP0
;/*	lea	-0x08(rbp),rbp	; 80407752 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 80407756 E8 20 E6 FF FF 
;/       -7 ALLOT M\ F DTST
;/*	add	$-0x07,_HsubSTDOUT+0x18 (%rip)	; 8040775B 
	DB 0x48,0x83,0x5,0xB9,0xD4,0xFF,0xFF,0xF9
;/*	mov	rax,-0x08(rbp)	; 80407763 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xF,eax	; 80407767 
	DB 0xB8,0xF,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040776C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80407770 E8 E2 E6 FF FF 
;/   REPEAT
;/*	jmp	_subEVENsubEAX	; 80407775 
	DB 0xE9,0x86,0xFD,0xFF,0xFF
;/
;/  OP0@ W@ 0548 = \     add     $0x30,%rax
;/*	mov	rax,-0x08(rbp)	; 8040777A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040777E 
	DB 0x48,0x8B,0x5,0xC,0xE5,0xFF,0xFF
;/*	movzw	(rax),eax	; 80407785 
	DB 0xF,0xB7,0x0
;/*	xor	$0x548,rax	; 80407788 
	DB 0x48,0x35,0x48,0x5,0x0,0x0
;/*	sub	$0x01,rax	; 8040778E 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80407792 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80407795 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80407798 
	DB 0x48,0x8B,0x45,0xF8
;/   WHILE  M\ E DTST
;/*	jz	_subEVENsubEAX+0x300 	; 8040779C 
	DB 0xF,0x84,0x5E,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804077A2 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xE,eax	; 804077A6 
	DB 0xB8,0xE,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804077AB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 804077AF E8 A3 E6 FF FF 
;/       OP0@ 2+ L@ L>S OFF-EAX + TO OFF-EAX
;/*	mov	rax,-0x08(rbp)	; 804077B4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP0load+0x5 (%rip),rax	; 804077B8 
	DB 0x48,0x8B,0x5,0xD2,0xE4,0xFF,0xFF
;/*	mov	0x02(rax),eax	; 804077BF 
	DB 0x8B,0x40,0x2
;/*	movslq	rax,rax	; 804077C2 
	DB 0x48,0x63,0xC0
;/*	add	_OFFsubEAX+0x5 (%rip),rax	; 804077C5 
	DB 0x48,0x3,0x5,0x59,0xE3,0xFF,0xFF
;/*	mov	rax,_OFFsubEAX+0x5 (%rip)	; 804077CC 
	DB 0x48,0x89,0x5,0x52,0xE3,0xFF,0xFF
;/*	mov	$0x44C539,eax	; 804077D3 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/       OP1 ToOP0
;/*	lea	-0x08(rbp),rbp	; 804077D8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 804077DC E8 9A E5 FF FF 
;/       -6 ALLOT M\ F DTST
;/*	add	$-0x06,_HsubSTDOUT+0x18 (%rip)	; 804077E1 
	DB 0x48,0x83,0x5,0x33,0xD4,0xFF,0xFF,0xFA
;/*	mov	rax,-0x08(rbp)	; 804077E9 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xF,eax	; 804077ED 
	DB 0xB8,0xF,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804077F2 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 804077F6 E8 5C E6 FF FF 
;/   REPEAT
;/*	jmp	_subEVENsubEAX	; 804077FB 
	DB 0xE9,0x0,0xFD,0xFF,0xFF
;/;
	ret		; 80407800 C3 
;/
;/: OPT-RULES  ( ADDR  -- ADDR )
;/   M\ -1 DTST


_OPTsubRULES:
;/*	mov	rax,-0x08(rbp)	; 80407801 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x1,rax	; 80407805 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040780C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80407810 E8 42 E6 FF FF 
;/   BEGIN
;/   OP0 @ DUP :-SET U< IF DROP BREAK TO OP0@
;/*	mov	rax,-0x08(rbp)	; 80407815 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_LASTsubHERE+0xD (%rip),rax	; 80407819 
	DB 0x48,0x8B,0x5,0x27,0xE3,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 80407820 
	DB 0x48,0x89,0x45,0xF0
;/*	cmp	_dcomasubSET+0x5 (%rip),rax	; 80407824 
	DB 0x48,0x3B,0x5,0x41,0xE4,0xFF,0xFF
;/*	sbb	rax,rax	; 8040782B 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040782E 48 85 C0 
;/*	mov	-0x10(rbp),rax	; 80407831 
	DB 0x48,0x8B,0x45,0xF0
;/*	lea	-0x08(rbp),rbp	; 80407835 
	DB 0x48,0x8D,0x6D,0xF8
;/*	jz	_OPTsubRULES+0x47 	; 80407839 
	DB 0xF,0x84,0x9,0x0,0x0,0x0
;/*	mov	0x00(rbp),rax	; 8040783F 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407843 
	DB 0x48,0x8D,0x6D,0x8
	ret		; 80407847 C3 
;/*	mov	rax,_OP0load+0x5 (%rip)	; 80407848 
	DB 0x48,0x89,0x5,0x42,0xE4,0xFF,0xFF
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040784F 
	DB 0x48,0x8B,0x5,0x3B,0xE4,0xFF,0xFF
;/*	mov	(rax),eax	; 80407856 
	DB 0x8B,0x0
;/  OP0@ L@ FFFFFF AND D08948 XOR		\ mov	%rdx,%rax
;/*	and	$0xFFFFFF,eax	; 80407858 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xD08948,eax	; 8040785D 
	DB 0x35,0x48,0x89,0xD0,0x0
;/  OFF-EAX 0=
;/*	mov	rax,-0x08(rbp)	; 80407862 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OFFsubEAX+0x5 (%rip),rax	; 80407866 
	DB 0x48,0x8B,0x5,0xB8,0xE2,0xFF,0xFF
;/*	sub	$0x01,rax	; 8040786D 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80407871 
	DB 0x48,0x19,0xC0
;/*	or	-0x08(rbp),rax	; 80407874 
	DB 0x48,0xB,0x45,0xF8
;/  OR 0=
;/*	sub	$0x01,rax	; 80407878 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 8040787C 
	DB 0x48,0x19,0xC0
;/  M_WL
	test	rax,rax	; 8040787F 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407882 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407886 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x13D 	; 8040788A 
	DB 0xF,0x84,0xAE,0x0,0x0,0x0
;/    M\ A DTST
;/*	mov	rax,-0x08(rbp)	; 80407890 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xA,eax	; 80407894 
	DB 0xB8,0xA,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407899 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040789D E8 B5 E5 FF FF 
;/	OFF-EAX DUP SHORT?
;/*	mov	rax,-0x08(rbp)	; 804078A2 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OFFsubEAX+0x5 (%rip),rax	; 804078A6 
	DB 0x48,0x8B,0x5,0x78,0xE2,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 804078AD 
	DB 0x48,0x89,0x45,0xF0
;/*	lea	-0x10(rbp),rbp	; 804078B1 
	DB 0x48,0x8D,0x6D,0xF0
	call	_SHORTque	; 804078B5 E8 76 E1 FF FF 
;/     IF    428D OP0@ 1+ W! C,
	test	rax,rax	; 804078BA 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804078BD 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804078C1 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0xF5 	; 804078C5 
	DB 0xF,0x84,0x2B,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804078CB 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x428D,-0x10(rbp)	; 804078CF 
	DB 0x48,0xC7,0x45,0xF0,0x8D,0x42,0x0,0x0
;/*	mov	_OP0load+0x5 (%rip),rax	; 804078D7 
	DB 0x48,0x8B,0x5,0xB3,0xE3,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 804078DE 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),edx	; 804078E2 
	DB 0x8B,0x55,0xF0
;/*	mov	dx,(rax)	; 804078E5 
	DB 0x66,0x89,0x10
;/*	mov	-0x08(rbp),rax	; 804078E8 
	DB 0x48,0x8B,0x45,0xF8
	call	_Ccom	; 804078EC E8 C9 D3 FF FF 
;/     ELSE  828D OP0@ 1+ W! L,
;/*	jmp	_OPTsubRULES+0x11B 	; 804078F1 
	DB 0xE9,0x26,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804078F6 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x828D,-0x10(rbp)	; 804078FA 
	DB 0x48,0xC7,0x45,0xF0,0x8D,0x82,0x0,0x0
;/*	mov	_OP0load+0x5 (%rip),rax	; 80407902 
	DB 0x48,0x8B,0x5,0x88,0xE3,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 80407909 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),edx	; 8040790D 
	DB 0x8B,0x55,0xF0
;/*	mov	dx,(rax)	; 80407910 
	DB 0x66,0x89,0x10
;/*	mov	-0x08(rbp),rax	; 80407913 
	DB 0x48,0x8B,0x45,0xF8
	call	_Lcom	; 80407917 E8 5B D3 FF FF 
;/     THEN   \  lea    0x1(%rdx),%rax
;/	0 TO OFF-EAX
;/*	movq	$0x0,_OFFsubEAX+0x5 (%rip)	; 8040791C 
	DB 0x48,0xC7,0x5,0xFE,0xE1,0xFF,0xFF,0x0,0x0,0x0,0x0
;/       M\ B DTST
;/*	mov	rax,-0x08(rbp)	; 80407927 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB,eax	; 8040792B 
	DB 0xB8,0xB,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407930 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80407934 E8 1E E5 FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80407939 
	DB 0xE9,0xD7,0xFE,0xFF,0xFF
;/
;/  OP0@ L@ FFFFFF AND
;/*	mov	rax,-0x08(rbp)	; 8040793E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP0load+0x5 (%rip),rax	; 80407942 
	DB 0x48,0x8B,0x5,0x48,0xE3,0xFF,0xFF
;/*	mov	(rax),eax	; 80407949 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040794B 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	mov	rax,-0x10(rbp)	; 80407950 
	DB 0x48,0x89,0x45,0xF0
;/ DUP 058d48 XOR	\ lea	X(%rip),%rax
;/*	xor	$0x58D48,rax	; 80407954 
	DB 0x48,0x35,0x48,0x8D,0x5,0x0
;/*	mov	-0x10(rbp),rdx	; 8040795A 
	DB 0x48,0x8B,0x55,0xF0
;/ SWAP C0C748 <> AND	\ movq	$X,%rax
;/*	mov	rax,-0x10(rbp)	; 8040795E 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	rdx,-0x18(rbp)	; 80407962 
	DB 0x48,0x89,0x55,0xE8
;/*	mov	$0xC0C748,eax	; 80407966 
	DB 0xB8,0x48,0xC7,0xC0,0x0
;/*	xor	-0x18(rbp),rax	; 8040796B 
	DB 0x48,0x33,0x45,0xE8
;/*		negq	rax	; 8040796F 
	DB 0x48,0xF7,0xD8
;/*	sbb	rax,rax	; 80407972 
	DB 0x48,0x19,0xC0
;/*	and	-0x10(rbp),rax	; 80407975 
	DB 0x48,0x23,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 80407979 
	DB 0x48,0x89,0x45,0xF0
;/  OFF-EAX 0=
;/*	mov	_OFFsubEAX+0x5 (%rip),rax	; 8040797D 
	DB 0x48,0x8B,0x5,0xA1,0xE1,0xFF,0xFF
;/*	sub	$0x01,rax	; 80407984 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80407988 
	DB 0x48,0x19,0xC0
;/*	or	-0x10(rbp),rax	; 8040798B 
	DB 0x48,0xB,0x45,0xF0
;/  OR 0=
;/*	sub	$0x01,rax	; 8040798F 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80407993 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80407996 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80407999 
	DB 0x48,0x8B,0x45,0xF8
;/  M_WL
;/*	jz	_OPTsubRULES+0x278 	; 8040799D 
	DB 0xF,0x84,0xD6,0x0,0x0,0x0
;/    M\ 24 DTST
;/*	mov	rax,-0x08(rbp)	; 804079A3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x24,eax	; 804079A7 
	DB 0xB8,0x24,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804079AC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 804079B0 E8 A2 E4 FF FF 
;/      OP0@ 3 + SL@  OFF-EAX + 
;/*	mov	rax,-0x08(rbp)	; 804079B5 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP0load+0x5 (%rip),rax	; 804079B9 
	DB 0x48,0x8B,0x5,0xD1,0xE2,0xFF,0xFF
;/*	lea	0x03(rax),rax	; 804079C0 
	DB 0x48,0x8D,0x40,0x3
;/*	lea	-0x08(rbp),rbp	; 804079C4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_SLload	; 804079C8 E8 F4 C7 FF FF 
;/*	add	_OFFsubEAX+0x5 (%rip),rax	; 804079CD 
	DB 0x48,0x3,0x5,0x51,0xE1,0xFF,0xFF
;/	DUP LONG?
;/*	mov	rax,-0x08(rbp)	; 804079D4 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	-0x08(rbp),rbp	; 804079D8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_LONGque	; 804079DC E8 60 E0 FF FF 
;/	IF      OP0@ 3 + L!
	test	rax,rax	; 804079E1 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804079E4 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804079E8 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x212 	; 804079EC 
	DB 0xF,0x84,0x21,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804079F2 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP0load+0x5 (%rip),rax	; 804079F6 
	DB 0x48,0x8B,0x5,0x94,0xE2,0xFF,0xFF
;/*	lea	0x03(rax),rax	; 804079FD 
	DB 0x48,0x8D,0x40,0x3
;/*	mov	-0x08(rbp),edx	; 80407A01 
	DB 0x8B,0x55,0xF8
;/*	mov	edx,(rax)	; 80407A04 
	DB 0x89,0x10
;/*	mov	0x00(rbp),rax	; 80407A06 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407A0A 
	DB 0x48,0x8D,0x6D,0x8
;/	ELSE  OP0@ L@ FFFFFF AND C0C748 XOR IF BREAK \ $X,%rax omly
;/*	jmp	_OPTsubRULES+0x256 	; 80407A0E 
	DB 0xE9,0x44,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80407A13 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP0load+0x5 (%rip),rax	; 80407A17 
	DB 0x48,0x8B,0x5,0x73,0xE2,0xFF,0xFF
;/*	mov	(rax),eax	; 80407A1E 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80407A20 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xC0C748,eax	; 80407A25 
	DB 0x35,0x48,0xC7,0xC0,0x0
	test	rax,rax	; 80407A2A 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80407A2D 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_OPTsubRULES+0x237 	; 80407A31 
	DB 0xF,0x84,0x1,0x0,0x0,0x0
	ret		; 80407A37 C3 
;/	   -6 ALLOT   $B8 C,  ,	\  movabs $X,%rax
;/*	add	$-0x06,_HsubSTDOUT+0x18 (%rip)	; 80407A38 
	DB 0x48,0x83,0x5,0xDC,0xD1,0xFF,0xFF,0xFA
;/*	mov	rax,-0x08(rbp)	; 80407A40 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB8,eax	; 80407A44 
	DB 0xB8,0xB8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407A49 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Ccom	; 80407A4D E8 68 D2 FF FF 
	call	_com	; 80407A52 E8 5 D2 FF FF 
;/	THEN
;/	 0 TO OFF-EAX
;/*	movq	$0x0,_OFFsubEAX+0x5 (%rip)	; 80407A57 
	DB 0x48,0xC7,0x5,0xC3,0xE0,0xFF,0xFF,0x0,0x0,0x0,0x0
;/
;/    M\ 25 DTST
;/*	mov	rax,-0x08(rbp)	; 80407A62 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x25,eax	; 80407A66 
	DB 0xB8,0x25,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407A6B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80407A6F E8 E3 E3 FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80407A74 
	DB 0xE9,0x9C,0xFD,0xFF,0xFF
;/
;/  OP0@ C@ B8 XOR
;/*	mov	rax,-0x08(rbp)	; 80407A79 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP0load+0x5 (%rip),rax	; 80407A7D 
	DB 0x48,0x8B,0x5,0xD,0xE2,0xFF,0xFF
;/*	movzb	(rax),eax	; 80407A84 
	DB 0xF,0xB6,0x0
;/*	xor	$-0x48,al	; 80407A87 
	DB 0x34,0xB8
;/*	mov	rax,-0x10(rbp)	; 80407A89 
	DB 0x48,0x89,0x45,0xF0
;/  OFF-EAX 0=
;/*	mov	_OFFsubEAX+0x5 (%rip),rax	; 80407A8D 
	DB 0x48,0x8B,0x5,0x91,0xE0,0xFF,0xFF
;/*	sub	$0x01,rax	; 80407A94 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80407A98 
	DB 0x48,0x19,0xC0
;/*	or	-0x10(rbp),rax	; 80407A9B 
	DB 0x48,0xB,0x45,0xF0
;/  OR 0=
;/*	sub	$0x01,rax	; 80407A9F 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80407AA3 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80407AA6 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80407AA9 
	DB 0x48,0x8B,0x45,0xF8
;/  M_WL
;/*	jz	_OPTsubRULES+0x365 	; 80407AAD 
	DB 0xF,0x84,0xB3,0x0,0x0,0x0
;/    M\ 46 DTST
;/*	mov	rax,-0x08(rbp)	; 80407AB3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x46,eax	; 80407AB7 
	DB 0xB8,0x46,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407ABC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80407AC0 E8 92 E3 FF FF 
;/      OP0@ 1+ L@  OFF-EAX +
;/*	mov	rax,-0x08(rbp)	; 80407AC5 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP0load+0x5 (%rip),rax	; 80407AC9 
	DB 0x48,0x8B,0x5,0xC1,0xE1,0xFF,0xFF
;/*	mov	0x01(rax),eax	; 80407AD0 
	DB 0x8B,0x40,0x1
;/*	add	_OFFsubEAX+0x5 (%rip),rax	; 80407AD3 
	DB 0x48,0x3,0x5,0x4B,0xE0,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 80407ADA 
	DB 0x48,0x89,0x45,0xF0
;/	DUP 0x100000000 U< 
;/*	mov	rax,-0x18(rbp)	; 80407ADE 
	DB 0x48,0x89,0x45,0xE8
;/*	movabs	$0x100000000,%rax	; 80407AE2 
	DB 0x48,0xB8,0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x0
;/*	cmp	rax,-0x18(rbp)	; 80407AEC 
	DB 0x48,0x39,0x45,0xE8
;/*	sbb	rax,rax	; 80407AF0 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80407AF3 48 85 C0 
;/*	mov	-0x10(rbp),rax	; 80407AF6 
	DB 0x48,0x8B,0x45,0xF0
;/	IF      OP0@ 1+ L!
;/*	lea	-0x08(rbp),rbp	; 80407AFA 
	DB 0x48,0x8D,0x6D,0xF8
;/*	jz	_OPTsubRULES+0x324 	; 80407AFE 
	DB 0xF,0x84,0x21,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80407B04 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP0load+0x5 (%rip),rax	; 80407B08 
	DB 0x48,0x8B,0x5,0x82,0xE1,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 80407B0F 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x08(rbp),edx	; 80407B13 
	DB 0x8B,0x55,0xF8
;/*	mov	edx,(rax)	; 80407B16 
	DB 0x89,0x10
;/*	mov	0x00(rbp),rax	; 80407B18 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407B1C 
	DB 0x48,0x8D,0x6D,0x8
;/	ELSE   -5 ALLOT   $B848 W,  ,	\  movabs $X,%rax
;/*	jmp	_OPTsubRULES+0x343 	; 80407B20 
	DB 0xE9,0x1F,0x0,0x0,0x0
;/*	add	$-0x05,_HsubSTDOUT+0x18 (%rip)	; 80407B25 
	DB 0x48,0x83,0x5,0xEF,0xD0,0xFF,0xFF,0xFB
;/*	mov	rax,-0x08(rbp)	; 80407B2D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB848,eax	; 80407B31 
	DB 0xB8,0x48,0xB8,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407B36 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Wcom	; 80407B3A E8 59 D1 FF FF 
	call	_com	; 80407B3F E8 18 D1 FF FF 
;/	THEN
;/	 0 TO OFF-EAX
;/*	movq	$0x0,_OFFsubEAX+0x5 (%rip)	; 80407B44 
	DB 0x48,0xC7,0x5,0xD6,0xDF,0xFF,0xFF,0x0,0x0,0x0,0x0
;/
;/    M\ 47 DTST
;/*	mov	rax,-0x08(rbp)	; 80407B4F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x47,eax	; 80407B53 
	DB 0xB8,0x47,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407B58 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80407B5C E8 F6 E2 FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80407B61 
	DB 0xE9,0xAF,0xFC,0xFF,0xFF
;/
;/  OP0@ @ 80000000FFFF AND 2548 = \ MO_TST_VAL AND  \ and $_,%rax
;/*	mov	rax,-0x08(rbp)	; 80407B66 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP0load+0x5 (%rip),rax	; 80407B6A 
	DB 0x48,0x8B,0x5,0x20,0xE1,0xFF,0xFF
;/*	mov	(rax),rax	; 80407B71 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 80407B74 
	DB 0x48,0x89,0x45,0xF0
;/*	movabs	$0x80000000FFFF,%rax	; 80407B78 
	DB 0x48,0xB8,0xFF,0xFF,0x0,0x0,0x0,0x80,0x0,0x0
;/*	and	-0x10(rbp),rax	; 80407B82 
	DB 0x48,0x23,0x45,0xF0
;/*	xor	$0x2548,rax	; 80407B86 
	DB 0x48,0x35,0x48,0x25,0x0,0x0
;/*	sub	$0x01,rax	; 80407B8C 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80407B90 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80407B93 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80407B96 
	DB 0x48,0x8B,0x45,0xF8
;/  M_WL
;/*	jz	_OPTsubRULES+0x3E7 	; 80407B9A 
	DB 0xF,0x84,0x48,0x0,0x0,0x0
;/    M\ 54 DTST
;/*	mov	rax,-0x08(rbp)	; 80407BA0 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x54,eax	; 80407BA4 
	DB 0xB8,0x54,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407BA9 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80407BAD E8 A5 E2 FF FF 
;/	OP0 -1 OPresize
;/*	mov	rax,-0x08(rbp)	; 80407BB2 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 80407BB6 
	DB 0x48,0x8D,0x5,0x8A,0xDF,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 80407BBD 
	DB 0x48,0x89,0x45,0xF0
;/*	movq	$-0x1,rax	; 80407BC1 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 80407BC8 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPresize	; 80407BCC E8 C E5 FF FF 
;/    M\ 53 DTST
;/*	mov	rax,-0x08(rbp)	; 80407BD1 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x53,eax	; 80407BD5 
	DB 0xB8,0x53,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407BDA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80407BDE E8 74 E2 FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80407BE3 
	DB 0xE9,0x2D,0xFC,0xFF,0xFF
;/
;/  OP1 @ DUP :-SET U< IF DROP BREAK TO OP1@
;/*	mov	rax,-0x08(rbp)	; 80407BE8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 80407BEC 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	mov	(rax),rax	; 80407BF1 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 80407BF4 
	DB 0x48,0x89,0x45,0xF0
;/*	cmp	_dcomasubSET+0x5 (%rip),rax	; 80407BF8 
	DB 0x48,0x3B,0x5,0x6D,0xE0,0xFF,0xFF
;/*	sbb	rax,rax	; 80407BFF 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80407C02 48 85 C0 
;/*	mov	-0x10(rbp),rax	; 80407C05 
	DB 0x48,0x8B,0x45,0xF0
;/*	lea	-0x08(rbp),rbp	; 80407C09 
	DB 0x48,0x8D,0x6D,0xF8
;/*	jz	_OPTsubRULES+0x41B 	; 80407C0D 
	DB 0xF,0x84,0x9,0x0,0x0,0x0
;/*	mov	0x00(rbp),rax	; 80407C13 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407C17 
	DB 0x48,0x8D,0x6D,0x8
	ret		; 80407C1B C3 
;/*	mov	rax,_OP1load+0x5 (%rip)	; 80407C1C 
	DB 0x48,0x89,0x5,0x7B,0xE0,0xFF,0xFF
;/*	mov	_OP1load+0x5 (%rip),rax	; 80407C23 
	DB 0x48,0x8B,0x5,0x74,0xE0,0xFF,0xFF
;/*	mov	(rax),eax	; 80407C2A 
	DB 0x8B,0x0
;/
;/  OP1@ L@ FFFFFF AND
;/*	and	$0xFFFFFF,eax	; 80407C2C 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/  DUP 058d48 XOR	\ lea	X (%rip),%rax
;/*	mov	rax,-0x08(rbp)	; 80407C31 
	DB 0x48,0x89,0x45,0xF8
;/*	xor	$0x58D48,rax	; 80407C35 
	DB 0x48,0x35,0x48,0x8D,0x5,0x0
;/*	mov	-0x08(rbp),rdx	; 80407C3B 
	DB 0x48,0x8B,0x55,0xF8
;/ SWAP 408d48 <> AND	\ lea     -0x08(%rax),%rax 
;/*	mov	rax,-0x08(rbp)	; 80407C3F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	rdx,-0x10(rbp)	; 80407C43 
	DB 0x48,0x89,0x55,0xF0
;/*	mov	$0x408D48,eax	; 80407C47 
	DB 0xB8,0x48,0x8D,0x40,0x0
;/*	xor	-0x10(rbp),rax	; 80407C4C 
	DB 0x48,0x33,0x45,0xF0
;/*		negq	rax	; 80407C50 
	DB 0x48,0xF7,0xD8
;/*	sbb	rax,rax	; 80407C53 
	DB 0x48,0x19,0xC0
;/*	and	-0x08(rbp),rax	; 80407C56 
	DB 0x48,0x23,0x45,0xF8
;/  OP0@ L@ FFFFFF AND 008b48 XOR	\ mov	(%rax),%rax
;/*	mov	rax,-0x08(rbp)	; 80407C5A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP0load+0x5 (%rip),rax	; 80407C5E 
	DB 0x48,0x8B,0x5,0x2C,0xE0,0xFF,0xFF
;/*	mov	(rax),eax	; 80407C65 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80407C67 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x8B48,eax	; 80407C6C 
	DB 0x35,0x48,0x8B,0x0,0x0
;/*	or	-0x08(rbp),rax	; 80407C71 
	DB 0x48,0xB,0x45,0xF8
;/   OR  0=
;/*	sub	$0x01,rax	; 80407C75 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80407C79 
	DB 0x48,0x19,0xC0
;/  M_WL  M\ 6 DTST
	test	rax,rax	; 80407C7C 48 85 C0 
;/*	mov	0x00(rbp),rax	; 80407C7F 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80407C83 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x4EB 	; 80407C87 
	DB 0xF,0x84,0x5F,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80407C8D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x6,eax	; 80407C91 
	DB 0xB8,0x6,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407C96 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80407C9A E8 B8 E1 FF FF 
;/       600  OP1@ XOR! \  mov	X (%rip),%rax
;/*	mov	rax,-0x08(rbp)	; 80407C9F 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x600,-0x10(rbp)	; 80407CA3 
	DB 0x48,0xC7,0x45,0xF0,0x0,0x6,0x0,0x0
;/*	mov	_OP1load+0x5 (%rip),rax	; 80407CAB 
	DB 0x48,0x8B,0x5,0xEC,0xDF,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 80407CB2 
	DB 0x48,0x8D,0x6D,0xF0
	call	_XORsave	; 80407CB6 E8 A2 C5 FF FF 
;/       OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 80407CBB 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 80407CBF 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	lea	-0x08(rbp),rbp	; 80407CC4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 80407CC8 E8 AE E0 FF FF 
;/       -3 ALLOT M\ 7 DTST
;/*	add	$-0x03,_HsubSTDOUT+0x18 (%rip)	; 80407CCD 
	DB 0x48,0x83,0x5,0x47,0xCF,0xFF,0xFF,0xFD
;/*	mov	rax,-0x08(rbp)	; 80407CD5 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x7,eax	; 80407CD9 
	DB 0xB8,0x7,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407CDE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80407CE2 E8 70 E1 FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80407CE7 
	DB 0xE9,0x29,0xFB,0xFF,0xFF
;/
;/OP1@ L@ FFFFFF AND 408D48 XOR \       lea     X(%rax),%rax
;/*	mov	rax,-0x08(rbp)	; 80407CEC 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 80407CF0 
	DB 0x48,0x8B,0x5,0xA7,0xDF,0xFF,0xFF
;/*	mov	(rax),eax	; 80407CF7 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80407CF9 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x408D48,eax	; 80407CFE 
	DB 0x35,0x48,0x8D,0x40,0x0
;/*	mov	rax,-0x10(rbp)	; 80407D03 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ FFFEFF AND 00B60F XOR \         movz<bw>l  (%rax),%eax
;/*	mov	_OP0load+0x5 (%rip),rax	; 80407D07 
	DB 0x48,0x8B,0x5,0x83,0xDF,0xFF,0xFF
;/*	mov	(rax),eax	; 80407D0E 
	DB 0x8B,0x0
;/*	and	$0xFFFEFF,eax	; 80407D10 
	DB 0x25,0xFF,0xFE,0xFF,0x0
;/*	xor	$0xB60F,eax	; 80407D15 
	DB 0x35,0xF,0xB6,0x0,0x0
;/*	or	-0x10(rbp),rax	; 80407D1A 
	DB 0x48,0xB,0x45,0xF0
;/   OR  0=
;/*	sub	$0x01,rax	; 80407D1E 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80407D22 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80407D25 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80407D28 
	DB 0x48,0x8B,0x45,0xF8
;/  M_WL  M\ 26 DTST
;/*	jz	_OPTsubRULES+0x58F 	; 80407D2C 
	DB 0xF,0x84,0x5E,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80407D32 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x26,eax	; 80407D36 
	DB 0xB8,0x26,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407D3B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80407D3F E8 13 E1 FF FF 
;/       OP0@ W@  OP1@ W! \  movz<bw>l X(%rax),%eax
;/*	mov	rax,-0x08(rbp)	; 80407D44 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP0load+0x5 (%rip),rax	; 80407D48 
	DB 0x48,0x8B,0x5,0x42,0xDF,0xFF,0xFF
;/*	movzw	(rax),eax	; 80407D4F 
	DB 0xF,0xB7,0x0
;/*	mov	rax,-0x10(rbp)	; 80407D52 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP1load+0x5 (%rip),rax	; 80407D56 
	DB 0x48,0x8B,0x5,0x41,0xDF,0xFF,0xFF
;/*	mov	-0x10(rbp),edx	; 80407D5D 
	DB 0x8B,0x55,0xF0
;/*	mov	dx,(rax)	; 80407D60 
	DB 0x66,0x89,0x10
;/*	mov	$0x44C539,eax	; 80407D63 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/       OP1 ToOP0
;/*	lea	-0x08(rbp),rbp	; 80407D68 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 80407D6C E8 A E0 FF FF 
;/       -3 ALLOT M\ 27 DTST
;/*	add	$-0x03,_HsubSTDOUT+0x18 (%rip)	; 80407D71 
	DB 0x48,0x83,0x5,0xA3,0xCE,0xFF,0xFF,0xFD
;/*	mov	rax,-0x08(rbp)	; 80407D79 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x27,eax	; 80407D7D 
	DB 0xB8,0x27,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407D82 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80407D86 E8 CC E0 FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80407D8B 
	DB 0xE9,0x85,0xFA,0xFF,0xFF
;/
;/OP1@ L@ FFFFFF AND 408D48 XOR \       lea     X(%rax),%rax
;/*	mov	rax,-0x08(rbp)	; 80407D90 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 80407D94 
	DB 0x48,0x8B,0x5,0x3,0xDF,0xFF,0xFF
;/*	mov	(rax),eax	; 80407D9B 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80407D9D 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x408D48,eax	; 80407DA2 
	DB 0x35,0x48,0x8D,0x40,0x0
;/*	mov	rax,-0x10(rbp)	; 80407DA7 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ W@ 008B XOR \         movz<bw>l  (%rax),%eax
;/*	mov	_OP0load+0x5 (%rip),rax	; 80407DAB 
	DB 0x48,0x8B,0x5,0xDF,0xDE,0xFF,0xFF
;/*	movzw	(rax),eax	; 80407DB2 
	DB 0xF,0xB7,0x0
;/*	xor	$0x8B,rax	; 80407DB5 
	DB 0x48,0x35,0x8B,0x0,0x0,0x0
;/*	or	-0x10(rbp),rax	; 80407DBB 
	DB 0x48,0xB,0x45,0xF0
;/   OR  0=
;/*	sub	$0x01,rax	; 80407DBF 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80407DC3 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80407DC6 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80407DC9 
	DB 0x48,0x8B,0x45,0xF8
;/  M_WL  M\ 96 DTST
;/*	jz	_OPTsubRULES+0x635 	; 80407DCD 
	DB 0xF,0x84,0x63,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80407DD3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x96,eax	; 80407DD7 
	DB 0xB8,0x96,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407DDC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80407DE0 E8 72 E0 FF FF 
;/	OP1@ 1+ L@ 6 XOR  OP1@ L! \  movq	X (%rip),%eax
;/*	mov	rax,-0x08(rbp)	; 80407DE5 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 80407DE9 
	DB 0x48,0x8B,0x5,0xAE,0xDE,0xFF,0xFF
;/*	mov	0x01(rax),eax	; 80407DF0 
	DB 0x8B,0x40,0x1
;/*	xor	$0x6,rax	; 80407DF3 
	DB 0x48,0x35,0x6,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 80407DF9 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP1load+0x5 (%rip),rax	; 80407DFD 
	DB 0x48,0x8B,0x5,0x9A,0xDE,0xFF,0xFF
;/*	mov	-0x10(rbp),edx	; 80407E04 
	DB 0x8B,0x55,0xF0
;/*	mov	edx,(rax)	; 80407E07 
	DB 0x89,0x10
;/*	mov	$0x44C539,eax	; 80407E09 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/       OP1 ToOP0
;/*	lea	-0x08(rbp),rbp	; 80407E0E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 80407E12 E8 64 DF FF FF 
;/       -3 ALLOT
;/*	add	$-0x03,_HsubSTDOUT+0x18 (%rip)	; 80407E17 
	DB 0x48,0x83,0x5,0xFD,0xCD,0xFF,0xFF,0xFD
;/ M\ 97 DTST
;/*	mov	rax,-0x08(rbp)	; 80407E1F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x97,eax	; 80407E23 
	DB 0xB8,0x97,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407E28 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80407E2C E8 26 E0 FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80407E31 
	DB 0xE9,0xDF,0xF9,0xFF,0xFF
;/
;/  OP1@ L@ FFFFFF AND D08948 XOR	\ mov	%rdx,%rax
;/*	mov	rax,-0x08(rbp)	; 80407E36 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 80407E3A 
	DB 0x48,0x8B,0x5,0x5D,0xDE,0xFF,0xFF
;/*	mov	(rax),eax	; 80407E41 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80407E43 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xD08948,eax	; 80407E48 
	DB 0x35,0x48,0x89,0xD0,0x0
;/*	mov	rax,-0x10(rbp)	; 80407E4D 
	DB 0x48,0x89,0x45,0xF0
;/  OP0@ L@ FFFFFF AND 00B60F XOR	\ movzbl	(%rax),%eax
;/*	mov	_OP0load+0x5 (%rip),rax	; 80407E51 
	DB 0x48,0x8B,0x5,0x39,0xDE,0xFF,0xFF
;/*	mov	(rax),eax	; 80407E58 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80407E5A 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xB60F,eax	; 80407E5F 
	DB 0x35,0xF,0xB6,0x0,0x0
;/*	or	-0x10(rbp),rax	; 80407E64 
	DB 0x48,0xB,0x45,0xF0
;/  OR  0=
;/*	sub	$0x01,rax	; 80407E68 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80407E6C 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80407E6F 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80407E72 
	DB 0x48,0x8B,0x45,0xF8
;/  M_WL  M\ 8 DTST
;/*	jz	_OPTsubRULES+0x6D2 	; 80407E76 
	DB 0xF,0x84,0x57,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80407E7C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8,eax	; 80407E80 
	DB 0xB8,0x8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407E85 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80407E89 E8 C9 DF FF FF 
;/	02b60f  OP1@ L! \           	movzbl (%rdx),%eax
;/*	mov	rax,-0x08(rbp)	; 80407E8E 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x2B60F,-0x10(rbp)	; 80407E92 
	DB 0x48,0xC7,0x45,0xF0,0xF,0xB6,0x2,0x0
;/*	mov	_OP1load+0x5 (%rip),rax	; 80407E9A 
	DB 0x48,0x8B,0x5,0xFD,0xDD,0xFF,0xFF
;/*	mov	-0x10(rbp),edx	; 80407EA1 
	DB 0x8B,0x55,0xF0
;/*	mov	edx,(rax)	; 80407EA4 
	DB 0x89,0x10
;/*	mov	$0x44C539,eax	; 80407EA6 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/       OP1 ToOP0
;/*	lea	-0x08(rbp),rbp	; 80407EAB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 80407EAF E8 C7 DE FF FF 
;/       -3 ALLOT M\ 9 DTST
;/*	add	$-0x03,_HsubSTDOUT+0x18 (%rip)	; 80407EB4 
	DB 0x48,0x83,0x5,0x60,0xCD,0xFF,0xFF,0xFD
;/*	mov	rax,-0x08(rbp)	; 80407EBC 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x9,eax	; 80407EC0 
	DB 0xB8,0x9,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407EC5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80407EC9 E8 89 DF FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80407ECE 
	DB 0xE9,0x42,0xF9,0xFF,0xFF
;/
;/OP1@ W@ 8B XOR		 \	mov     (%rax),%eax     # 42D551 8B 0
;/*	mov	rax,-0x08(rbp)	; 80407ED3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 80407ED7 
	DB 0x48,0x8B,0x5,0xC0,0xDD,0xFF,0xFF
;/*	movzw	(rax),eax	; 80407EDE 
	DB 0xF,0xB7,0x0
;/*	xor	$0x8B,rax	; 80407EE1 
	DB 0x48,0x35,0x8B,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 80407EE7 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ FFFFFF AND C06348 XOR \ movslq  %eax,%rax       # 42D553 48 63 C0
;/*	mov	_OP0load+0x5 (%rip),rax	; 80407EEB 
	DB 0x48,0x8B,0x5,0x9F,0xDD,0xFF,0xFF
;/*	mov	(rax),eax	; 80407EF2 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80407EF4 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xC06348,eax	; 80407EF9 
	DB 0x35,0x48,0x63,0xC0,0x0
;/*	or	-0x10(rbp),rax	; 80407EFE 
	DB 0x48,0xB,0x45,0xF0
;/  OR  0=
;/*	sub	$0x01,rax	; 80407F02 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80407F06 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80407F09 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80407F0C 
	DB 0x48,0x8B,0x45,0xF8
;/  M_WL  M\ 12 DTST
;/*	jz	_OPTsubRULES+0x773 	; 80407F10 
	DB 0xF,0x84,0x5E,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80407F16 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x12,eax	; 80407F1A 
	DB 0xB8,0x12,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407F1F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80407F23 E8 2F DF FF FF 
;/	OP0 @ W@ OP1 @ L! \ movslq (%rax),%rax
;/*	mov	rax,-0x08(rbp)	; 80407F28 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_LASTsubHERE+0xD (%rip),rax	; 80407F2C 
	DB 0x48,0x8B,0x5,0x14,0xDC,0xFF,0xFF
;/*	movzw	(rax),eax	; 80407F33 
	DB 0xF,0xB7,0x0
;/*	mov	rax,-0x10(rbp)	; 80407F36 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x44C539,eax	; 80407F3A 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	mov	(rax),rax	; 80407F3F 
	DB 0x48,0x8B,0x0
;/*	mov	-0x10(rbp),edx	; 80407F42 
	DB 0x8B,0x55,0xF0
;/*	mov	edx,(rax)	; 80407F45 
	DB 0x89,0x10
;/*	mov	$0x44C539,eax	; 80407F47 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/       OP1 ToOP0
;/*	lea	-0x08(rbp),rbp	; 80407F4C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 80407F50 E8 26 DE FF FF 
;/	-2 ALLOT
;/*	add	$-0x02,_HsubSTDOUT+0x18 (%rip)	; 80407F55 
	DB 0x48,0x83,0x5,0xBF,0xCC,0xFF,0xFF,0xFE
;/	M\ 13 DTST
;/*	mov	rax,-0x08(rbp)	; 80407F5D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x13,eax	; 80407F61 
	DB 0xB8,0x13,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80407F66 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80407F6A E8 E8 DE FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80407F6F 
	DB 0xE9,0xA1,0xF8,0xFF,0xFF
;/
;/ J_COD FE AND 0x84 XOR
;/*	mov	rax,-0x08(rbp)	; 80407F74 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_J_COD+0x5 (%rip),rax	; 80407F78 
	DB 0x48,0x8B,0x5,0x65,0xDB,0xFF,0xFF
;/*	and	$0xFE,eax	; 80407F7F 
	DB 0x25,0xFE,0x0,0x0,0x0
;/*	xor	$-0x7C,al	; 80407F84 
	DB 0x34,0x84
;/*	mov	rax,-0x10(rbp)	; 80407F86 
	DB 0x48,0x89,0x45,0xF0
;/  OP1@ L@ FFFFFF AND
;/*	mov	_OP1load+0x5 (%rip),rax	; 80407F8A 
	DB 0x48,0x8B,0x5,0xD,0xDD,0xFF,0xFF
;/*	mov	(rax),eax	; 80407F91 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80407F93 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	mov	rax,-0x18(rbp)	; 80407F98 
	DB 0x48,0x89,0x45,0xE8
;/   DUP  F08148  XOR     \  xor	$_,%rax
;/*	xor	$0xF08148,rax	; 80407F9C 
	DB 0x48,0x35,0x48,0x81,0xF0,0x0
;/*	mov	rax,-0x20(rbp)	; 80407FA2 
	DB 0x48,0x89,0x45,0xE0
;/  OVER  F08348  <> AND     \  xor	$_,%rax
;/*	mov	-0x18(rbp),rax	; 80407FA6 
	DB 0x48,0x8B,0x45,0xE8
;/*	xor	$0xF08348,rax	; 80407FAA 
	DB 0x48,0x35,0x48,0x83,0xF0,0x0
;/*		negq	rax	; 80407FB0 
	DB 0x48,0xF7,0xD8
;/*	sbb	rax,rax	; 80407FB3 
	DB 0x48,0x19,0xC0
;/*	and	-0x20(rbp),rax	; 80407FB6 
	DB 0x48,0x23,0x45,0xE0
;/*	mov	rax,-0x20(rbp)	; 80407FBA 
	DB 0x48,0x89,0x45,0xE0
;/  OVER  E08348  <> AND     \  and	$_,%rax
;/*	mov	-0x18(rbp),rax	; 80407FBE 
	DB 0x48,0x8B,0x45,0xE8
;/*	xor	$0xE08348,rax	; 80407FC2 
	DB 0x48,0x35,0x48,0x83,0xE0,0x0
;/*		negq	rax	; 80407FC8 
	DB 0x48,0xF7,0xD8
;/*	sbb	rax,rax	; 80407FCB 
	DB 0x48,0x19,0xC0
;/*	and	-0x20(rbp),rax	; 80407FCE 
	DB 0x48,0x23,0x45,0xE0
;/*	mov	-0x18(rbp),rdx	; 80407FD2 
	DB 0x48,0x8B,0x55,0xE8
;/  SWAP  F8C148  <> AND     \  and	$_,%rax
;/*	mov	rax,-0x18(rbp)	; 80407FD6 
	DB 0x48,0x89,0x45,0xE8
;/*	mov	rdx,-0x20(rbp)	; 80407FDA 
	DB 0x48,0x89,0x55,0xE0
;/*	mov	$0xF8C148,eax	; 80407FDE 
	DB 0xB8,0x48,0xC1,0xF8,0x0
;/*	xor	-0x20(rbp),rax	; 80407FE3 
	DB 0x48,0x33,0x45,0xE0
;/*		negq	rax	; 80407FE7 
	DB 0x48,0xF7,0xD8
;/*	sbb	rax,rax	; 80407FEA 
	DB 0x48,0x19,0xC0
;/*	and	-0x18(rbp),rax	; 80407FED 
	DB 0x48,0x23,0x45,0xE8
;/*	or	-0x10(rbp),rax	; 80407FF1 
	DB 0x48,0xB,0x45,0xF0
;/  OR
;/*	mov	rax,-0x10(rbp)	; 80407FF5 
	DB 0x48,0x89,0x45,0xF0
;/ OP0@ L@ FFFFFF AND c08548 XOR \      test    %rax,%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 80407FF9 
	DB 0x48,0x8B,0x5,0x91,0xDC,0xFF,0xFF
;/*	mov	(rax),eax	; 80408000 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80408002 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xC08548,eax	; 80408007 
	DB 0x35,0x48,0x85,0xC0,0x0
;/*	or	-0x10(rbp),rax	; 8040800C 
	DB 0x48,0xB,0x45,0xF0
;/ OR  0=
;/*	sub	$0x01,rax	; 80408010 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80408014 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80408017 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040801A 
	DB 0x48,0x8B,0x45,0xF8
;/ M_WL  M\ 14 DTST
;/*	jz	_OPTsubRULES+0x866 	; 8040801E 
	DB 0xF,0x84,0x43,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80408024 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x14,eax	; 80408028 
	DB 0xB8,0x14,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040802D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408031 E8 21 DE FF FF 
;/       OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 80408036 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 8040803A 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	lea	-0x08(rbp),rbp	; 8040803F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 80408043 E8 33 DD FF FF 
;/	-3 ALLOT
;/*	add	$-0x03,_HsubSTDOUT+0x18 (%rip)	; 80408048 
	DB 0x48,0x83,0x5,0xCC,0xCB,0xFF,0xFF,0xFD
;/	M\ 15 DTST
;/*	mov	rax,-0x08(rbp)	; 80408050 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x15,eax	; 80408054 
	DB 0xB8,0x15,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408059 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040805D E8 F5 DD FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80408062 
	DB 0xE9,0xAE,0xF7,0xFF,0xFF
;/
;/OP1@ 2+ W@ OP0@ 2+ W@ XOR	\	regs & indexes
;/*	mov	rax,-0x08(rbp)	; 80408067 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040806B 
	DB 0x48,0x8B,0x5,0x2C,0xDC,0xFF,0xFF
;/*	movzw	0x02(rax),eax	; 80408072 
	DB 0xF,0xB7,0x40,0x2
;/*	mov	rax,-0x10(rbp)	; 80408076 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040807A 
	DB 0x48,0x8B,0x5,0x10,0xDC,0xFF,0xFF
;/*	movzw	0x02(rax),eax	; 80408081 
	DB 0xF,0xB7,0x40,0x2
;/*	xor	-0x10(rbp),rax	; 80408085 
	DB 0x48,0x33,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 80408089 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ L@ EFFDFF AND 458948 XOR OR \	mov 0x00(%rbp),%rax | %rax,0x00(%rbp)
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040808D 
	DB 0x48,0x8B,0x5,0xA,0xDC,0xFF,0xFF
;/*	mov	(rax),eax	; 80408094 
	DB 0x8B,0x0
;/*	and	$0xEFFDFF,eax	; 80408096 
	DB 0x25,0xFF,0xFD,0xEF,0x0
;/*	xor	$0x458948,eax	; 8040809B 
	DB 0x35,0x48,0x89,0x45,0x0
;/*	or	-0x10(rbp),rax	; 804080A0 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 804080A4 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ EFFDFF AND 458948 XOR OR \	mov 0x00(%rbp),%rax | %rax,0x00(%rbp)
;/*	mov	_OP0load+0x5 (%rip),rax	; 804080A8 
	DB 0x48,0x8B,0x5,0xE2,0xDB,0xFF,0xFF
;/*	mov	(rax),eax	; 804080AF 
	DB 0x8B,0x0
;/*	and	$0xEFFDFF,eax	; 804080B1 
	DB 0x25,0xFF,0xFD,0xEF,0x0
;/*	xor	$0x458948,eax	; 804080B6 
	DB 0x35,0x48,0x89,0x45,0x0
;/*	or	-0x10(rbp),rax	; 804080BB 
	DB 0x48,0xB,0x45,0xF0
;/*	sub	$0x01,rax	; 804080BF 
	DB 0x48,0x83,0xE8,0x1
;/  0=
;/*	sbb	rax,rax	; 804080C3 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 804080C6 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804080C9 
	DB 0x48,0x8B,0x45,0xF8
;/ M_WL  M\ 18 DTST
;/*	jz	_OPTsubRULES+0x915 	; 804080CD 
	DB 0xF,0x84,0x43,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804080D3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x18,eax	; 804080D7 
	DB 0xB8,0x18,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804080DC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 804080E0 E8 72 DD FF FF 
;/       OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 804080E5 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 804080E9 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	lea	-0x08(rbp),rbp	; 804080EE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 804080F2 E8 84 DC FF FF 
;/	-4 ALLOT
;/*	add	$-0x04,_HsubSTDOUT+0x18 (%rip)	; 804080F7 
	DB 0x48,0x83,0x5,0x1D,0xCB,0xFF,0xFF,0xFC
;/	M\ 19 DTST
;/*	mov	rax,-0x08(rbp)	; 804080FF 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x19,eax	; 80408103 
	DB 0xB8,0x19,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408108 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040810C E8 46 DD FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80408111 
	DB 0xE9,0xFF,0xF6,0xFF,0xFF
;/
;/OP1@ L@ FFFFFF AND f0894c XOR \	mov     %r14,%rax
;/*	mov	rax,-0x08(rbp)	; 80408116 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040811A 
	DB 0x48,0x8B,0x5,0x7D,0xDB,0xFF,0xFF
;/*	mov	(rax),eax	; 80408121 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80408123 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xF0894C,eax	; 80408128 
	DB 0x35,0x4C,0x89,0xF0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040812D 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ FFFFFF AND 008b48 XOR \	mov     (%rax),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 80408131 
	DB 0x48,0x8B,0x5,0x59,0xDB,0xFF,0xFF
;/*	mov	(rax),eax	; 80408138 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040813A 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x8B48,eax	; 8040813F 
	DB 0x35,0x48,0x8B,0x0,0x0
;/*	or	-0x10(rbp),rax	; 80408144 
	DB 0x48,0xB,0x45,0xF0
;/ OR 0=
;/*	sub	$0x01,rax	; 80408148 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 8040814C 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040814F 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80408152 
	DB 0x48,0x8B,0x45,0xF8
;/ M_WL  M\ 1A DTST
;/*	jz	_OPTsubRULES+0x9B2 	; 80408156 
	DB 0xF,0x84,0x57,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040815C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x1A,eax	; 80408160 
	DB 0xB8,0x1A,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408165 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408169 E8 E9 DC FF FF 
;/	068b49 OP1@ L! \ mov    (%r14),%rax
;/*	mov	rax,-0x08(rbp)	; 8040816E 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x68B49,-0x10(rbp)	; 80408172 
	DB 0x48,0xC7,0x45,0xF0,0x49,0x8B,0x6,0x0
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040817A 
	DB 0x48,0x8B,0x5,0x1D,0xDB,0xFF,0xFF
;/*	mov	-0x10(rbp),edx	; 80408181 
	DB 0x8B,0x55,0xF0
;/*	mov	edx,(rax)	; 80408184 
	DB 0x89,0x10
;/*	mov	$0x44C539,eax	; 80408186 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/       OP1 ToOP0
;/*	lea	-0x08(rbp),rbp	; 8040818B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 8040818F E8 E7 DB FF FF 
;/	-3 ALLOT
;/*	add	$-0x03,_HsubSTDOUT+0x18 (%rip)	; 80408194 
	DB 0x48,0x83,0x5,0x80,0xCA,0xFF,0xFF,0xFD
;/	M\ 1B DTST
;/*	mov	rax,-0x08(rbp)	; 8040819C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x1B,eax	; 804081A0 
	DB 0xB8,0x1B,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804081A5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 804081A9 E8 A9 DC FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 804081AE 
	DB 0xE9,0x62,0xF6,0xFF,0xFF
;/
;/OP1@ L@ FFFFFF AND d08948 XOR \ mov     %rdx,%rax
;/*	mov	rax,-0x08(rbp)	; 804081B3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 804081B7 
	DB 0x48,0x8B,0x5,0xE0,0xDA,0xFF,0xFF
;/*	mov	(rax),eax	; 804081BE 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 804081C0 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xD08948,eax	; 804081C5 
	DB 0x35,0x48,0x89,0xD0,0x0
;/*	mov	rax,-0x10(rbp)	; 804081CA 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ FFFFFF AND 008b48 XOR \ mov     (%rax),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 804081CE 
	DB 0x48,0x8B,0x5,0xBC,0xDA,0xFF,0xFF
;/*	mov	(rax),eax	; 804081D5 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 804081D7 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x8B48,eax	; 804081DC 
	DB 0x35,0x48,0x8B,0x0,0x0
;/*	or	-0x10(rbp),rax	; 804081E1 
	DB 0x48,0xB,0x45,0xF0
;/ OR 0=
;/*	sub	$0x01,rax	; 804081E5 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 804081E9 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 804081EC 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804081EF 
	DB 0x48,0x8B,0x45,0xF8
;/ M_WL  M\ 1C DTST
;/*	jz	_OPTsubRULES+0xA4F 	; 804081F3 
	DB 0xF,0x84,0x57,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804081F9 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x1C,eax	; 804081FD 
	DB 0xB8,0x1C,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408202 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408206 E8 4C DC FF FF 
;/	028b48 OP1@ L! \ mov    (%rdx),%rax
;/*	mov	rax,-0x08(rbp)	; 8040820B 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x28B48,-0x10(rbp)	; 8040820F 
	DB 0x48,0xC7,0x45,0xF0,0x48,0x8B,0x2,0x0
;/*	mov	_OP1load+0x5 (%rip),rax	; 80408217 
	DB 0x48,0x8B,0x5,0x80,0xDA,0xFF,0xFF
;/*	mov	-0x10(rbp),edx	; 8040821E 
	DB 0x8B,0x55,0xF0
;/*	mov	edx,(rax)	; 80408221 
	DB 0x89,0x10
;/*	mov	$0x44C539,eax	; 80408223 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/	OP1 ToOP0
;/*	lea	-0x08(rbp),rbp	; 80408228 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 8040822C E8 4A DB FF FF 
;/	-3 ALLOT
;/*	add	$-0x03,_HsubSTDOUT+0x18 (%rip)	; 80408231 
	DB 0x48,0x83,0x5,0xE3,0xC9,0xFF,0xFF,0xFD
;/	M\ 1D DTST
;/*	mov	rax,-0x08(rbp)	; 80408239 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x1D,eax	; 8040823D 
	DB 0xB8,0x1D,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408242 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408246 E8 C DC FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040824B 
	DB 0xE9,0xC5,0xF5,0xFF,0xFF
;/J_COD F0 AND 0x80 XOR
;/*	mov	rax,-0x08(rbp)	; 80408250 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_J_COD+0x5 (%rip),rax	; 80408254 
	DB 0x48,0x8B,0x5,0x89,0xD8,0xFF,0xFF
;/*	and	$0xF0,eax	; 8040825B 
	DB 0x25,0xF0,0x0,0x0,0x0
;/*	xor	$-0x80,al	; 80408260 
	DB 0x34,0x80
;/*	mov	rax,-0x10(rbp)	; 80408262 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ L@ 1e88348 XOR OR		\ sub     $0x01,%rax      # 80406522      */
;/*	mov	_OP1load+0x5 (%rip),rax	; 80408266 
	DB 0x48,0x8B,0x5,0x31,0xDA,0xFF,0xFF
;/*	mov	(rax),eax	; 8040826D 
	DB 0x8B,0x0
;/*	xor	$0x1E88348,rax	; 8040826F 
	DB 0x48,0x35,0x48,0x83,0xE8,0x1
;/*	or	-0x10(rbp),rax	; 80408275 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 80408279 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ FFFFFF AND c01948 XOR OR \ sbb     %rax,%rax       # 80406526
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040827D 
	DB 0x48,0x8B,0x5,0xD,0xDA,0xFF,0xFF
;/*	mov	(rax),eax	; 80408284 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80408286 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xC01948,eax	; 8040828B 
	DB 0x35,0x48,0x19,0xC0,0x0
;/*	or	-0x10(rbp),rax	; 80408290 
	DB 0x48,0xB,0x45,0xF0
;/*	sub	$0x01,rax	; 80408294 
	DB 0x48,0x83,0xE8,0x1
;/  0=
;/*	sbb	rax,rax	; 80408298 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040829B 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040829E 
	DB 0x48,0x8B,0x45,0xF8
;/ M_WL  M\ 20 DTST
;/*	jz	_OPTsubRULES+0xB17 	; 804082A2 
	DB 0xF,0x84,0x70,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804082A8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x20,eax	; 804082AC 
	DB 0xB8,0x20,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804082B1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 804082B5 E8 9D DB FF FF 
;/	C085 OP1@ 1+ W! \ test   %rax,%rax
;/*	mov	rax,-0x08(rbp)	; 804082BA 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0xC085,-0x10(rbp)	; 804082BE 
	DB 0x48,0xC7,0x45,0xF0,0x85,0xC0,0x0,0x0
;/*	mov	_OP1load+0x5 (%rip),rax	; 804082C6 
	DB 0x48,0x8B,0x5,0xD1,0xD9,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 804082CD 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),edx	; 804082D1 
	DB 0x8B,0x55,0xF0
;/*	mov	dx,(rax)	; 804082D4 
	DB 0x66,0x89,0x10
;/*	mov	_J_COD+0x5 (%rip),rax	; 804082D7 
	DB 0x48,0x8B,0x5,0x6,0xD8,0xFF,0xFF
;/	J_COD 1 XOR TO J_COD
;/*	xor	$0x1,rax	; 804082DE 
	DB 0x48,0x35,0x1,0x0,0x0,0x0
;/*	mov	rax,_J_COD+0x5 (%rip)	; 804082E4 
	DB 0x48,0x89,0x5,0xF9,0xD7,0xFF,0xFF
;/*	mov	$0x44C539,eax	; 804082EB 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/	OP1 ToOP0
;/*	lea	-0x08(rbp),rbp	; 804082F0 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 804082F4 E8 82 DA FF FF 
;/	-4 ALLOT
;/*	add	$-0x04,_HsubSTDOUT+0x18 (%rip)	; 804082F9 
	DB 0x48,0x83,0x5,0x1B,0xC9,0xFF,0xFF,0xFC
;/	M\ 21 DTST
;/*	mov	rax,-0x08(rbp)	; 80408301 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x21,eax	; 80408305 
	DB 0xB8,0x21,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040830A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040830E E8 44 DB FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80408313 
	DB 0xE9,0xFD,0xF4,0xFF,0xFF
;/
;/OP1@ W@ 9248 XOR	\ xchg    %rdx,%rax
;/*	mov	rax,-0x08(rbp)	; 80408318 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040831C 
	DB 0x48,0x8B,0x5,0x7B,0xD9,0xFF,0xFF
;/*	movzw	(rax),eax	; 80408323 
	DB 0xF,0xB7,0x0
;/*	xor	$0x9248,rax	; 80408326 
	DB 0x48,0x35,0x48,0x92,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040832C 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ FFFFFF AND
;/*	mov	_OP0load+0x5 (%rip),rax	; 80408330 
	DB 0x48,0x8B,0x5,0x5A,0xD9,0xFF,0xFF
;/*	mov	(rax),eax	; 80408337 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80408339 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	mov	rax,-0x18(rbp)	; 8040833E 
	DB 0x48,0x89,0x45,0xE8
;/DUP	458948 XOR	\ mov     %rax,-0x08(%rbp)
;/*	xor	$0x458948,rax	; 80408342 
	DB 0x48,0x35,0x48,0x89,0x45,0x0
;/*	mov	rax,-0x20(rbp)	; 80408348 
	DB 0x48,0x89,0x45,0xE0
;/OVER	108948 <> AND	\ mov     %rdx,(%rax)
;/*	mov	-0x18(rbp),rax	; 8040834C 
	DB 0x48,0x8B,0x45,0xE8
;/*	xor	$0x108948,rax	; 80408350 
	DB 0x48,0x35,0x48,0x89,0x10,0x0
;/*		negq	rax	; 80408356 
	DB 0x48,0xF7,0xD8
;/*	sbb	rax,rax	; 80408359 
	DB 0x48,0x19,0xC0
;/*	and	-0x20(rbp),rax	; 8040835C 
	DB 0x48,0x23,0x45,0xE0
;/*	mov	-0x18(rbp),rdx	; 80408360 
	DB 0x48,0x8B,0x55,0xE8
;/SWAP	100148 <> AND	\ add     %rdx,(%rax)
;/*	mov	rax,-0x18(rbp)	; 80408364 
	DB 0x48,0x89,0x45,0xE8
;/*	mov	rdx,-0x20(rbp)	; 80408368 
	DB 0x48,0x89,0x55,0xE0
;/*	mov	$0x100148,eax	; 8040836C 
	DB 0xB8,0x48,0x1,0x10,0x0
;/*	xor	-0x20(rbp),rax	; 80408371 
	DB 0x48,0x33,0x45,0xE0
;/*		negq	rax	; 80408375 
	DB 0x48,0xF7,0xD8
;/*	sbb	rax,rax	; 80408378 
	DB 0x48,0x19,0xC0
;/*	and	-0x18(rbp),rax	; 8040837B 
	DB 0x48,0x23,0x45,0xE8
;/*	or	-0x10(rbp),rax	; 8040837F 
	DB 0x48,0xB,0x45,0xF0
;/ OR   0=
;/*	sub	$0x01,rax	; 80408383 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80408387 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040838A 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040838D 
	DB 0x48,0x8B,0x45,0xF8
;/ M_WL  M\ 2E DTST
;/*	jz	_OPTsubRULES+0xC64 	; 80408391 
	DB 0xF,0x84,0xCE,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80408397 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x2E,eax	; 8040839B 
	DB 0xB8,0x2E,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804083A0 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 804083A4 E8 AE DA FF FF 
;/	OP0@ 2+ C@ 45 XOR
;/*	mov	rax,-0x08(rbp)	; 804083A9 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP0load+0x5 (%rip),rax	; 804083AD 
	DB 0x48,0x8B,0x5,0xDD,0xD8,0xFF,0xFF
;/*	movzb	0x02(rax),eax	; 804083B4 
	DB 0xF,0xB6,0x40,0x2
;/*	xor	$0x45,rax	; 804083B8 
	DB 0x48,0x35,0x45,0x0,0x0,0x0
	test	rax,rax	; 804083BE 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804083C1 
	DB 0x48,0x8B,0x45,0xF8
;/	IF	OP0@ W@ 020000 OR \ %rax,(%rdx)
;/*	jz	_OPTsubRULES+0xC00 	; 804083C5 
	DB 0xF,0x84,0x36,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804083CB 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP0load+0x5 (%rip),rax	; 804083CF 
	DB 0x48,0x8B,0x5,0xBB,0xD8,0xFF,0xFF
;/*	movzw	(rax),eax	; 804083D6 
	DB 0xF,0xB7,0x0
;/*	or	$0x20000,rax	; 804083D9 
	DB 0x48,0xD,0x0,0x0,0x2,0x0
;/*	mov	rax,-0x10(rbp)	; 804083DF 
	DB 0x48,0x89,0x45,0xF0
;/		1 OP0 +!
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 804083E3 
	DB 0x48,0x8D,0x5,0x5D,0xD7,0xFF,0xFF
;/*	movq	$0x1,rdx	; 804083EA 
	DB 0x48,0xC7,0xC2,0x1,0x0,0x0,0x0
;/*	add	rdx,(rax)	; 804083F1 
	DB 0x48,0x1,0x10
;/*	mov	-0x10(rbp),rax	; 804083F4 
	DB 0x48,0x8B,0x45,0xF0
;/*	lea	-0x08(rbp),rbp	; 804083F8 
	DB 0x48,0x8D,0x6D,0xF8
;/	ELSE	OP0@ L@ 500000 OR \ %rax,(%rdx)
;/*	jmp	_OPTsubRULES+0xC30 	; 804083FC 
	DB 0xE9,0x30,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80408401 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP0load+0x5 (%rip),rax	; 80408405 
	DB 0x48,0x8B,0x5,0x85,0xD8,0xFF,0xFF
;/*	mov	(rax),eax	; 8040840C 
	DB 0x8B,0x0
;/*	or	$0x500000,rax	; 8040840E 
	DB 0x48,0xD,0x0,0x0,0x50,0x0
;/*	mov	rax,-0x10(rbp)	; 80408414 
	DB 0x48,0x89,0x45,0xF0
;/		2 OP0 +!
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 80408418 
	DB 0x48,0x8D,0x5,0x28,0xD7,0xFF,0xFF
;/*	movq	$0x2,rdx	; 8040841F 
	DB 0x48,0xC7,0xC2,0x2,0x0,0x0,0x0
;/*	add	rdx,(rax)	; 80408426 
	DB 0x48,0x1,0x10
;/*	mov	-0x10(rbp),rax	; 80408429 
	DB 0x48,0x8B,0x45,0xF0
;/*	lea	-0x08(rbp),rbp	; 8040842D 
	DB 0x48,0x8D,0x6D,0xF8
;/	THEN OP1@ L!	\ __	%rax,(%rdx)
;/*	mov	rax,-0x08(rbp)	; 80408431 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 80408435 
	DB 0x48,0x8B,0x5,0x62,0xD8,0xFF,0xFF
;/*	mov	-0x08(rbp),edx	; 8040843C 
	DB 0x8B,0x55,0xF8
;/*	mov	edx,(rax)	; 8040843F 
	DB 0x89,0x10
;/*	movq	$0x9248,-0x08(rbp)	; 80408441 
	DB 0x48,0xC7,0x45,0xF8,0x48,0x92,0x0,0x0
;/        9248 OP0 @ W!	\ xchg    %rdx,%rax
;/*	mov	_LASTsubHERE+0xD (%rip),rax	; 80408449 
	DB 0x48,0x8B,0x5,0xF7,0xD6,0xFF,0xFF
;/*	mov	-0x08(rbp),edx	; 80408450 
	DB 0x8B,0x55,0xF8
;/*	mov	dx,(rax)	; 80408453 
	DB 0x66,0x89,0x10
;/*	mov	$0x2F,eax	; 80408456 
	DB 0xB8,0x2F,0x0,0x0,0x0
	call	_DTST	; 8040845B E8 F7 D9 FF FF 
;/	M\ 2F DTST
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80408460 
	DB 0xE9,0xB0,0xF3,0xFF,0xFF
;/
;/OP1@ C@ B8 XOR \ movq    $0x108,%rax
;/*	mov	rax,-0x08(rbp)	; 80408465 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 80408469 
	DB 0x48,0x8B,0x5,0x2E,0xD8,0xFF,0xFF
;/*	movzb	(rax),eax	; 80408470 
	DB 0xF,0xB6,0x0
;/*	xor	$-0x48,al	; 80408473 
	DB 0x34,0xB8
;/*	mov	rax,-0x10(rbp)	; 80408475 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ F7FFFF AND d0f748 XOR \ negq|notq    %rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 80408479 
	DB 0x48,0x8B,0x5,0x11,0xD8,0xFF,0xFF
;/*	mov	(rax),eax	; 80408480 
	DB 0x8B,0x0
;/*	and	$0xF7FFFF,eax	; 80408482 
	DB 0x25,0xFF,0xFF,0xF7,0x0
;/*	xor	$0xD0F748,eax	; 80408487 
	DB 0x35,0x48,0xF7,0xD0,0x0
;/*	or	-0x10(rbp),rax	; 8040848C 
	DB 0x48,0xB,0x45,0xF0
;/ OR 0=
;/*	sub	$0x01,rax	; 80408490 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80408494 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80408497 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040849A 
	DB 0x48,0x8B,0x45,0xF8
;/ M_WL  M\ 48 DTST
;/*	jz	_OPTsubRULES+0xD85 	; 8040849E 
	DB 0xF,0x84,0xE2,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804084A4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x48,eax	; 804084A8 
	DB 0xB8,0x48,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804084AD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 804084B1 E8 A1 D9 FF FF 
;/	OP1@ 1+ L@ OP0@ L@ 80000 AND IF NEGATE ELSE INVERT THEN
;/*	mov	rax,-0x08(rbp)	; 804084B6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 804084BA 
	DB 0x48,0x8B,0x5,0xDD,0xD7,0xFF,0xFF
;/*	mov	0x01(rax),eax	; 804084C1 
	DB 0x8B,0x40,0x1
;/*	mov	rax,-0x10(rbp)	; 804084C4 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP0load+0x5 (%rip),rax	; 804084C8 
	DB 0x48,0x8B,0x5,0xC2,0xD7,0xFF,0xFF
;/*	mov	(rax),eax	; 804084CF 
	DB 0x8B,0x0
;/*	and	$0x80000,eax	; 804084D1 
	DB 0x25,0x0,0x0,0x8,0x0
	test	rax,rax	; 804084D6 48 85 C0 
;/*	mov	-0x10(rbp),rax	; 804084D9 
	DB 0x48,0x8B,0x45,0xF0
;/*	lea	-0x08(rbp),rbp	; 804084DD 
	DB 0x48,0x8D,0x6D,0xF8
;/*	jz	_OPTsubRULES+0xCEE 	; 804084E1 
	DB 0xF,0x84,0x8,0x0,0x0,0x0
;/*		negq	rax	; 804084E7 
	DB 0x48,0xF7,0xD8
;/*	jmp	_OPTsubRULES+0xCF1 	; 804084EA 
	DB 0xE9,0x3,0x0,0x0,0x0
;/*		notq	rax	; 804084EF 
	DB 0x48,0xF7,0xD0
;/       OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 804084F2 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 804084F6 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	lea	-0x08(rbp),rbp	; 804084FB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 804084FF E8 77 D8 FF FF 
;/	-8 ALLOT 48 C,
;/*	add	$-0x08,_HsubSTDOUT+0x18 (%rip)	; 80408504 
	DB 0x48,0x83,0x5,0x10,0xC7,0xFF,0xFF,0xF8
;/*	mov	rax,-0x08(rbp)	; 8040850C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x48,eax	; 80408510 
	DB 0xB8,0x48,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408515 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Ccom	; 80408519 E8 9C C7 FF FF 
;/	DUP LONG?
;/*	mov	rax,-0x08(rbp)	; 8040851E 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	-0x08(rbp),rbp	; 80408522 
	DB 0x48,0x8D,0x6D,0xF8
	call	_LONGque	; 80408526 E8 16 D5 FF FF 
;/	IF      c0c7 W, L,
	test	rax,rax	; 8040852B 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040852E 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80408532 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0xD57 	; 80408536 
	DB 0xF,0x84,0x1C,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040853C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC0C7,eax	; 80408540 
	DB 0xB8,0xC7,0xC0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408545 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Wcom	; 80408549 E8 4A C7 FF FF 
	call	_Lcom	; 8040854E E8 24 C7 FF FF 
;/	ELSE   $B8 C,  ,	\  movabs $X,%rax
;/*	jmp	_OPTsubRULES+0xD6E 	; 80408553 
	DB 0xE9,0x17,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80408558 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB8,eax	; 8040855C 
	DB 0xB8,0xB8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408561 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Ccom	; 80408565 E8 50 C7 FF FF 
	call	_com	; 8040856A E8 ED C6 FF FF 
;/	THEN
;/	M\ 49 DTST
;/*	mov	rax,-0x08(rbp)	; 8040856F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x49,eax	; 80408573 
	DB 0xB8,0x49,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408578 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040857C E8 D6 D8 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80408581 
	DB 0xE9,0x8F,0xF2,0xFF,0xFF
;/OP1@ C@ B8 XOR \ movq    $0x108,%rax
;/*	mov	rax,-0x08(rbp)	; 80408586 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040858A 
	DB 0x48,0x8B,0x5,0xD,0xD7,0xFF,0xFF
;/*	movzb	(rax),eax	; 80408591 
	DB 0xF,0xB6,0x0
;/*	xor	$-0x48,al	; 80408594 
	DB 0x34,0xB8
;/*	mov	rax,-0x10(rbp)	; 80408596 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ W@ C188 XOR \ mov     %al,%cl
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040859A 
	DB 0x48,0x8B,0x5,0xF0,0xD6,0xFF,0xFF
;/*	movzw	(rax),eax	; 804085A1 
	DB 0xF,0xB7,0x0
;/*	xor	$0xC188,rax	; 804085A4 
	DB 0x48,0x35,0x88,0xC1,0x0,0x0
;/*	or	-0x10(rbp),rax	; 804085AA 
	DB 0x48,0xB,0x45,0xF0
;/ OR 0=
;/*	sub	$0x01,rax	; 804085AE 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 804085B2 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 804085B5 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804085B8 
	DB 0x48,0x8B,0x45,0xF8
;/ M_WL	M\ 5E DTST
;/*	jz	_OPTsubRULES+0xE1D 	; 804085BC 
	DB 0xF,0x84,0x5C,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804085C2 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x5E,eax	; 804085C6 
	DB 0xB8,0x5E,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804085CB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 804085CF E8 83 D8 FF FF 
;/  B1 OP0@ C! OP1@ 1+ C@ OP0@ 1+ C!   \ mov    $8,%cl
;/*	mov	rax,-0x08(rbp)	; 804085D4 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0xB1,-0x10(rbp)	; 804085D8 
	DB 0x48,0xC7,0x45,0xF0,0xB1,0x0,0x0,0x0
;/*	mov	_OP0load+0x5 (%rip),rax	; 804085E0 
	DB 0x48,0x8B,0x5,0xAA,0xD6,0xFF,0xFF
;/*	mov	-0x10(rbp),dl	; 804085E7 
	DB 0x8A,0x55,0xF0
;/*	mov	dl,(rax)	; 804085EA 
	DB 0x88,0x10
;/*	mov	_OP1load+0x5 (%rip),rax	; 804085EC 
	DB 0x48,0x8B,0x5,0xAB,0xD6,0xFF,0xFF
;/*	movzb	0x01(rax),eax	; 804085F3 
	DB 0xF,0xB6,0x40,0x1
;/*	mov	rax,-0x10(rbp)	; 804085F7 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP0load+0x5 (%rip),rax	; 804085FB 
	DB 0x48,0x8B,0x5,0x8F,0xD6,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 80408602 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),dl	; 80408606 
	DB 0x8A,0x55,0xF0
;/*	mov	dl,(rax)	; 80408609 
	DB 0x88,0x10
;/*	mov	$0x5F,eax	; 8040860B 
	DB 0xB8,0x5F,0x0,0x0,0x0
;/	M\ 5F DTST
;/*	lea	-0x08(rbp),rbp	; 80408610 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408614 E8 3E D8 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80408619 
	DB 0xE9,0xF7,0xF1,0xFF,0xFF
;/
;/
;/OP1@ L@ FFFFFF AND c0c748 XOR \ movq    $0x108,%rax
;/*	mov	rax,-0x08(rbp)	; 8040861E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 80408622 
	DB 0x48,0x8B,0x5,0x75,0xD6,0xFF,0xFF
;/*	mov	(rax),eax	; 80408629 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040862B 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xC0C748,eax	; 80408630 
	DB 0x35,0x48,0xC7,0xC0,0x0
;/*	mov	rax,-0x10(rbp)	; 80408635 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ FFFFFF AND d8f748 XOR \ negq    %rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 80408639 
	DB 0x48,0x8B,0x5,0x51,0xD6,0xFF,0xFF
;/*	mov	(rax),eax	; 80408640 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80408642 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xD8F748,eax	; 80408647 
	DB 0x35,0x48,0xF7,0xD8,0x0
;/*	or	-0x10(rbp),rax	; 8040864C 
	DB 0x48,0xB,0x45,0xF0
;/ OR 0=
;/*	sub	$0x01,rax	; 80408650 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80408654 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80408657 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040865A 
	DB 0x48,0x8B,0x45,0xF8
;/ M_WL  M\ 36 DTST
;/*	jz	_OPTsubRULES+0xECD 	; 8040865E 
	DB 0xF,0x84,0x6A,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80408664 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x36,eax	; 80408668 
	DB 0xB8,0x36,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040866D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408671 E8 E1 D7 FF FF 
;/	OP1@ 3 + SL@  NEGATE OP1@ 3 + L!
;/*	mov	rax,-0x08(rbp)	; 80408676 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040867A 
	DB 0x48,0x8B,0x5,0x1D,0xD6,0xFF,0xFF
;/*	lea	0x03(rax),rax	; 80408681 
	DB 0x48,0x8D,0x40,0x3
;/*	lea	-0x08(rbp),rbp	; 80408685 
	DB 0x48,0x8D,0x6D,0xF8
	call	_SLload	; 80408689 E8 33 BB FF FF 
;/*		negq	rax	; 8040868E 
	DB 0x48,0xF7,0xD8
;/*	mov	rax,-0x08(rbp)	; 80408691 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 80408695 
	DB 0x48,0x8B,0x5,0x2,0xD6,0xFF,0xFF
;/*	lea	0x03(rax),rax	; 8040869C 
	DB 0x48,0x8D,0x40,0x3
;/*	mov	-0x08(rbp),edx	; 804086A0 
	DB 0x8B,0x55,0xF8
;/*	mov	edx,(rax)	; 804086A3 
	DB 0x89,0x10
;/*	mov	$0x44C539,eax	; 804086A5 
	DB 0xB8,0x39,0xC5,0x44,0x0
	call	_ToOP0	; 804086AA E8 CC D6 FF FF 
;/       OP1 ToOP0
;/	-3 ALLOT
;/*	add	$-0x03,_HsubSTDOUT+0x18 (%rip)	; 804086AF 
	DB 0x48,0x83,0x5,0x65,0xC5,0xFF,0xFF,0xFD
;/	M\ 37 DTST
;/*	mov	rax,-0x08(rbp)	; 804086B7 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x37,eax	; 804086BB 
	DB 0xB8,0x37,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804086C0 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 804086C4 E8 8E D7 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 804086C9 
	DB 0xE9,0x47,0xF1,0xFF,0xFF
;/
;/OP1@ W@ 9248 XOR		\ xchg    %rdx,%rax
;/*	mov	rax,-0x08(rbp)	; 804086CE 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 804086D2 
	DB 0x48,0x8B,0x5,0xC5,0xD5,0xFF,0xFF
;/*	movzw	(rax),eax	; 804086D9 
	DB 0xF,0xB7,0x0
;/*	xor	$0x9248,rax	; 804086DC 
	DB 0x48,0x35,0x48,0x92,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 804086E2 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ FFFFFF AND d08948 XOR	\ mov     %rdx,%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 804086E6 
	DB 0x48,0x8B,0x5,0xA4,0xD5,0xFF,0xFF
;/*	mov	(rax),eax	; 804086ED 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 804086EF 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xD08948,eax	; 804086F4 
	DB 0x35,0x48,0x89,0xD0,0x0
;/*	or	-0x10(rbp),rax	; 804086F9 
	DB 0x48,0xB,0x45,0xF0
;/ OR 0=
;/*	sub	$0x01,rax	; 804086FD 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80408701 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80408704 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80408707 
	DB 0x48,0x8B,0x45,0xF8
;/ M_WL  M\ 3A DTST
;/*	jz	_OPTsubRULES+0xF53 	; 8040870B 
	DB 0xF,0x84,0x43,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80408711 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x3A,eax	; 80408715 
	DB 0xB8,0x3A,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040871A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040871E E8 34 D7 FF FF 
;/       OP2 ToOP0
;/*	mov	rax,-0x08(rbp)	; 80408723 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C541,eax	; 80408727 
	DB 0xB8,0x41,0xC5,0x44,0x0
;/*	lea	-0x08(rbp),rbp	; 8040872C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 80408730 E8 46 D6 FF FF 
;/	-5 ALLOT
;/*	add	$-0x05,_HsubSTDOUT+0x18 (%rip)	; 80408735 
	DB 0x48,0x83,0x5,0xDF,0xC4,0xFF,0xFF,0xFB
;/	M\ 3B DTST
;/*	mov	rax,-0x08(rbp)	; 8040873D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x3B,eax	; 80408741 
	DB 0xB8,0x3B,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408746 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040874A E8 8 D7 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040874F 
	DB 0xE9,0xC1,0xF0,0xFF,0xFF
;/
;/OP1@ @ 80000000FF AND 25 XOR \ and $_,%rax
;/*	mov	rax,-0x08(rbp)	; 80408754 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 80408758 
	DB 0x48,0x8B,0x5,0x3F,0xD5,0xFF,0xFF
;/*	mov	(rax),rax	; 8040875F 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 80408762 
	DB 0x48,0x89,0x45,0xF0
;/*	movabs	$0x80000000FF,%rax	; 80408766 
	DB 0x48,0xB8,0xFF,0x0,0x0,0x0,0x80,0x0,0x0,0x0
;/*	and	-0x10(rbp),rax	; 80408770 
	DB 0x48,0x23,0x45,0xF0
;/*	xor	$0x25,rax	; 80408774 
	DB 0x48,0x35,0x25,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040877A 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ @ 80000000FFFF AND 3548 XOR \ XOR $_,%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040877E 
	DB 0x48,0x8B,0x5,0xC,0xD5,0xFF,0xFF
;/*	mov	(rax),rax	; 80408785 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x18(rbp)	; 80408788 
	DB 0x48,0x89,0x45,0xE8
;/*	movabs	$0x80000000FFFF,%rax	; 8040878C 
	DB 0x48,0xB8,0xFF,0xFF,0x0,0x0,0x0,0x80,0x0,0x0
;/*	and	-0x18(rbp),rax	; 80408796 
	DB 0x48,0x23,0x45,0xE8
;/*	xor	$0x3548,rax	; 8040879A 
	DB 0x48,0x35,0x48,0x35,0x0,0x0
;/*	or	-0x10(rbp),rax	; 804087A0 
	DB 0x48,0xB,0x45,0xF0
;/ OR 0=
;/*	sub	$0x01,rax	; 804087A4 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 804087A8 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 804087AB 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804087AE 
	DB 0x48,0x8B,0x45,0xF8
;/ M_WL  M\ 4E DTST
;/*	jz	_OPTsubRULES+0x104C 	; 804087B2 
	DB 0xF,0x84,0x95,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804087B8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x4E,eax	; 804087BC 
	DB 0xB8,0x4E,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804087C1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 804087C5 E8 8D D6 FF FF 
;/	OP0 -1 OPresize
;/*	mov	rax,-0x08(rbp)	; 804087CA 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 804087CE 
	DB 0x48,0x8D,0x5,0x72,0xD3,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 804087D5 
	DB 0x48,0x89,0x45,0xF0
;/*	movq	$-0x1,rax	; 804087D9 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 804087E0 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPresize	; 804087E4 E8 F4 D8 FF FF 
;/	OP0 @ 1+ L@ FF ANDC 0= IF 34 OP0 @ C! -3 ALLOT THEN
;/*	mov	rax,-0x08(rbp)	; 804087E9 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_LASTsubHERE+0xD (%rip),rax	; 804087ED 
	DB 0x48,0x8B,0x5,0x53,0xD3,0xFF,0xFF
;/*	mov	0x01(rax),eax	; 804087F4 
	DB 0x8B,0x40,0x1
;/*	and	$-0x100,rax	; 804087F7 
	DB 0x48,0x81,0xE0,0x0,0xFF,0xFF,0xFF
;/*	sub	$0x01,rax	; 804087FE 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80408802 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80408805 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80408808 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_OPTsubRULES+0x1035 	; 8040880C 
	DB 0xF,0x84,0x24,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80408812 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x34,-0x10(rbp)	; 80408816 
	DB 0x48,0xC7,0x45,0xF0,0x34,0x0,0x0,0x0
;/*	mov	_LASTsubHERE+0xD (%rip),rax	; 8040881E 
	DB 0x48,0x8B,0x5,0x22,0xD3,0xFF,0xFF
;/*	mov	-0x10(rbp),dl	; 80408825 
	DB 0x8A,0x55,0xF0
;/*	mov	dl,(rax)	; 80408828 
	DB 0x88,0x10
;/*	add	$-0x03,_HsubSTDOUT+0x18 (%rip)	; 8040882A 
	DB 0x48,0x83,0x5,0xEA,0xC3,0xFF,0xFF,0xFD
;/*	mov	-0x08(rbp),rax	; 80408832 
	DB 0x48,0x8B,0x45,0xF8
;/	
;/	M\ 4F DTST
;/*	mov	rax,-0x08(rbp)	; 80408836 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x4F,eax	; 8040883A 
	DB 0xB8,0x4F,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040883F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408843 E8 F D6 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80408848 
	DB 0xE9,0xC8,0xEF,0xFF,0xFF
;/
;/OP1@ L@ FFFFFF AND 00B60F  XOR \ movzb	(%rax),%eax	# 80406746 	*/.byte 
;/*	mov	rax,-0x08(rbp)	; 8040884D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 80408851 
	DB 0x48,0x8B,0x5,0x46,0xD4,0xFF,0xFF
;/*	mov	(rax),eax	; 80408858 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040885A 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xB60F,eax	; 8040885F 
	DB 0x35,0xF,0xB6,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 80408864 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ @ 80000000FFFF AND 3548 XOR \ XOR $_,%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 80408868 
	DB 0x48,0x8B,0x5,0x22,0xD4,0xFF,0xFF
;/*	mov	(rax),rax	; 8040886F 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x18(rbp)	; 80408872 
	DB 0x48,0x89,0x45,0xE8
;/*	movabs	$0x80000000FFFF,%rax	; 80408876 
	DB 0x48,0xB8,0xFF,0xFF,0x0,0x0,0x0,0x80,0x0,0x0
;/*	and	-0x18(rbp),rax	; 80408880 
	DB 0x48,0x23,0x45,0xE8
;/*	xor	$0x3548,rax	; 80408884 
	DB 0x48,0x35,0x48,0x35,0x0,0x0
;/*	or	-0x10(rbp),rax	; 8040888A 
	DB 0x48,0xB,0x45,0xF0
;/ OR 0=
;/*	sub	$0x01,rax	; 8040888E 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80408892 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80408895 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80408898 
	DB 0x48,0x8B,0x45,0xF8
;/ M_WL  M\ 50 DTST
;/*	jz	_OPTsubRULES+0x1136 	; 8040889C 
	DB 0xF,0x84,0x95,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804088A2 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x50,eax	; 804088A6 
	DB 0xB8,0x50,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804088AB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 804088AF E8 A3 D5 FF FF 
;/	OP0 -1 OPresize
;/*	mov	rax,-0x08(rbp)	; 804088B4 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 804088B8 
	DB 0x48,0x8D,0x5,0x88,0xD2,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 804088BF 
	DB 0x48,0x89,0x45,0xF0
;/*	movq	$-0x1,rax	; 804088C3 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 804088CA 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPresize	; 804088CE E8 A D8 FF FF 
;/	OP0 @ 1+ L@ FF ANDC 0= IF 34 OP0 @ C! -3 ALLOT THEN
;/*	mov	rax,-0x08(rbp)	; 804088D3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_LASTsubHERE+0xD (%rip),rax	; 804088D7 
	DB 0x48,0x8B,0x5,0x69,0xD2,0xFF,0xFF
;/*	mov	0x01(rax),eax	; 804088DE 
	DB 0x8B,0x40,0x1
;/*	and	$-0x100,rax	; 804088E1 
	DB 0x48,0x81,0xE0,0x0,0xFF,0xFF,0xFF
;/*	sub	$0x01,rax	; 804088E8 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 804088EC 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 804088EF 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804088F2 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_OPTsubRULES+0x111F 	; 804088F6 
	DB 0xF,0x84,0x24,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804088FC 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x34,-0x10(rbp)	; 80408900 
	DB 0x48,0xC7,0x45,0xF0,0x34,0x0,0x0,0x0
;/*	mov	_LASTsubHERE+0xD (%rip),rax	; 80408908 
	DB 0x48,0x8B,0x5,0x38,0xD2,0xFF,0xFF
;/*	mov	-0x10(rbp),dl	; 8040890F 
	DB 0x8A,0x55,0xF0
;/*	mov	dl,(rax)	; 80408912 
	DB 0x88,0x10
;/*	add	$-0x03,_HsubSTDOUT+0x18 (%rip)	; 80408914 
	DB 0x48,0x83,0x5,0x0,0xC3,0xFF,0xFF,0xFD
;/*	mov	-0x08(rbp),rax	; 8040891C 
	DB 0x48,0x8B,0x45,0xF8
;/	
;/	M\ 51 DTST
;/*	mov	rax,-0x08(rbp)	; 80408920 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x51,eax	; 80408924 
	DB 0xB8,0x51,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408929 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040892D E8 25 D5 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80408932 
	DB 0xE9,0xDE,0xEE,0xFF,0xFF
;/
;/OP1@ @ FFFFFF80FF AND B8 XOR \ mov $X,%rax
;/*	mov	rax,-0x08(rbp)	; 80408937 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040893B 
	DB 0x48,0x8B,0x5,0x5C,0xD3,0xFF,0xFF
;/*	mov	(rax),rax	; 80408942 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 80408945 
	DB 0x48,0x89,0x45,0xF0
;/*	movabs	$0xFFFFFF80FF,%rax	; 80408949 
	DB 0x48,0xB8,0xFF,0x80,0xFF,0xFF,0xFF,0x0,0x0,0x0
;/*	and	-0x10(rbp),rax	; 80408953 
	DB 0x48,0x23,0x45,0xF0
;/*	xor	$0xB8,rax	; 80408957 
	DB 0x48,0x35,0xB8,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040895D 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ FEFFFF AND C60149 XOR \ add     %rax,%r14|15
;/*	mov	_OP0load+0x5 (%rip),rax	; 80408961 
	DB 0x48,0x8B,0x5,0x29,0xD3,0xFF,0xFF
;/*	mov	(rax),eax	; 80408968 
	DB 0x8B,0x0
;/*	and	$0xFEFFFF,eax	; 8040896A 
	DB 0x25,0xFF,0xFF,0xFE,0x0
;/*	xor	$0xC60149,eax	; 8040896F 
	DB 0x35,0x49,0x1,0xC6,0x0
;/*	or	-0x10(rbp),rax	; 80408974 
	DB 0x48,0xB,0x45,0xF0
;/ OR 0=
;/*	sub	$0x01,rax	; 80408978 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 8040897C 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040897F 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80408982 
	DB 0x48,0x8B,0x45,0xF8
;/ M_WL  M\ 8E DTST
;/*	jz	_OPTsubRULES+0x123E 	; 80408986 
	DB 0xF,0x84,0xB3,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040898C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8E,eax	; 80408990 
	DB 0xB8,0x8E,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408995 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408999 E8 B9 D4 FF FF 
;/	OP1@ 1+ C@ OP0@ 2+ C@
;/*	mov	rax,-0x08(rbp)	; 8040899E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 804089A2 
	DB 0x48,0x8B,0x5,0xF5,0xD2,0xFF,0xFF
;/*	movzb	0x01(rax),eax	; 804089A9 
	DB 0xF,0xB6,0x40,0x1
;/*	mov	rax,-0x10(rbp)	; 804089AD 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP0load+0x5 (%rip),rax	; 804089B1 
	DB 0x48,0x8B,0x5,0xD9,0xD2,0xFF,0xFF
;/*	movzb	0x02(rax),eax	; 804089B8 
	DB 0xF,0xB6,0x40,0x2
;/*	mov	rax,-0x18(rbp)	; 804089BC 
	DB 0x48,0x89,0x45,0xE8
;/       OP1 ToOP0
;/*	mov	$0x44C539,eax	; 804089C0 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	lea	-0x18(rbp),rbp	; 804089C5 
	DB 0x48,0x8D,0x6D,0xE8
	call	_ToOP0	; 804089C9 E8 AD D3 FF FF 
;/	-3 ALLOT
;/*	add	$-0x03,_HsubSTDOUT+0x18 (%rip)	; 804089CE 
	DB 0x48,0x83,0x5,0x46,0xC2,0xFF,0xFF,0xFD
;/       OP0 4 OPinsert
;/*	mov	rax,-0x08(rbp)	; 804089D6 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 804089DA 
	DB 0x48,0x8D,0x5,0x66,0xD1,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 804089E1 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x4,eax	; 804089E5 
	DB 0xB8,0x4,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 804089EA 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPinsert	; 804089EE E8 D5 D7 FF FF 
;/	OP1@ 2+ C!
;/*	mov	rax,-0x08(rbp)	; 804089F3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 804089F7 
	DB 0x48,0x8B,0x5,0xA0,0xD2,0xFF,0xFF
;/*	lea	0x02(rax),rax	; 804089FE 
	DB 0x48,0x8D,0x40,0x2
;/*	mov	-0x08(rbp),dl	; 80408A02 
	DB 0x8A,0x55,0xF8
;/*	mov	dl,(rax)	; 80408A05 
	DB 0x88,0x10
;/*	mov	_OP1load+0x5 (%rip),rax	; 80408A07 
	DB 0x48,0x8B,0x5,0x90,0xD2,0xFF,0xFF
;/*	lea	0x03(rax),rax	; 80408A0E 
	DB 0x48,0x8D,0x40,0x3
;/	OP1@ 3+ C!
;/*	mov	0x00(rbp),dl	; 80408A12 
	DB 0x8A,0x55,0x0
;/*	mov	dl,(rax)	; 80408A15 
	DB 0x88,0x10
;/*	movq	$0x8349,0x00(rbp)	; 80408A17 
	DB 0x48,0xC7,0x45,0x0,0x49,0x83,0x0,0x0
;/         8349 OP1@ W! \ add    $X,%r14		
;/*	mov	_OP1load+0x5 (%rip),rax	; 80408A1F 
	DB 0x48,0x8B,0x5,0x78,0xD2,0xFF,0xFF
;/*	mov	0x00(rbp),edx	; 80408A26 
	DB 0x8B,0x55,0x0
;/*	mov	dx,(rax)	; 80408A29 
	DB 0x66,0x89,0x10
;/*	mov	$0x8F,eax	; 80408A2C 
	DB 0xB8,0x8F,0x0,0x0,0x0
;/*	lea	0x08(rbp),rbp	; 80408A31 
	DB 0x48,0x8D,0x6D,0x8
;/	M\ 8F DTST
	call	_DTST	; 80408A35 E8 1D D4 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80408A3A 
	DB 0xE9,0xD6,0xED,0xFF,0xFF
;/
;/OP1@ 1+ L@  OP0@ 3+ C@ << FFFFFFFF ANDC  
;/*	mov	rax,-0x08(rbp)	; 80408A3F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 80408A43 
	DB 0x48,0x8B,0x5,0x54,0xD2,0xFF,0xFF
;/*	mov	0x01(rax),eax	; 80408A4A 
	DB 0x8B,0x40,0x1
;/*	mov	rax,-0x10(rbp)	; 80408A4D 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP0load+0x5 (%rip),rax	; 80408A51 
	DB 0x48,0x8B,0x5,0x39,0xD2,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 80408A58 
	DB 0xF,0xB6,0x40,0x3
;/*	mov	al,cl	; 80408A5C 
	DB 0x88,0xC1
;/*	mov	-0x10(rbp),rax	; 80408A5E 
	DB 0x48,0x8B,0x45,0xF0
;/*	shlq	%cl,rax	; 80408A62 
	DB 0x48,0xD3,0xE0
;/*	mov	rax,-0x10(rbp)	; 80408A65 
	DB 0x48,0x89,0x45,0xF0
;/*	movabs	$-0x100000000,%rax	; 80408A69 
	DB 0x48,0xB8,0x0,0x0,0x0,0x0,0xFF,0xFF,0xFF,0xFF
;/*	and	-0x10(rbp),rax	; 80408A73 
	DB 0x48,0x23,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 80408A77 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ C@  B8 XOR OR \ mov $X,%rax
;/*	mov	_OP1load+0x5 (%rip),rax	; 80408A7B 
	DB 0x48,0x8B,0x5,0x1C,0xD2,0xFF,0xFF
;/*	movzb	(rax),eax	; 80408A82 
	DB 0xF,0xB6,0x0
;/*	xor	$-0x48,al	; 80408A85 
	DB 0x34,0xB8
;/*	or	-0x10(rbp),rax	; 80408A87 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 80408A8B 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ FFFFFF AND E0C148 XOR OR \ shl     $0x03,%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 80408A8F 
	DB 0x48,0x8B,0x5,0xFB,0xD1,0xFF,0xFF
;/*	mov	(rax),eax	; 80408A96 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80408A98 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xE0C148,eax	; 80408A9D 
	DB 0x35,0x48,0xC1,0xE0,0x0
;/*	or	-0x10(rbp),rax	; 80408AA2 
	DB 0x48,0xB,0x45,0xF0
;/*	sub	$0x01,rax	; 80408AA6 
	DB 0x48,0x83,0xE8,0x1
;/ 0= M_WL  M\ 92 DTST
;/*	sbb	rax,rax	; 80408AAA 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80408AAD 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80408AB0 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_OPTsubRULES+0x1332 	; 80408AB4 
	DB 0xF,0x84,0x79,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80408ABA 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x92,eax	; 80408ABE 
	DB 0xB8,0x92,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408AC3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408AC7 E8 8B D3 FF FF 
;/	OP1@ 1+ L@  OP0@ 3+ C@ << OP1@ 1+ L!
;/*	mov	rax,-0x08(rbp)	; 80408ACC 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 80408AD0 
	DB 0x48,0x8B,0x5,0xC7,0xD1,0xFF,0xFF
;/*	mov	0x01(rax),eax	; 80408AD7 
	DB 0x8B,0x40,0x1
;/*	mov	rax,-0x10(rbp)	; 80408ADA 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP0load+0x5 (%rip),rax	; 80408ADE 
	DB 0x48,0x8B,0x5,0xAC,0xD1,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 80408AE5 
	DB 0xF,0xB6,0x40,0x3
;/*	mov	al,cl	; 80408AE9 
	DB 0x88,0xC1
;/*	mov	-0x10(rbp),rax	; 80408AEB 
	DB 0x48,0x8B,0x45,0xF0
;/*	shlq	%cl,rax	; 80408AEF 
	DB 0x48,0xD3,0xE0
;/*	mov	rax,-0x10(rbp)	; 80408AF2 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP1load+0x5 (%rip),rax	; 80408AF6 
	DB 0x48,0x8B,0x5,0xA1,0xD1,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 80408AFD 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),edx	; 80408B01 
	DB 0x8B,0x55,0xF0
;/*	mov	edx,(rax)	; 80408B04 
	DB 0x89,0x10
;/*	mov	$0x44C539,eax	; 80408B06 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/       OP1 ToOP0
;/*	lea	-0x08(rbp),rbp	; 80408B0B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 80408B0F E8 67 D2 FF FF 
;/        -4 ALLOT	
;/*	add	$-0x04,_HsubSTDOUT+0x18 (%rip)	; 80408B14 
	DB 0x48,0x83,0x5,0x0,0xC1,0xFF,0xFF,0xFC
;/	M\ 93 DTST
;/*	mov	rax,-0x08(rbp)	; 80408B1C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x93,eax	; 80408B20 
	DB 0xB8,0x93,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408B25 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408B29 E8 29 D3 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80408B2E 
	DB 0xE9,0xE2,0xEC,0xFF,0xFF
;/
;/OP1@ 1+ L@ 2* FFFFFFFF ANDC  
;/*	mov	rax,-0x08(rbp)	; 80408B33 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 80408B37 
	DB 0x48,0x8B,0x5,0x60,0xD1,0xFF,0xFF
;/*	mov	0x01(rax),eax	; 80408B3E 
	DB 0x8B,0x40,0x1
;/*	lea	(rax,rax,1),rax	; 80408B41 
	DB 0x48,0x8D,0x4,0x0
;/*	mov	rax,-0x10(rbp)	; 80408B45 
	DB 0x48,0x89,0x45,0xF0
;/*	movabs	$-0x100000000,%rax	; 80408B49 
	DB 0x48,0xB8,0x0,0x0,0x0,0x0,0xFF,0xFF,0xFF,0xFF
;/*	and	-0x10(rbp),rax	; 80408B53 
	DB 0x48,0x23,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 80408B57 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ C@  B8 XOR OR \ mov $X,%rax
;/*	mov	_OP1load+0x5 (%rip),rax	; 80408B5B 
	DB 0x48,0x8B,0x5,0x3C,0xD1,0xFF,0xFF
;/*	movzb	(rax),eax	; 80408B62 
	DB 0xF,0xB6,0x0
;/*	xor	$-0x48,al	; 80408B65 
	DB 0x34,0xB8
;/*	or	-0x10(rbp),rax	; 80408B67 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 80408B6B 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ 00048D48 XOR OR \ lea     (%rax,%rax,1),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 80408B6F 
	DB 0x48,0x8B,0x5,0x1B,0xD1,0xFF,0xFF
;/*	mov	(rax),eax	; 80408B76 
	DB 0x8B,0x0
;/*	xor	$0x48D48,rax	; 80408B78 
	DB 0x48,0x35,0x48,0x8D,0x4,0x0
;/*	or	-0x10(rbp),rax	; 80408B7E 
	DB 0x48,0xB,0x45,0xF0
;/*	sub	$0x01,rax	; 80408B82 
	DB 0x48,0x83,0xE8,0x1
;/ 0= M_WL  M\ 94 DTST
;/*	sbb	rax,rax	; 80408B86 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80408B89 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80408B8C 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_OPTsubRULES+0x13FA 	; 80408B90 
	DB 0xF,0x84,0x65,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80408B96 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x94,eax	; 80408B9A 
	DB 0xB8,0x94,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408B9F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408BA3 E8 AF D2 FF FF 
;/	OP1@ 1+ L@  2* OP1@ 1+ L!
;/*	mov	rax,-0x08(rbp)	; 80408BA8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 80408BAC 
	DB 0x48,0x8B,0x5,0xEB,0xD0,0xFF,0xFF
;/*	mov	0x01(rax),eax	; 80408BB3 
	DB 0x8B,0x40,0x1
;/*	lea	(rax,rax,1),rax	; 80408BB6 
	DB 0x48,0x8D,0x4,0x0
;/*	mov	rax,-0x10(rbp)	; 80408BBA 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP1load+0x5 (%rip),rax	; 80408BBE 
	DB 0x48,0x8B,0x5,0xD9,0xD0,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 80408BC5 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),edx	; 80408BC9 
	DB 0x8B,0x55,0xF0
;/*	mov	edx,(rax)	; 80408BCC 
	DB 0x89,0x10
;/*	mov	$0x44C539,eax	; 80408BCE 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/       OP1 ToOP0
;/*	lea	-0x08(rbp),rbp	; 80408BD3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 80408BD7 E8 9F D1 FF FF 
;/        -4 ALLOT	
;/*	add	$-0x04,_HsubSTDOUT+0x18 (%rip)	; 80408BDC 
	DB 0x48,0x83,0x5,0x38,0xC0,0xFF,0xFF,0xFC
;/	M\ 95 DTST
;/*	mov	rax,-0x08(rbp)	; 80408BE4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x95,eax	; 80408BE8 
	DB 0xB8,0x95,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408BED 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408BF1 E8 61 D2 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80408BF6 
	DB 0xE9,0x1A,0xEC,0xFF,0xFF
;/
;/ OP1@ L@ FFFFFF AND
;/*	mov	rax,-0x08(rbp)	; 80408BFB 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 80408BFF 
	DB 0x48,0x8B,0x5,0x98,0xD0,0xFF,0xFF
;/*	mov	(rax),eax	; 80408C06 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80408C08 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	mov	rax,-0x10(rbp)	; 80408C0D 
	DB 0x48,0x89,0x45,0xF0
;/ DUP  f08148 XOR		\ xor     $X,%rax
;/*	xor	$0xF08148,rax	; 80408C11 
	DB 0x48,0x35,0x48,0x81,0xF0,0x0
;/*	mov	-0x10(rbp),rdx	; 80408C17 
	DB 0x48,0x8B,0x55,0xF0
;/ SWAP 053348 <> AND	\ xor     X(%rip),%rax
;/*	mov	rax,-0x10(rbp)	; 80408C1B 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	rdx,-0x18(rbp)	; 80408C1F 
	DB 0x48,0x89,0x55,0xE8
;/*	mov	$0x53348,eax	; 80408C23 
	DB 0xB8,0x48,0x33,0x5,0x0
;/*	xor	-0x18(rbp),rax	; 80408C28 
	DB 0x48,0x33,0x45,0xE8
;/*		negq	rax	; 80408C2C 
	DB 0x48,0xF7,0xD8
;/*	sbb	rax,rax	; 80408C2F 
	DB 0x48,0x19,0xC0
;/*	and	-0x10(rbp),rax	; 80408C32 
	DB 0x48,0x23,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 80408C36 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ FFFFFF AND 458b48 XOR OR \ mov     -0x08(%rbp),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 80408C3A 
	DB 0x48,0x8B,0x5,0x50,0xD0,0xFF,0xFF
;/*	mov	(rax),eax	; 80408C41 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80408C43 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458B48,eax	; 80408C48 
	DB 0x35,0x48,0x8B,0x45,0x0
;/*	or	-0x10(rbp),rax	; 80408C4D 
	DB 0x48,0xB,0x45,0xF0
;/*	sub	$0x01,rax	; 80408C51 
	DB 0x48,0x83,0xE8,0x1
;/  0=
;/*	sbb	rax,rax	; 80408C55 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80408C58 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80408C5B 
	DB 0x48,0x8B,0x45,0xF8
;/ M_WL  M\ 16 DTST
;/*	jz	_OPTsubRULES+0x14F4 	; 80408C5F 
	DB 0xF,0x84,0x90,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80408C65 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x16,eax	; 80408C69 
	DB 0xB8,0x16,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408C6E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408C72 E8 E0 D1 FF FF 
;/	OP1@ 1+ C@ 33 XOR
;/*	mov	rax,-0x08(rbp)	; 80408C77 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 80408C7B 
	DB 0x48,0x8B,0x5,0x1C,0xD0,0xFF,0xFF
;/*	movzb	0x01(rax),eax	; 80408C82 
	DB 0xF,0xB6,0x40,0x1
;/*	xor	$0x33,rax	; 80408C86 
	DB 0x48,0x35,0x33,0x0,0x0,0x0
	test	rax,rax	; 80408C8C 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80408C8F 
	DB 0x48,0x8B,0x45,0xF8
;/	IF  	F8 OP1@ 2+ C!  \ cmp    $X,%rax
;/*	jz	_OPTsubRULES+0x14BD 	; 80408C93 
	DB 0xF,0x84,0x25,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80408C99 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0xF8,-0x10(rbp)	; 80408C9D 
	DB 0x48,0xC7,0x45,0xF0,0xF8,0x0,0x0,0x0
;/*	mov	_OP1load+0x5 (%rip),rax	; 80408CA5 
	DB 0x48,0x8B,0x5,0xF2,0xCF,0xFF,0xFF
;/*	lea	0x02(rax),rax	; 80408CAC 
	DB 0x48,0x8D,0x40,0x2
;/*	mov	-0x10(rbp),dl	; 80408CB0 
	DB 0x8A,0x55,0xF0
;/*	mov	dl,(rax)	; 80408CB3 
	DB 0x88,0x10
;/*	mov	-0x08(rbp),rax	; 80408CB5 
	DB 0x48,0x8B,0x45,0xF8
;/	ELSE 	3B OP1@ 1+ C!  \ cmp    X(%rip),%rax
;/*	jmp	_OPTsubRULES+0x14DD 	; 80408CB9 
	DB 0xE9,0x20,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80408CBE 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x3B,-0x10(rbp)	; 80408CC2 
	DB 0x48,0xC7,0x45,0xF0,0x3B,0x0,0x0,0x0
;/*	mov	_OP1load+0x5 (%rip),rax	; 80408CCA 
	DB 0x48,0x8B,0x5,0xCD,0xCF,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 80408CD1 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),dl	; 80408CD5 
	DB 0x8A,0x55,0xF0
;/*	mov	dl,(rax)	; 80408CD8 
	DB 0x88,0x10
;/*	mov	-0x08(rbp),rax	; 80408CDA 
	DB 0x48,0x8B,0x45,0xF8
;/	THEN
;/	M\ 17 DTST
;/*	mov	rax,-0x08(rbp)	; 80408CDE 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x17,eax	; 80408CE2 
	DB 0xB8,0x17,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408CE7 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408CEB E8 67 D1 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80408CF0 
	DB 0xE9,0x20,0xEB,0xFF,0xFF
;/
;/OP1@ W@		3548	XOR	\ xor     $X,%rax
;/*	mov	rax,-0x08(rbp)	; 80408CF5 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 80408CF9 
	DB 0x48,0x8B,0x5,0x9E,0xCF,0xFF,0xFF
;/*	movzw	(rax),eax	; 80408D00 
	DB 0xF,0xB7,0x0
;/*	xor	$0x3548,rax	; 80408D03 
	DB 0x48,0x35,0x48,0x35,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 80408D09 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ FFFFFF AND 458b48 XOR	OR \ mov     -0x08(%rbp),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 80408D0D 
	DB 0x48,0x8B,0x5,0x7D,0xCF,0xFF,0xFF
;/*	mov	(rax),eax	; 80408D14 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80408D16 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458B48,eax	; 80408D1B 
	DB 0x35,0x48,0x8B,0x45,0x0
;/*	or	-0x10(rbp),rax	; 80408D20 
	DB 0x48,0xB,0x45,0xF0
;/*	sub	$0x01,rax	; 80408D24 
	DB 0x48,0x83,0xE8,0x1
;/  0=
;/*	sbb	rax,rax	; 80408D28 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80408D2B 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80408D2E 
	DB 0x48,0x8B,0x45,0xF8
;/ M_WL  M\ 4C DTST
;/*	jz	_OPTsubRULES+0x1578 	; 80408D32 
	DB 0xF,0x84,0x41,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80408D38 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x4C,eax	; 80408D3C 
	DB 0xB8,0x4C,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408D41 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408D45 E8 D D1 FF FF 
;/	3D OP1@	1+ C!  \ cmp	$X,%rax
;/*	mov	rax,-0x08(rbp)	; 80408D4A 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x3D,-0x10(rbp)	; 80408D4E 
	DB 0x48,0xC7,0x45,0xF0,0x3D,0x0,0x0,0x0
;/*	mov	_OP1load+0x5 (%rip),rax	; 80408D56 
	DB 0x48,0x8B,0x5,0x41,0xCF,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 80408D5D 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),dl	; 80408D61 
	DB 0x8A,0x55,0xF0
;/*	mov	dl,(rax)	; 80408D64 
	DB 0x88,0x10
;/*	mov	$0x4D,eax	; 80408D66 
	DB 0xB8,0x4D,0x0,0x0,0x0
;/	M\ 4D DTST
;/*	lea	-0x08(rbp),rbp	; 80408D6B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408D6F E8 E3 D0 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80408D74 
	DB 0xE9,0x9C,0xEA,0xFF,0xFF
;/
;/OP1@ C@ FE AND 34 XOR    \ xor $0x48,%al|eax
;/*	mov	rax,-0x08(rbp)	; 80408D79 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 80408D7D 
	DB 0x48,0x8B,0x5,0x1A,0xCF,0xFF,0xFF
;/*	movzb	(rax),eax	; 80408D84 
	DB 0xF,0xB6,0x0
;/*	and	$0xFE,eax	; 80408D87 
	DB 0x25,0xFE,0x0,0x0,0x0
;/*	xor	$0x34,al	; 80408D8C 
	DB 0x34,0x34
;/*	mov	rax,-0x10(rbp)	; 80408D8E 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ FFFFFF AND 458b48 XOR \ mov     -0x08(%rbp),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 80408D92 
	DB 0x48,0x8B,0x5,0xF8,0xCE,0xFF,0xFF
;/*	mov	(rax),eax	; 80408D99 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80408D9B 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458B48,eax	; 80408DA0 
	DB 0x35,0x48,0x8B,0x45,0x0
;/*	or	-0x10(rbp),rax	; 80408DA5 
	DB 0x48,0xB,0x45,0xF0
;/ OR  0=
;/*	sub	$0x01,rax	; 80408DA9 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80408DAD 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80408DB0 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80408DB3 
	DB 0x48,0x8B,0x45,0xF8
;/ M_WL  M\ 56 DTST
;/*	jz	_OPTsubRULES+0x1601 	; 80408DB7 
	DB 0xF,0x84,0x45,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80408DBD 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x56,eax	; 80408DC1 
	DB 0xB8,0x56,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408DC6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408DCA E8 88 D0 FF FF 
;/	08 OP1@	XOR! \ cmp    $0x48,%al|eax	
;/*	mov	rax,-0x08(rbp)	; 80408DCF 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x8,-0x10(rbp)	; 80408DD3 
	DB 0x48,0xC7,0x45,0xF0,0x8,0x0,0x0,0x0
;/*	mov	_OP1load+0x5 (%rip),rax	; 80408DDB 
	DB 0x48,0x8B,0x5,0xBC,0xCE,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 80408DE2 
	DB 0x48,0x8D,0x6D,0xF0
	call	_XORsave	; 80408DE6 E8 72 B4 FF FF 
;/	M\ 57 DTST
;/*	mov	rax,-0x08(rbp)	; 80408DEB 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x57,eax	; 80408DEF 
	DB 0xB8,0x57,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408DF4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408DF8 E8 5A D0 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80408DFD 
	DB 0xE9,0x13,0xEA,0xFF,0xFF
;/
;/OP1@ L@ FFFFFF AND F08348 XOR \ xor	$-0x02,%rax
;/*	mov	rax,-0x08(rbp)	; 80408E02 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 80408E06 
	DB 0x48,0x8B,0x5,0x91,0xCE,0xFF,0xFF
;/*	mov	(rax),eax	; 80408E0D 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80408E0F 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xF08348,eax	; 80408E14 
	DB 0x35,0x48,0x83,0xF0,0x0
;/*	mov	rax,-0x10(rbp)	; 80408E19 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ FFFFFF AND 458b48 XOR \ mov     -0x08(%rbp),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 80408E1D 
	DB 0x48,0x8B,0x5,0x6D,0xCE,0xFF,0xFF
;/*	mov	(rax),eax	; 80408E24 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80408E26 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458B48,eax	; 80408E2B 
	DB 0x35,0x48,0x8B,0x45,0x0
;/*	or	-0x10(rbp),rax	; 80408E30 
	DB 0x48,0xB,0x45,0xF0
;/ OR  0=
;/*	sub	$0x01,rax	; 80408E34 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80408E38 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80408E3B 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80408E3E 
	DB 0x48,0x8B,0x45,0xF8
;/ M_WL  M\ 56 DTST
;/*	jz	_OPTsubRULES+0x1688 	; 80408E42 
	DB 0xF,0x84,0x41,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80408E48 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x56,eax	; 80408E4C 
	DB 0xB8,0x56,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408E51 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408E55 E8 FD CF FF FF 
;/	F8 OP1@ 2+ C! \ cmp    $-0x02,%rax
;/*	mov	rax,-0x08(rbp)	; 80408E5A 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0xF8,-0x10(rbp)	; 80408E5E 
	DB 0x48,0xC7,0x45,0xF0,0xF8,0x0,0x0,0x0
;/*	mov	_OP1load+0x5 (%rip),rax	; 80408E66 
	DB 0x48,0x8B,0x5,0x31,0xCE,0xFF,0xFF
;/*	lea	0x02(rax),rax	; 80408E6D 
	DB 0x48,0x8D,0x40,0x2
;/*	mov	-0x10(rbp),dl	; 80408E71 
	DB 0x8A,0x55,0xF0
;/*	mov	dl,(rax)	; 80408E74 
	DB 0x88,0x10
;/*	mov	$0x57,eax	; 80408E76 
	DB 0xB8,0x57,0x0,0x0,0x0
;/	M\ 57 DTST
;/*	lea	-0x08(rbp),rbp	; 80408E7B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408E7F E8 D3 CF FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80408E84 
	DB 0xE9,0x8C,0xE9,0xFF,0xFF
;/
;/OP1@ L@ FFFFFF AND 453348 XOR \ xor	-0x10(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 80408E89 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 80408E8D 
	DB 0x48,0x8B,0x5,0xA,0xCE,0xFF,0xFF
;/*	mov	(rax),eax	; 80408E94 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80408E96 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x453348,eax	; 80408E9B 
	DB 0x35,0x48,0x33,0x45,0x0
;/*	mov	rax,-0x10(rbp)	; 80408EA0 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ FFFFFF AND 458b48 XOR \ mov     -0x08(%rbp),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 80408EA4 
	DB 0x48,0x8B,0x5,0xE6,0xCD,0xFF,0xFF
;/*	mov	(rax),eax	; 80408EAB 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80408EAD 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458B48,eax	; 80408EB2 
	DB 0x35,0x48,0x8B,0x45,0x0
;/*	or	-0x10(rbp),rax	; 80408EB7 
	DB 0x48,0xB,0x45,0xF0
;/ OR  0=
;/*	sub	$0x01,rax	; 80408EBB 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80408EBF 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80408EC2 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80408EC5 
	DB 0x48,0x8B,0x45,0xF8
;/ M_WL  M\ 58 DTST
;/*	jz	_OPTsubRULES+0x170F 	; 80408EC9 
	DB 0xF,0x84,0x41,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80408ECF 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x58,eax	; 80408ED3 
	DB 0xB8,0x58,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408ED8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408EDC E8 76 CF FF FF 
;/	3B OP1@ 1+ C! \ cmp    -0x10(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 80408EE1 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x3B,-0x10(rbp)	; 80408EE5 
	DB 0x48,0xC7,0x45,0xF0,0x3B,0x0,0x0,0x0
;/*	mov	_OP1load+0x5 (%rip),rax	; 80408EED 
	DB 0x48,0x8B,0x5,0xAA,0xCD,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 80408EF4 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),dl	; 80408EF8 
	DB 0x8A,0x55,0xF0
;/*	mov	dl,(rax)	; 80408EFB 
	DB 0x88,0x10
;/*	mov	$0x59,eax	; 80408EFD 
	DB 0xB8,0x59,0x0,0x0,0x0
;/	
;/	M\ 59 DTST
;/*	lea	-0x08(rbp),rbp	; 80408F02 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408F06 E8 4C CF FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80408F0B 
	DB 0xE9,0x5,0xE9,0xFF,0xFF
;/
;/OP1@ L@ FFFFFF AND F0894C XOR \ mov	%r14,%rax
;/*	mov	rax,-0x08(rbp)	; 80408F10 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 80408F14 
	DB 0x48,0x8B,0x5,0x83,0xCD,0xFF,0xFF
;/*	mov	(rax),eax	; 80408F1B 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80408F1D 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xF0894C,eax	; 80408F22 
	DB 0x35,0x4C,0x89,0xF0,0x0
;/*	mov	rax,-0x10(rbp)	; 80408F27 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ FFFFFF AND 458948 XOR \ mov	%rax,-8(%rbp)
;/*	mov	_OP0load+0x5 (%rip),rax	; 80408F2B 
	DB 0x48,0x8B,0x5,0x5F,0xCD,0xFF,0xFF
;/*	mov	(rax),eax	; 80408F32 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80408F34 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458948,eax	; 80408F39 
	DB 0x35,0x48,0x89,0x45,0x0
;/*	or	-0x10(rbp),rax	; 80408F3E 
	DB 0x48,0xB,0x45,0xF0
;/ OR  0=
;/*	sub	$0x01,rax	; 80408F42 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80408F46 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80408F49 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80408F4C 
	DB 0x48,0x8B,0x45,0xF8
;/ M_WL  M\ 74 DTST
;/*	jz	_OPTsubRULES+0x179A 	; 80408F50 
	DB 0xF,0x84,0x45,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80408F56 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x74,eax	; 80408F5A 
	DB 0xB8,0x74,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408F5F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408F63 E8 EF CE FF FF 
;/	300004 OP0@ XOR! \ mov	%r14,-0x10(%rbp)
;/*	mov	rax,-0x08(rbp)	; 80408F68 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x300004,-0x10(rbp)	; 80408F6C 
	DB 0x48,0xC7,0x45,0xF0,0x4,0x0,0x30,0x0
;/*	mov	_OP0load+0x5 (%rip),rax	; 80408F74 
	DB 0x48,0x8B,0x5,0x16,0xCD,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 80408F7B 
	DB 0x48,0x8D,0x6D,0xF0
	call	_XORsave	; 80408F7F E8 D9 B2 FF FF 
;/	M\ 75 DTST
;/*	mov	rax,-0x08(rbp)	; 80408F84 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x75,eax	; 80408F88 
	DB 0xB8,0x75,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80408F8D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80408F91 E8 C1 CE FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80408F96 
	DB 0xE9,0x7A,0xE8,0xFF,0xFF
;/
;/OP1@ 3 + C@  OP0@ 3 + C@ XOR
;/*	mov	rax,-0x08(rbp)	; 80408F9B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 80408F9F 
	DB 0x48,0x8B,0x5,0xF8,0xCC,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 80408FA6 
	DB 0xF,0xB6,0x40,0x3
;/*	mov	rax,-0x10(rbp)	; 80408FAA 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP0load+0x5 (%rip),rax	; 80408FAE 
	DB 0x48,0x8B,0x5,0xDC,0xCC,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 80408FB5 
	DB 0xF,0xB6,0x40,0x3
;/*	xor	-0x10(rbp),rax	; 80408FB9 
	DB 0x48,0x33,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 80408FBD 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ L@ FFFFFF AND 558948 XOR OR \      mov     %rdx,X(%rbp)
;/*	mov	_OP1load+0x5 (%rip),rax	; 80408FC1 
	DB 0x48,0x8B,0x5,0xD6,0xCC,0xFF,0xFF
;/*	mov	(rax),eax	; 80408FC8 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80408FCA 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x558948,eax	; 80408FCF 
	DB 0x35,0x48,0x89,0x55,0x0
;/*	or	-0x10(rbp),rax	; 80408FD4 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 80408FD8 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ ADD|OR|AND|XOR<> OR \     __  X(%rbp),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 80408FDC 
	DB 0x48,0x8B,0x5,0xAE,0xCC,0xFF,0xFF
;/*	mov	(rax),eax	; 80408FE3 
	DB 0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 80408FE5 
	DB 0x48,0x8D,0x6D,0xF0
	call	_ADDlORlANDlXORlessgreat	; 80408FE9 E8 D5 D4 FF FF 
;/*	or	0x00(rbp),rax	; 80408FEE 
	DB 0x48,0xB,0x45,0x0
;/*	sub	$0x01,rax	; 80408FF2 
	DB 0x48,0x83,0xE8,0x1
;/0= M_WL  M\ 5A DTST
;/*	sbb	rax,rax	; 80408FF6 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80408FF9 48 85 C0 
;/*	mov	0x08(rbp),rax	; 80408FFC 
	DB 0x48,0x8B,0x45,0x8
;/*	lea	0x10(rbp),rbp	; 80409000 
	DB 0x48,0x8D,0x6D,0x10
;/*	jz	_OPTsubRULES+0x1872 	; 80409004 
	DB 0xF,0x84,0x69,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040900A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x5A,eax	; 8040900E 
	DB 0xB8,0x5A,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409013 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409017 E8 3B CE FF FF 
;/	2 OP0@ 1+ XOR!
;/*	mov	rax,-0x08(rbp)	; 8040901C 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x2,-0x10(rbp)	; 80409020 
	DB 0x48,0xC7,0x45,0xF0,0x2,0x0,0x0,0x0
;/*	mov	_OP0load+0x5 (%rip),rax	; 80409028 
	DB 0x48,0x8B,0x5,0x62,0xCC,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 8040902F 
	DB 0x48,0x8D,0x40,0x1
;/*	lea	-0x10(rbp),rbp	; 80409033 
	DB 0x48,0x8D,0x6D,0xF0
	call	_XORsave	; 80409037 E8 21 B2 FF FF 
;/	D0 OP0@ 2+ C!	\ add    %rdx,%rax
;/*	mov	rax,-0x08(rbp)	; 8040903C 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0xD0,-0x10(rbp)	; 80409040 
	DB 0x48,0xC7,0x45,0xF0,0xD0,0x0,0x0,0x0
;/*	mov	_OP0load+0x5 (%rip),rax	; 80409048 
	DB 0x48,0x8B,0x5,0x42,0xCC,0xFF,0xFF
;/*	lea	0x02(rax),rax	; 8040904F 
	DB 0x48,0x8D,0x40,0x2
;/*	mov	-0x10(rbp),dl	; 80409053 
	DB 0x8A,0x55,0xF0
;/*	mov	dl,(rax)	; 80409056 
	DB 0x88,0x10
;/*	add	$-0x01,_HsubSTDOUT+0x18 (%rip)	; 80409058 
	DB 0x48,0x83,0x5,0xBC,0xBB,0xFF,0xFF,0xFF
;/        -1 ALLOT
;/*	mov	$0x5B,eax	; 80409060 
	DB 0xB8,0x5B,0x0,0x0,0x0
;/	M\ 5B DTST
;/*	lea	-0x08(rbp),rbp	; 80409065 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409069 E8 E9 CD FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040906E 
	DB 0xE9,0xA2,0xE7,0xFF,0xFF
;/
;/OP1@ NEWRAX0
;/*	mov	rax,-0x08(rbp)	; 80409073 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 80409077 
	DB 0x48,0x8B,0x5,0x20,0xCC,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040907E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_NEWRAX0	; 80409082 E8 A4 DB FF FF 
;/OP1@ L@ C0BE0F48 <> AND \  movsbq	%al,%rax
;/*	mov	rax,-0x08(rbp)	; 80409087 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040908B 
	DB 0x48,0x8B,0x5,0xC,0xCC,0xFF,0xFF
;/*	mov	(rax),eax	; 80409092 
	DB 0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 80409094 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0xC0BE0F48,eax	; 80409098 
	DB 0xB8,0x48,0xF,0xBE,0xC0
;/*	xor	-0x10(rbp),rax	; 8040909D 
	DB 0x48,0x33,0x45,0xF0
;/*		negq	rax	; 804090A1 
	DB 0x48,0xF7,0xD8
;/*	sbb	rax,rax	; 804090A4 
	DB 0x48,0x19,0xC0
;/*	and	-0x08(rbp),rax	; 804090A7 
	DB 0x48,0x23,0x45,0xF8
;/OP0@ NEWRAX0+
;/*	mov	rax,-0x08(rbp)	; 804090AB 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP0load+0x5 (%rip),rax	; 804090AF 
	DB 0x48,0x8B,0x5,0xDB,0xCB,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 804090B6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_NEWRAX0add	; 804090BA E8 6A DC FF FF 
;/OP0@ L@ FFFFFF AND C01948 <> AND OR \  sbb     %rax,%rax        
;/*	mov	rax,-0x08(rbp)	; 804090BF 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP0load+0x5 (%rip),rax	; 804090C3 
	DB 0x48,0x8B,0x5,0xC7,0xCB,0xFF,0xFF
;/*	mov	(rax),eax	; 804090CA 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 804090CC 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xC01948,rax	; 804090D1 
	DB 0x48,0x35,0x48,0x19,0xC0,0x0
;/*		negq	rax	; 804090D7 
	DB 0x48,0xF7,0xD8
;/*	sbb	rax,rax	; 804090DA 
	DB 0x48,0x19,0xC0
;/*	and	-0x08(rbp),rax	; 804090DD 
	DB 0x48,0x23,0x45,0xF8
;/*	or	0x00(rbp),rax	; 804090E1 
	DB 0x48,0xB,0x45,0x0
;/*	sub	$0x01,rax	; 804090E5 
	DB 0x48,0x83,0xE8,0x1
;/0= M_WL  M\ 68 DTST
;/*	sbb	rax,rax	; 804090E9 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 804090EC 48 85 C0 
;/*	mov	0x08(rbp),rax	; 804090EF 
	DB 0x48,0x8B,0x45,0x8
;/*	lea	0x10(rbp),rbp	; 804090F3 
	DB 0x48,0x8D,0x6D,0x10
;/*	jz	_OPTsubRULES+0x1937 	; 804090F7 
	DB 0xF,0x84,0x3B,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804090FD 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x68,eax	; 80409101 
	DB 0xB8,0x68,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409106 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040910A E8 48 CD FF FF 
;/	OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040910F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 80409113 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	lea	-0x08(rbp),rbp	; 80409118 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040911C E8 86 D1 FF FF 
;/	M\ 69 DTST
;/*	mov	rax,-0x08(rbp)	; 80409121 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x69,eax	; 80409125 
	DB 0xB8,0x69,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040912A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040912E E8 24 CD FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80409133 
	DB 0xE9,0xDD,0xE6,0xFF,0xFF
;/
;/OP1@ L@ 00048d48 XOR \      lea     (%rax,%rax,1),%rax
;/*	mov	rax,-0x08(rbp)	; 80409138 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040913C 
	DB 0x48,0x8B,0x5,0x5B,0xCB,0xFF,0xFF
;/*	mov	(rax),eax	; 80409143 
	DB 0x8B,0x0
;/*	xor	$0x48D48,rax	; 80409145 
	DB 0x48,0x35,0x48,0x8D,0x4,0x0
;/*	mov	rax,-0x10(rbp)	; 8040914B 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ 00048d48 XOR \      lea     (%rax,%rax,1),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040914F 
	DB 0x48,0x8B,0x5,0x3B,0xCB,0xFF,0xFF
;/*	mov	(rax),eax	; 80409156 
	DB 0x8B,0x0
;/*	xor	$0x48D48,rax	; 80409158 
	DB 0x48,0x35,0x48,0x8D,0x4,0x0
;/*	or	-0x10(rbp),rax	; 8040915E 
	DB 0x48,0xB,0x45,0xF0
;/OR 0= M_WL  M\ 6A DTST
;/*	sub	$0x01,rax	; 80409162 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 80409166 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80409169 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040916C 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_OPTsubRULES+0x19CC 	; 80409170 
	DB 0xF,0x84,0x57,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80409176 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x6A,eax	; 8040917A 
	DB 0xB8,0x6A,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040917F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409183 E8 CF CC FF FF 
;/        02e0c148 OP1@ L! \ shl    $0x2,%rax
;/*	mov	rax,-0x08(rbp)	; 80409188 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x2E0C148,-0x10(rbp)	; 8040918C 
	DB 0x48,0xC7,0x45,0xF0,0x48,0xC1,0xE0,0x2
;/*	mov	_OP1load+0x5 (%rip),rax	; 80409194 
	DB 0x48,0x8B,0x5,0x3,0xCB,0xFF,0xFF
;/*	mov	-0x10(rbp),edx	; 8040919B 
	DB 0x8B,0x55,0xF0
;/*	mov	edx,(rax)	; 8040919E 
	DB 0x89,0x10
;/*	mov	$0x44C539,eax	; 804091A0 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/       OP1 ToOP0
;/*	lea	-0x08(rbp),rbp	; 804091A5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 804091A9 E8 CD CB FF FF 
;/        -4 ALLOT
;/*	add	$-0x04,_HsubSTDOUT+0x18 (%rip)	; 804091AE 
	DB 0x48,0x83,0x5,0x66,0xBA,0xFF,0xFF,0xFC
;/	M\ 6B DTST
;/*	mov	rax,-0x08(rbp)	; 804091B6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x6B,eax	; 804091BA 
	DB 0xB8,0x6B,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804091BF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 804091C3 E8 8F CC FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 804091C8 
	DB 0xE9,0x48,0xE6,0xFF,0xFF
;/
;/OP1@ L@ 02e0c148 XOR \       shl    $0x2,%rax
;/*	mov	rax,-0x08(rbp)	; 804091CD 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 804091D1 
	DB 0x48,0x8B,0x5,0xC6,0xCA,0xFF,0xFF
;/*	mov	(rax),eax	; 804091D8 
	DB 0x8B,0x0
;/*	xor	$0x2E0C148,rax	; 804091DA 
	DB 0x48,0x35,0x48,0xC1,0xE0,0x2
;/*	mov	rax,-0x10(rbp)	; 804091E0 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ 00048d48 XOR \      lea     (%rax,%rax,1),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 804091E4 
	DB 0x48,0x8B,0x5,0xA6,0xCA,0xFF,0xFF
;/*	mov	(rax),eax	; 804091EB 
	DB 0x8B,0x0
;/*	xor	$0x48D48,rax	; 804091ED 
	DB 0x48,0x35,0x48,0x8D,0x4,0x0
;/*	or	-0x10(rbp),rax	; 804091F3 
	DB 0x48,0xB,0x45,0xF0
;/OR 0= M_WL  M\ 6C DTST
;/*	sub	$0x01,rax	; 804091F7 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 804091FB 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 804091FE 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80409201 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_OPTsubRULES+0x1A61 	; 80409205 
	DB 0xF,0x84,0x57,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040920B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x6C,eax	; 8040920F 
	DB 0xB8,0x6C,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409214 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409218 E8 3A CC FF FF 
;/        03e0c148 OP1@ L! \ shl    $0x3,%rax
;/*	mov	rax,-0x08(rbp)	; 8040921D 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x3E0C148,-0x10(rbp)	; 80409221 
	DB 0x48,0xC7,0x45,0xF0,0x48,0xC1,0xE0,0x3
;/*	mov	_OP1load+0x5 (%rip),rax	; 80409229 
	DB 0x48,0x8B,0x5,0x6E,0xCA,0xFF,0xFF
;/*	mov	-0x10(rbp),edx	; 80409230 
	DB 0x8B,0x55,0xF0
;/*	mov	edx,(rax)	; 80409233 
	DB 0x89,0x10
;/*	mov	$0x44C539,eax	; 80409235 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/       OP1 ToOP0
;/*	lea	-0x08(rbp),rbp	; 8040923A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 8040923E E8 38 CB FF FF 
;/        -4 ALLOT
;/*	add	$-0x04,_HsubSTDOUT+0x18 (%rip)	; 80409243 
	DB 0x48,0x83,0x5,0xD1,0xB9,0xFF,0xFF,0xFC
;/	M\ 6D DTST
;/*	mov	rax,-0x08(rbp)	; 8040924B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x6D,eax	; 8040924F 
	DB 0xB8,0x6D,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409254 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409258 E8 FA CB FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040925D 
	DB 0xE9,0xB3,0xE5,0xFF,0xFF
;/OP1@ 3 + C@ OP0@ 3 + C@ XOR
;/*	mov	rax,-0x08(rbp)	; 80409262 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 80409266 
	DB 0x48,0x8B,0x5,0x31,0xCA,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 8040926D 
	DB 0xF,0xB6,0x40,0x3
;/*	mov	rax,-0x10(rbp)	; 80409271 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP0load+0x5 (%rip),rax	; 80409275 
	DB 0x48,0x8B,0x5,0x15,0xCA,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 8040927C 
	DB 0xF,0xB6,0x40,0x3
;/*	xor	-0x10(rbp),rax	; 80409280 
	DB 0x48,0x33,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 80409284 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ @ FFFFFF AND 45c748 XOR OR \ movq    $X,-0x10(%rbp)
;/*	mov	_OP1load+0x5 (%rip),rax	; 80409288 
	DB 0x48,0x8B,0x5,0xF,0xCA,0xFF,0xFF
;/*	mov	(rax),rax	; 8040928F 
	DB 0x48,0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80409292 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x45C748,eax	; 80409297 
	DB 0x35,0x48,0xC7,0x45,0x0
;/*	or	-0x10(rbp),rax	; 8040929C 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 804092A0 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ @ FFFFFF AND 453348 XOR OR \ xor     -0x10(%rbp),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 804092A4 
	DB 0x48,0x8B,0x5,0xE6,0xC9,0xFF,0xFF
;/*	mov	(rax),rax	; 804092AB 
	DB 0x48,0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 804092AE 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x453348,eax	; 804092B3 
	DB 0x35,0x48,0x33,0x45,0x0
;/*	or	-0x10(rbp),rax	; 804092B8 
	DB 0x48,0xB,0x45,0xF0
;/*	sub	$0x01,rax	; 804092BC 
	DB 0x48,0x83,0xE8,0x1
;/0= M_WL  M\ 80 DTST
;/*	sbb	rax,rax	; 804092C0 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 804092C3 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804092C6 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_OPTsubRULES+0x1B36 	; 804092CA 
	DB 0xF,0x84,0x67,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804092D0 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x80,eax	; 804092D4 
	DB 0xB8,0x80,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804092D9 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 804092DD E8 75 CB FF FF 
;/	35 OP0@	1+ C! \  xor    $X,%rax
;/*	mov	rax,-0x08(rbp)	; 804092E2 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x35,-0x10(rbp)	; 804092E6 
	DB 0x48,0xC7,0x45,0xF0,0x35,0x0,0x0,0x0
;/*	mov	_OP0load+0x5 (%rip),rax	; 804092EE 
	DB 0x48,0x8B,0x5,0x9C,0xC9,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 804092F5 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),dl	; 804092F9 
	DB 0x8A,0x55,0xF0
;/*	mov	dl,(rax)	; 804092FC 
	DB 0x88,0x10
;/*	mov	_OP1load+0x5 (%rip),rax	; 804092FE 
	DB 0x48,0x8B,0x5,0x99,0xC9,0xFF,0xFF
;/	OP1@ 4 + L@ OP0@ 2+ L! \  xor    $X,%rax
;/*	mov	0x04(rax),eax	; 80409305 
	DB 0x8B,0x40,0x4
;/*	mov	rax,-0x10(rbp)	; 80409308 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040930C 
	DB 0x48,0x8B,0x5,0x7E,0xC9,0xFF,0xFF
;/*	lea	0x02(rax),rax	; 80409313 
	DB 0x48,0x8D,0x40,0x2
;/*	mov	-0x10(rbp),edx	; 80409317 
	DB 0x8B,0x55,0xF0
;/*	mov	edx,(rax)	; 8040931A 
	DB 0x89,0x10
;/*	add	$0x02,_HsubSTDOUT+0x18 (%rip)	; 8040931C 
	DB 0x48,0x83,0x5,0xF8,0xB8,0xFF,0xFF,0x2
;/	2 ALLOT
;/*	mov	$0x81,eax	; 80409324 
	DB 0xB8,0x81,0x0,0x0,0x0
;/	M\ 81 DTST
;/*	lea	-0x08(rbp),rbp	; 80409329 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040932D E8 25 CB FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80409332 
	DB 0xE9,0xDE,0xE4,0xFF,0xFF
;/
;/  OP2 @ DUP :-SET U< IF DROP BREAK TO OP2@
;/*	mov	rax,-0x08(rbp)	; 80409337 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C541,eax	; 8040933B 
	DB 0xB8,0x41,0xC5,0x44,0x0
;/*	mov	(rax),rax	; 80409340 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 80409343 
	DB 0x48,0x89,0x45,0xF0
;/*	cmp	_dcomasubSET+0x5 (%rip),rax	; 80409347 
	DB 0x48,0x3B,0x5,0x1E,0xC9,0xFF,0xFF
;/*	sbb	rax,rax	; 8040934E 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80409351 48 85 C0 
;/*	mov	-0x10(rbp),rax	; 80409354 
	DB 0x48,0x8B,0x45,0xF0
;/*	lea	-0x08(rbp),rbp	; 80409358 
	DB 0x48,0x8D,0x6D,0xF8
;/*	jz	_OPTsubRULES+0x1B6A 	; 8040935C 
	DB 0xF,0x84,0x9,0x0,0x0,0x0
;/*	mov	0x00(rbp),rax	; 80409362 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 80409366 
	DB 0x48,0x8D,0x6D,0x8
	ret		; 8040936A C3 
;/*	mov	rax,_OP2load+0x5 (%rip)	; 8040936B 
	DB 0x48,0x89,0x5,0x39,0xC9,0xFF,0xFF
;/*	mov	_OP2load+0x5 (%rip),rax	; 80409372 
	DB 0x48,0x8B,0x5,0x32,0xC9,0xFF,0xFF
;/*	mov	(rax),eax	; 80409379 
	DB 0x8B,0x0
;/
;/OP2@ L@ FFFFFF AND d8f748 XOR	\ negq    %rax
;/*	and	$0xFFFFFF,eax	; 8040937B 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xD8F748,eax	; 80409380 
	DB 0x35,0x48,0xF7,0xD8,0x0
;/OP1@ L@ FFFFFF AND 450348 XOR OR \ add     -0x10(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 80409385 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 80409389 
	DB 0x48,0x8B,0x5,0xE,0xC9,0xFF,0xFF
;/*	mov	(rax),eax	; 80409390 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80409392 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x450348,eax	; 80409397 
	DB 0x35,0x48,0x3,0x45,0x0
;/*	or	-0x08(rbp),rax	; 8040939C 
	DB 0x48,0xB,0x45,0xF8
;/OP0@ L@ FFFFFF AND d8f748 XOR OR \ negq    %rax
;/*	mov	rax,-0x08(rbp)	; 804093A0 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP0load+0x5 (%rip),rax	; 804093A4 
	DB 0x48,0x8B,0x5,0xE6,0xC8,0xFF,0xFF
;/*	mov	(rax),eax	; 804093AB 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 804093AD 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xD8F748,eax	; 804093B2 
	DB 0x35,0x48,0xF7,0xD8,0x0
;/*	or	-0x08(rbp),rax	; 804093B7 
	DB 0x48,0xB,0x45,0xF8
;/  0=
;/*	sub	$0x01,rax	; 804093BB 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 804093BF 
	DB 0x48,0x19,0xC0
;/ M_WL  M\ 1E DTST
	test	rax,rax	; 804093C2 48 85 C0 
;/*	mov	0x00(rbp),rax	; 804093C5 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 804093C9 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x1C47 	; 804093CD 
	DB 0xF,0x84,0x75,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804093D3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x1E,eax	; 804093D7 
	DB 0xB8,0x1E,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804093DC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 804093E0 E8 72 CA FF FF 
;/	28 OP1@ 1+ XOR!  \	sub    -0x10(%rbp),%rax
;/*	mov	rax,-0x08(rbp)	; 804093E5 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x28,-0x10(rbp)	; 804093E9 
	DB 0x48,0xC7,0x45,0xF0,0x28,0x0,0x0,0x0
;/*	mov	_OP1load+0x5 (%rip),rax	; 804093F1 
	DB 0x48,0x8B,0x5,0xA6,0xC8,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 804093F8 
	DB 0x48,0x8D,0x40,0x1
;/*	lea	-0x10(rbp),rbp	; 804093FC 
	DB 0x48,0x8D,0x6D,0xF0
	call	_XORsave	; 80409400 E8 58 AE FF FF 
;/	OP2 OPexcise
;/*	mov	rax,-0x08(rbp)	; 80409405 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C541,eax	; 80409409 
	DB 0xB8,0x41,0xC5,0x44,0x0
;/*	lea	-0x08(rbp),rbp	; 8040940E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 80409412 E8 90 CE FF FF 
;/	OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 80409417 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 8040941B 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	lea	-0x08(rbp),rbp	; 80409420 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 80409424 E8 52 C9 FF FF 
;/	-3 ALLOT
;/*	add	$-0x03,_HsubSTDOUT+0x18 (%rip)	; 80409429 
	DB 0x48,0x83,0x5,0xEB,0xB7,0xFF,0xFF,0xFD
;/	M\ 1F DTST
;/*	mov	rax,-0x08(rbp)	; 80409431 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x1F,eax	; 80409435 
	DB 0xB8,0x1F,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040943A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040943E E8 14 CA FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80409443 
	DB 0xE9,0xCD,0xE3,0xFF,0xFF
;/
;/OP2@ L@ FFFFFF AND 058d48 XOR	\ lea     X(%rip),%rax
;/*	mov	rax,-0x08(rbp)	; 80409448 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040944C 
	DB 0x48,0x8B,0x5,0x58,0xC8,0xFF,0xFF
;/*	mov	(rax),eax	; 80409453 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80409455 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x58D48,eax	; 8040945A 
	DB 0x35,0x48,0x8D,0x5,0x0
;/*	mov	rax,-0x10(rbp)	; 8040945F 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ L@ FFFFFF AND
;/*	mov	_OP1load+0x5 (%rip),rax	; 80409463 
	DB 0x48,0x8B,0x5,0x34,0xC8,0xFF,0xFF
;/*	mov	(rax),eax	; 8040946A 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040946C 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	mov	rax,-0x18(rbp)	; 80409471 
	DB 0x48,0x89,0x45,0xE8
;/DUP	108948 XOR		\ mov     %rdx,(%rax)
;/*	xor	$0x108948,rax	; 80409475 
	DB 0x48,0x35,0x48,0x89,0x10,0x0
;/*	mov	-0x18(rbp),rdx	; 8040947B 
	DB 0x48,0x8B,0x55,0xE8
;/SWAP	100148 <> AND OR	\ add     %rdx,(%rax)
;/*	mov	rax,-0x18(rbp)	; 8040947F 
	DB 0x48,0x89,0x45,0xE8
;/*	mov	rdx,-0x20(rbp)	; 80409483 
	DB 0x48,0x89,0x55,0xE0
;/*	mov	$0x100148,eax	; 80409487 
	DB 0xB8,0x48,0x1,0x10,0x0
;/*	xor	-0x20(rbp),rax	; 8040948C 
	DB 0x48,0x33,0x45,0xE0
;/*		negq	rax	; 80409490 
	DB 0x48,0xF7,0xD8
;/*	sbb	rax,rax	; 80409493 
	DB 0x48,0x19,0xC0
;/*	and	-0x18(rbp),rax	; 80409496 
	DB 0x48,0x23,0x45,0xE8
;/*	or	-0x10(rbp),rax	; 8040949A 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040949E 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ FFFFFF AND 458b48 XOR OR \ mov     -0x10(%rbp),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 804094A2 
	DB 0x48,0x8B,0x5,0xE8,0xC7,0xFF,0xFF
;/*	mov	(rax),eax	; 804094A9 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 804094AB 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458B48,eax	; 804094B0 
	DB 0x35,0x48,0x8B,0x45,0x0
;/*	or	-0x10(rbp),rax	; 804094B5 
	DB 0x48,0xB,0x45,0xF0
;/*	sub	$0x01,rax	; 804094B9 
	DB 0x48,0x83,0xE8,0x1
;/  0=
;/*	sbb	rax,rax	; 804094BD 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 804094C0 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804094C3 
	DB 0x48,0x8B,0x45,0xF8
;/ M_WL  M\ 3C DTST
;/*	jz	_OPTsubRULES+0x1D2D 	; 804094C7 
	DB 0xF,0x84,0x61,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804094CD 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x3C,eax	; 804094D1 
	DB 0xB8,0x3C,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804094D6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 804094DA E8 78 C9 FF FF 
;/	OP1@ 1+ W@ 0500 XOR OP2@ 1+ W!	\ mov    %rdx,X(%rip)
;/*	mov	rax,-0x08(rbp)	; 804094DF 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 804094E3 
	DB 0x48,0x8B,0x5,0xB4,0xC7,0xFF,0xFF
;/*	movzw	0x01(rax),eax	; 804094EA 
	DB 0xF,0xB7,0x40,0x1
;/*	xor	$0x500,rax	; 804094EE 
	DB 0x48,0x35,0x0,0x5,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 804094F4 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP2load+0x5 (%rip),rax	; 804094F8 
	DB 0x48,0x8B,0x5,0xAC,0xC7,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 804094FF 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),edx	; 80409503 
	DB 0x8B,0x55,0xF0
;/*	mov	dx,(rax)	; 80409506 
	DB 0x66,0x89,0x10
;/*	mov	$0x44C539,eax	; 80409509 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/	OP1 OPexcise
;/*	lea	-0x08(rbp),rbp	; 8040950E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 80409512 E8 90 CD FF FF 
;/	M\ 3D DTST
;/*	mov	rax,-0x08(rbp)	; 80409517 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x3D,eax	; 8040951B 
	DB 0xB8,0x3D,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409520 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409524 E8 2E C9 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80409529 
	DB 0xE9,0xE7,0xE2,0xFF,0xFF
;/OP2@ L@ FFFFFF AND c28948 XOR	\ mov     %rax,%rdx       # 80404e9d
;/*	mov	rax,-0x08(rbp)	; 8040952E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 80409532 
	DB 0x48,0x8B,0x5,0x72,0xC7,0xFF,0xFF
;/*	mov	(rax),eax	; 80409539 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040953B 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xC28948,eax	; 80409540 
	DB 0x35,0x48,0x89,0xC2,0x0
;/*	mov	rax,-0x10(rbp)	; 80409545 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ L@ FFFFFF AND
;/*	mov	_OP1load+0x5 (%rip),rax	; 80409549 
	DB 0x48,0x8B,0x5,0x4E,0xC7,0xFF,0xFF
;/*	mov	(rax),eax	; 80409550 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80409552 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	mov	rax,-0x18(rbp)	; 80409557 
	DB 0x48,0x89,0x45,0xE8
;/DUP	158948 XOR		\ mov     %rdx,X (%rip)
;/*	xor	$0x158948,rax	; 8040955B 
	DB 0x48,0x35,0x48,0x89,0x15,0x0
;/*	mov	-0x18(rbp),rdx	; 80409561 
	DB 0x48,0x8B,0x55,0xE8
;/SWAP	150148 <>  AND OR	\ add     %rdx,X (%rip)
;/*	mov	rax,-0x18(rbp)	; 80409565 
	DB 0x48,0x89,0x45,0xE8
;/*	mov	rdx,-0x20(rbp)	; 80409569 
	DB 0x48,0x89,0x55,0xE0
;/*	mov	$0x150148,eax	; 8040956D 
	DB 0xB8,0x48,0x1,0x15,0x0
;/*	xor	-0x20(rbp),rax	; 80409572 
	DB 0x48,0x33,0x45,0xE0
;/*		negq	rax	; 80409576 
	DB 0x48,0xF7,0xD8
;/*	sbb	rax,rax	; 80409579 
	DB 0x48,0x19,0xC0
;/*	and	-0x18(rbp),rax	; 8040957C 
	DB 0x48,0x23,0x45,0xE8
;/*	or	-0x10(rbp),rax	; 80409580 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 80409584 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ FFFFFF AND 458b48 XOR OR \ mov     -0x10(%rbp),%rax        # 8
;/*	mov	_OP0load+0x5 (%rip),rax	; 80409588 
	DB 0x48,0x8B,0x5,0x2,0xC7,0xFF,0xFF
;/*	mov	(rax),eax	; 8040958F 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80409591 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458B48,eax	; 80409596 
	DB 0x35,0x48,0x8B,0x45,0x0
;/*	or	-0x10(rbp),rax	; 8040959B 
	DB 0x48,0xB,0x45,0xF0
;/*	sub	$0x01,rax	; 8040959F 
	DB 0x48,0x83,0xE8,0x1
;/  0=
;/*	sbb	rax,rax	; 804095A3 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 804095A6 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804095A9 
	DB 0x48,0x8B,0x45,0xF8
;/ M_WL  M\ 3E DTST
;/*	jz	_OPTsubRULES+0x1E3C 	; 804095AD 
	DB 0xF,0x84,0x8A,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804095B3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x3E,eax	; 804095B7 
	DB 0xB8,0x3E,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804095BC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 804095C0 E8 92 C8 FF FF 
;/	05 OP1@ 2+ C!	\	mov    %rax,X(%rip)
;/*	mov	rax,-0x08(rbp)	; 804095C5 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x5,-0x10(rbp)	; 804095C9 
	DB 0x48,0xC7,0x45,0xF0,0x5,0x0,0x0,0x0
;/*	mov	_OP1load+0x5 (%rip),rax	; 804095D1 
	DB 0x48,0x8B,0x5,0xC6,0xC6,0xFF,0xFF
;/*	lea	0x02(rax),rax	; 804095D8 
	DB 0x48,0x8D,0x40,0x2
;/*	mov	-0x10(rbp),dl	; 804095DC 
	DB 0x8A,0x55,0xF0
;/*	mov	dl,(rax)	; 804095DF 
	DB 0x88,0x10
;/*	mov	$0x44C541,eax	; 804095E1 
	DB 0xB8,0x41,0xC5,0x44,0x0
;/	OP2 OPexcise
;/*	lea	-0x08(rbp),rbp	; 804095E6 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 804095EA E8 B8 CC FF FF 
;/	OP0 3 OPinsert
;/*	mov	rax,-0x08(rbp)	; 804095EF 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 804095F3 
	DB 0x48,0x8D,0x5,0x4D,0xC5,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 804095FA 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 804095FE 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 80409603 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPinsert	; 80409607 E8 BC CB FF FF 
;/	C289 OP1 @ 1+ W!
;/*	mov	rax,-0x08(rbp)	; 8040960C 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0xC289,-0x10(rbp)	; 80409610 
	DB 0x48,0xC7,0x45,0xF0,0x89,0xC2,0x0,0x0
;/*	mov	$0x44C539,eax	; 80409618 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	mov	(rax),rax	; 8040961D 
	DB 0x48,0x8B,0x0
;/*	lea	0x01(rax),rax	; 80409620 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),edx	; 80409624 
	DB 0x8B,0x55,0xF0
;/*	mov	dx,(rax)	; 80409627 
	DB 0x66,0x89,0x10
;/*	mov	$0x3F,eax	; 8040962A 
	DB 0xB8,0x3F,0x0,0x0,0x0
;/	M\ 3F DTST
;/*	lea	-0x08(rbp),rbp	; 8040962F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409633 E8 1F C8 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80409638 
	DB 0xE9,0xD8,0xE1,0xFF,0xFF
;/
;/OP2@ L@ FFFFFF AND F0894C XOR	\ mov	%r14,%rax
;/*	mov	rax,-0x08(rbp)	; 8040963D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 80409641 
	DB 0x48,0x8B,0x5,0x63,0xC6,0xFF,0xFF
;/*	mov	(rax),eax	; 80409648 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040964A 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xF0894C,eax	; 8040964F 
	DB 0x35,0x4C,0x89,0xF0,0x0
;/*	mov	rax,-0x10(rbp)	; 80409654 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ L@ FFFFFF AND
;/*	mov	_OP1load+0x5 (%rip),rax	; 80409658 
	DB 0x48,0x8B,0x5,0x3F,0xC6,0xFF,0xFF
;/*	mov	(rax),eax	; 8040965F 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80409661 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	mov	rax,-0x18(rbp)	; 80409666 
	DB 0x48,0x89,0x45,0xE8
;/DUP	108948 XOR		\ mov	%rdx,(%rax)
;/*	xor	$0x108948,rax	; 8040966A 
	DB 0x48,0x35,0x48,0x89,0x10,0x0
;/*	mov	-0x18(rbp),rdx	; 80409670 
	DB 0x48,0x8B,0x55,0xE8
;/SWAP	100148 <> AND OR	\ add	%rdx,(%rax)
;/*	mov	rax,-0x18(rbp)	; 80409674 
	DB 0x48,0x89,0x45,0xE8
;/*	mov	rdx,-0x20(rbp)	; 80409678 
	DB 0x48,0x89,0x55,0xE0
;/*	mov	$0x100148,eax	; 8040967C 
	DB 0xB8,0x48,0x1,0x10,0x0
;/*	xor	-0x20(rbp),rax	; 80409681 
	DB 0x48,0x33,0x45,0xE0
;/*		negq	rax	; 80409685 
	DB 0x48,0xF7,0xD8
;/*	sbb	rax,rax	; 80409688 
	DB 0x48,0x19,0xC0
;/*	and	-0x18(rbp),rax	; 8040968B 
	DB 0x48,0x23,0x45,0xE8
;/*	or	-0x10(rbp),rax	; 8040968F 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 80409693 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ FFFFFF AND 458b48 XOR OR \ mov	-8(%rbp),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 80409697 
	DB 0x48,0x8B,0x5,0xF3,0xC5,0xFF,0xFF
;/*	mov	(rax),eax	; 8040969E 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 804096A0 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458B48,eax	; 804096A5 
	DB 0x35,0x48,0x8B,0x45,0x0
;/*	or	-0x10(rbp),rax	; 804096AA 
	DB 0x48,0xB,0x45,0xF0
;/*	sub	$0x01,rax	; 804096AE 
	DB 0x48,0x83,0xE8,0x1
;/  0=
;/*	sbb	rax,rax	; 804096B2 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 804096B5 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804096B8 
	DB 0x48,0x8B,0x45,0xF8
;/ M_WL  M\ 6E DTST
;/*	jz	_OPTsubRULES+0x1F18 	; 804096BC 
	DB 0xF,0x84,0x57,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804096C2 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x6E,eax	; 804096C6 
	DB 0xB8,0x6E,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804096CB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 804096CF E8 83 C7 FF FF 
;/	060001 OP1@ XOR!	\ mov	%rdx,(%r14)
;/*	mov	rax,-0x08(rbp)	; 804096D4 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x60001,-0x10(rbp)	; 804096D8 
	DB 0x48,0xC7,0x45,0xF0,0x1,0x0,0x6,0x0
;/*	mov	_OP1load+0x5 (%rip),rax	; 804096E0 
	DB 0x48,0x8B,0x5,0xB7,0xC5,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 804096E7 
	DB 0x48,0x8D,0x6D,0xF0
	call	_XORsave	; 804096EB E8 6D AB FF FF 
;/	OP2 OPexcise
;/*	mov	rax,-0x08(rbp)	; 804096F0 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C541,eax	; 804096F4 
	DB 0xB8,0x41,0xC5,0x44,0x0
;/*	lea	-0x08(rbp),rbp	; 804096F9 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 804096FD E8 A5 CB FF FF 
;/	M\ 6F DTST
;/*	mov	rax,-0x08(rbp)	; 80409702 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x6F,eax	; 80409706 
	DB 0xB8,0x6F,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040970B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040970F E8 43 C7 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80409714 
	DB 0xE9,0xFC,0xE0,0xFF,0xFF
;/
;/
;/OP2@ 3 + C@  OP0@ 3 + C@ XOR
;/*	mov	rax,-0x08(rbp)	; 80409719 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040971D 
	DB 0x48,0x8B,0x5,0x87,0xC5,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 80409724 
	DB 0xF,0xB6,0x40,0x3
;/*	mov	rax,-0x10(rbp)	; 80409728 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040972C 
	DB 0x48,0x8B,0x5,0x5E,0xC5,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 80409733 
	DB 0xF,0xB6,0x40,0x3
;/*	xor	-0x10(rbp),rax	; 80409737 
	DB 0x48,0x33,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040973B 
	DB 0x48,0x89,0x45,0xF0
;/OP2@ L@ FFFFFF AND 458948 XOR OR \ mov	%rax,-0x10(%rbp)
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040973F 
	DB 0x48,0x8B,0x5,0x65,0xC5,0xFF,0xFF
;/*	mov	(rax),eax	; 80409746 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80409748 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458948,eax	; 8040974D 
	DB 0x35,0x48,0x89,0x45,0x0
;/*	or	-0x10(rbp),rax	; 80409752 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 80409756 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ L@ FFFFFF AND 058b48 XOR OR \ mov	LASTsubHERE+0xd (%rip),%rax
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040975A 
	DB 0x48,0x8B,0x5,0x3D,0xC5,0xFF,0xFF
;/*	mov	(rax),eax	; 80409761 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80409763 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x58B48,eax	; 80409768 
	DB 0x35,0x48,0x8B,0x5,0x0
;/*	or	-0x10(rbp),rax	; 8040976D 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 80409771 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ FFFFFF AND
;/*	mov	_OP0load+0x5 (%rip),rax	; 80409775 
	DB 0x48,0x8B,0x5,0x15,0xC5,0xFF,0xFF
;/*	mov	(rax),eax	; 8040977C 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040977E 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	mov	rax,-0x18(rbp)	; 80409783 
	DB 0x48,0x89,0x45,0xE8
;/DUP 453348 XOR		\ xor	-0x10(%rbp),%rax
;/*	xor	$0x453348,rax	; 80409787 
	DB 0x48,0x35,0x48,0x33,0x45,0x0
;/*	mov	-0x18(rbp),rdx	; 8040978D 
	DB 0x48,0x8B,0x55,0xE8
;/SWAP 453948 <> AND OR	\ cmp	-0x10(%rbp),%rax \ !!
;/*	mov	rax,-0x18(rbp)	; 80409791 
	DB 0x48,0x89,0x45,0xE8
;/*	mov	rdx,-0x20(rbp)	; 80409795 
	DB 0x48,0x89,0x55,0xE0
;/*	mov	$0x453948,eax	; 80409799 
	DB 0xB8,0x48,0x39,0x45,0x0
;/*	xor	-0x20(rbp),rax	; 8040979E 
	DB 0x48,0x33,0x45,0xE0
;/*		negq	rax	; 804097A2 
	DB 0x48,0xF7,0xD8
;/*	sbb	rax,rax	; 804097A5 
	DB 0x48,0x19,0xC0
;/*	and	-0x18(rbp),rax	; 804097A8 
	DB 0x48,0x23,0x45,0xE8
;/*	or	-0x10(rbp),rax	; 804097AC 
	DB 0x48,0xB,0x45,0xF0
;/*	sub	$0x01,rax	; 804097B0 
	DB 0x48,0x83,0xE8,0x1
;/0= M_WL M\ 28 DTST
;/*	sbb	rax,rax	; 804097B4 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 804097B7 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804097BA 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_OPTsubRULES+0x2049 	; 804097BE 
	DB 0xF,0x84,0x86,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804097C4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x28,eax	; 804097C8 
	DB 0xB8,0x28,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804097CD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 804097D1 E8 81 C6 FF FF 
;/	OP0@ 1+ C@ DUP 39 = IF 2 XOR THEN
;/*	mov	rax,-0x08(rbp)	; 804097D6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP0load+0x5 (%rip),rax	; 804097DA 
	DB 0x48,0x8B,0x5,0xB0,0xC4,0xFF,0xFF
;/*	movzb	0x01(rax),eax	; 804097E1 
	DB 0xF,0xB6,0x40,0x1
;/*	mov	rax,-0x10(rbp)	; 804097E5 
	DB 0x48,0x89,0x45,0xF0
;/*	xor	$0x39,rax	; 804097E9 
	DB 0x48,0x35,0x39,0x0,0x0,0x0
;/*	sub	$0x01,rax	; 804097EF 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 804097F3 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 804097F6 48 85 C0 
;/*	mov	-0x10(rbp),rax	; 804097F9 
	DB 0x48,0x8B,0x45,0xF0
;/*	lea	-0x08(rbp),rbp	; 804097FD 
	DB 0x48,0x8D,0x6D,0xF8
;/*	jz	_OPTsubRULES+0x200C 	; 80409801 
	DB 0xF,0x84,0x6,0x0,0x0,0x0
;/*	xor	$0x2,rax	; 80409807 
	DB 0x48,0x35,0x2,0x0,0x0,0x0
;/	OP1@ 1+ C! \	xor    -0x1b8(%rip),%rax
;/*	mov	rax,-0x08(rbp)	; 8040980D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 80409811 
	DB 0x48,0x8B,0x5,0x86,0xC4,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 80409818 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x08(rbp),dl	; 8040981C 
	DB 0x8A,0x55,0xF8
;/*	mov	dl,(rax)	; 8040981F 
	DB 0x88,0x10
;/*	mov	$0x44C539,eax	; 80409821 
	DB 0xB8,0x39,0xC5,0x44,0x0
	call	_ToOP0	; 80409826 E8 50 C5 FF FF 
;/	OP1 ToOP0
;/	-4 ALLOT
;/*	add	$-0x04,_HsubSTDOUT+0x18 (%rip)	; 8040982B 
	DB 0x48,0x83,0x5,0xE9,0xB3,0xFF,0xFF,0xFC
;/	M\ 29 DTST
;/*	mov	rax,-0x08(rbp)	; 80409833 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x29,eax	; 80409837 
	DB 0xB8,0x29,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040983C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409840 E8 12 C6 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80409845 
	DB 0xE9,0xCB,0xDF,0xFF,0xFF
;/
;/OP2@ 3 + C@ OP0@ 3 + C@ XOR
;/*	mov	rax,-0x08(rbp)	; 8040984A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040984E 
	DB 0x48,0x8B,0x5,0x56,0xC4,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 80409855 
	DB 0xF,0xB6,0x40,0x3
;/*	mov	rax,-0x10(rbp)	; 80409859 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040985D 
	DB 0x48,0x8B,0x5,0x2D,0xC4,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 80409864 
	DB 0xF,0xB6,0x40,0x3
;/*	xor	-0x10(rbp),rax	; 80409868 
	DB 0x48,0x33,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040986C 
	DB 0x48,0x89,0x45,0xF0
;/OP2@ @ FFFFFF AND 458948 XOR OR	\ mov     %rax,-0x08(%rbp)
;/*	mov	_OP2load+0x5 (%rip),rax	; 80409870 
	DB 0x48,0x8B,0x5,0x34,0xC4,0xFF,0xFF
;/*	mov	(rax),rax	; 80409877 
	DB 0x48,0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040987A 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458948,eax	; 8040987F 
	DB 0x35,0x48,0x89,0x45,0x0
;/*	or	-0x10(rbp),rax	; 80409884 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 80409888 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ @ FFFFFF AND 58b48 XOR OR	\ mov     X(%rip),%rax
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040988C 
	DB 0x48,0x8B,0x5,0xB,0xC4,0xFF,0xFF
;/*	mov	(rax),rax	; 80409893 
	DB 0x48,0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80409896 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x58B48,eax	; 8040989B 
	DB 0x35,0x48,0x8B,0x5,0x0
;/*	or	-0x10(rbp),rax	; 804098A0 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 804098A4 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ @ FFFFFF AND 453b48 XOR OR	\ cmp     -0x08(%rbp),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 804098A8 
	DB 0x48,0x8B,0x5,0xE2,0xC3,0xFF,0xFF
;/*	mov	(rax),rax	; 804098AF 
	DB 0x48,0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 804098B2 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x453B48,eax	; 804098B7 
	DB 0x35,0x48,0x3B,0x45,0x0
;/*	or	-0x10(rbp),rax	; 804098BC 
	DB 0x48,0xB,0x45,0xF0
;/*	sub	$0x01,rax	; 804098C0 
	DB 0x48,0x83,0xE8,0x1
;/0=	M_WL M\ 7E DTST
;/*	sbb	rax,rax	; 804098C4 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 804098C7 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804098CA 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_OPTsubRULES+0x2149 	; 804098CE 
	DB 0xF,0x84,0x76,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804098D4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x7E,eax	; 804098D8 
	DB 0xB8,0x7E,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804098DD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 804098E1 E8 71 C5 FF FF 
;/	OP1@ @	OP0@ ! \ удалять некорректно	
;/*	mov	rax,-0x08(rbp)	; 804098E6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 804098EA 
	DB 0x48,0x8B,0x5,0xAD,0xC3,0xFF,0xFF
;/*	mov	(rax),rax	; 804098F1 
	DB 0x48,0x8B,0x0
;/*	mov	_OP0load+0x5 (%rip),rdx	; 804098F4 
	DB 0x48,0x8B,0x15,0x96,0xC3,0xFF,0xFF
;/*	mov	rax,(rdx)	; 804098FB 
	DB 0x48,0x89,0x2
;/*	movq	$-0x7,-0x10(rbp)	; 804098FE 
	DB 0x48,0xC7,0x45,0xF0,0xF9,0xFF,0xFF,0xFF
;/	-7 OP0@ 3+ L+!
;/*	mov	_OP0load+0x5 (%rip),rax	; 80409906 
	DB 0x48,0x8B,0x5,0x84,0xC3,0xFF,0xFF
;/*	lea	0x03(rax),rax	; 8040990D 
	DB 0x48,0x8D,0x40,0x3
;/*	mov	-0x10(rbp),rdx	; 80409911 
	DB 0x48,0x8B,0x55,0xF0
;/*	add	edx,(rax)	; 80409915 
	DB 0x1,0x10
;/*	add	$0x03,_HsubSTDOUT+0x18 (%rip)	; 80409917 
	DB 0x48,0x83,0x5,0xFD,0xB2,0xFF,0xFF,0x3
;/	3 ALLOT
;/*	movq	$0x39,-0x10(rbp)	; 8040991F 
	DB 0x48,0xC7,0x45,0xF0,0x39,0x0,0x0,0x0
;/	39 OP1@ 1+ C!  \ cmp    %rax,X(%rip)
;/*	mov	_OP1load+0x5 (%rip),rax	; 80409927 
	DB 0x48,0x8B,0x5,0x70,0xC3,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 8040992E 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),dl	; 80409932 
	DB 0x8A,0x55,0xF0
;/*	mov	dl,(rax)	; 80409935 
	DB 0x88,0x10
;/*	mov	$0x7F,eax	; 80409937 
	DB 0xB8,0x7F,0x0,0x0,0x0
;/	M\ 7F DTST
;/*	lea	-0x08(rbp),rbp	; 8040993C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409940 E8 12 C5 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80409945 
	DB 0xE9,0xCB,0xDE,0xFF,0xFF
;/
;/OP2@ 3 + C@ OP0@ 3 + C@ XOR
;/*	mov	rax,-0x08(rbp)	; 8040994A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040994E 
	DB 0x48,0x8B,0x5,0x56,0xC3,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 80409955 
	DB 0xF,0xB6,0x40,0x3
;/*	mov	rax,-0x10(rbp)	; 80409959 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040995D 
	DB 0x48,0x8B,0x5,0x2D,0xC3,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 80409964 
	DB 0xF,0xB6,0x40,0x3
;/*	xor	-0x10(rbp),rax	; 80409968 
	DB 0x48,0x33,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040996C 
	DB 0x48,0x89,0x45,0xF0
;/OP2@ @ FFFFFF AND 458948 XOR OR	\ mov     %rax,-0x08(%rbp)
;/*	mov	_OP2load+0x5 (%rip),rax	; 80409970 
	DB 0x48,0x8B,0x5,0x34,0xC3,0xFF,0xFF
;/*	mov	(rax),rax	; 80409977 
	DB 0x48,0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040997A 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458948,eax	; 8040997F 
	DB 0x35,0x48,0x89,0x45,0x0
;/*	or	-0x10(rbp),rax	; 80409984 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 80409988 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ @ FFFFFF AND F0894C XOR OR	\ mov     %r14,%rax
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040998C 
	DB 0x48,0x8B,0x5,0xB,0xC3,0xFF,0xFF
;/*	mov	(rax),rax	; 80409993 
	DB 0x48,0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80409996 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xF0894C,eax	; 8040999B 
	DB 0x35,0x4C,0x89,0xF0,0x0
;/*	or	-0x10(rbp),rax	; 804099A0 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 804099A4 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ @ FFFFFF AND 453b48 XOR OR	\ cmp     -0x08(%rbp),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 804099A8 
	DB 0x48,0x8B,0x5,0xE2,0xC2,0xFF,0xFF
;/*	mov	(rax),rax	; 804099AF 
	DB 0x48,0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 804099B2 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x453B48,eax	; 804099B7 
	DB 0x35,0x48,0x3B,0x45,0x0
;/*	or	-0x10(rbp),rax	; 804099BC 
	DB 0x48,0xB,0x45,0xF0
;/*	sub	$0x01,rax	; 804099C0 
	DB 0x48,0x83,0xE8,0x1
;/0=  M_WL M\ 90 DTST
;/*	sbb	rax,rax	; 804099C4 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 804099C7 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 804099CA 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_OPTsubRULES+0x222C 	; 804099CE 
	DB 0xF,0x84,0x59,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 804099D4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x90,eax	; 804099D8 
	DB 0xB8,0x90,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 804099DD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 804099E1 E8 71 C4 FF FF 
;/	c63949 OP1@ L! \ cmp    %rax,%r14
;/*	mov	rax,-0x08(rbp)	; 804099E6 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0xC63949,-0x10(rbp)	; 804099EA 
	DB 0x48,0xC7,0x45,0xF0,0x49,0x39,0xC6,0x0
;/*	mov	_OP1load+0x5 (%rip),rax	; 804099F2 
	DB 0x48,0x8B,0x5,0xA5,0xC2,0xFF,0xFF
;/*	mov	-0x10(rbp),edx	; 804099F9 
	DB 0x8B,0x55,0xF0
;/*	mov	edx,(rax)	; 804099FC 
	DB 0x89,0x10
;/*	movq	$0xF0894C,-0x10(rbp)	; 804099FE 
	DB 0x48,0xC7,0x45,0xF0,0x4C,0x89,0xF0,0x0
;/	F0894C OP0@ L! \ mov    %r14,%rax удалять некорректно	
;/*	mov	_OP0load+0x5 (%rip),rax	; 80409A06 
	DB 0x48,0x8B,0x5,0x84,0xC2,0xFF,0xFF
;/*	mov	-0x10(rbp),edx	; 80409A0D 
	DB 0x8B,0x55,0xF0
;/*	mov	edx,(rax)	; 80409A10 
	DB 0x89,0x10
;/*	add	$-0x01,_HsubSTDOUT+0x18 (%rip)	; 80409A12 
	DB 0x48,0x83,0x5,0x2,0xB2,0xFF,0xFF,0xFF
;/	-1 ALLOT
;/*	mov	$0x91,eax	; 80409A1A 
	DB 0xB8,0x91,0x0,0x0,0x0
;/	M\ 91 DTST
;/*	lea	-0x08(rbp),rbp	; 80409A1F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409A23 E8 2F C4 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80409A28 
	DB 0xE9,0xE8,0xDD,0xFF,0xFF
;/
;/J_COD F0 AND 80 XOR
;/*	mov	rax,-0x08(rbp)	; 80409A2D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_J_COD+0x5 (%rip),rax	; 80409A31 
	DB 0x48,0x8B,0x5,0xAC,0xC0,0xFF,0xFF
;/*	and	$0xF0,eax	; 80409A38 
	DB 0x25,0xF0,0x0,0x0,0x0
;/*	xor	$-0x80,al	; 80409A3D 
	DB 0x34,0x80
;/*	mov	rax,-0x10(rbp)	; 80409A3F 
	DB 0x48,0x89,0x45,0xF0
;/OP2@ L@ FFFFFF AND
;/*	mov	_OP2load+0x5 (%rip),rax	; 80409A43 
	DB 0x48,0x8B,0x5,0x61,0xC2,0xFF,0xFF
;/*	mov	(rax),eax	; 80409A4A 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80409A4C 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	mov	rax,-0x18(rbp)	; 80409A51 
	DB 0x48,0x89,0x45,0xE8
;/DUP	453948 XOR \ cmp     %rax,-0x10(%rbp)
;/*	xor	$0x453948,rax	; 80409A55 
	DB 0x48,0x35,0x48,0x39,0x45,0x0
;/*	mov	-0x18(rbp),rdx	; 80409A5B 
	DB 0x48,0x8B,0x55,0xE8
;/SWAP	053B48 XOR AND OR \ cmp     LASTsubHERE+0xd (%rip),%rax
;/*	mov	rax,-0x18(rbp)	; 80409A5F 
	DB 0x48,0x89,0x45,0xE8
;/*	mov	rdx,-0x20(rbp)	; 80409A63 
	DB 0x48,0x89,0x55,0xE0
;/*	mov	$0x53B48,eax	; 80409A67 
	DB 0xB8,0x48,0x3B,0x5,0x0
;/*	xor	-0x20(rbp),rax	; 80409A6C 
	DB 0x48,0x33,0x45,0xE0
;/*	and	-0x18(rbp),rax	; 80409A70 
	DB 0x48,0x23,0x45,0xE8
;/*	or	-0x10(rbp),rax	; 80409A74 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 80409A78 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ L@ FFFFFF AND c01948 XOR OR \ sbb	%rax,%rax
;/*	mov	_OP1load+0x5 (%rip),rax	; 80409A7C 
	DB 0x48,0x8B,0x5,0x1B,0xC2,0xFF,0xFF
;/*	mov	(rax),eax	; 80409A83 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80409A85 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xC01948,eax	; 80409A8A 
	DB 0x35,0x48,0x19,0xC0,0x0
;/*	or	-0x10(rbp),rax	; 80409A8F 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 80409A93 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ FFFFFF AND 458b48 XOR OR \ mov	-0x08(%rbp),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 80409A97 
	DB 0x48,0x8B,0x5,0xF3,0xC1,0xFF,0xFF
;/*	mov	(rax),eax	; 80409A9E 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80409AA0 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458B48,eax	; 80409AA5 
	DB 0x35,0x48,0x8B,0x45,0x0
;/*	or	-0x10(rbp),rax	; 80409AAA 
	DB 0x48,0xB,0x45,0xF0
;/*	sub	$0x01,rax	; 80409AAE 
	DB 0x48,0x83,0xE8,0x1
;/  0=
;/*	sbb	rax,rax	; 80409AB2 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80409AB5 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80409AB8 
	DB 0x48,0x8B,0x45,0xF8
;/ M_WL  M\ 2A DTST
;/*	jz	_OPTsubRULES+0x2310 	; 80409ABC 
	DB 0xF,0x84,0x4F,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80409AC2 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x2A,eax	; 80409AC6 
	DB 0xB8,0x2A,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409ACB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409ACF E8 83 C3 FF FF 
;/	OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 80409AD4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 80409AD8 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	lea	-0x08(rbp),rbp	; 80409ADD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 80409AE1 E8 C1 C7 FF FF 
;/	J_COD 7 XOR TO J_COD
;/*	mov	rax,-0x08(rbp)	; 80409AE6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_J_COD+0x5 (%rip),rax	; 80409AEA 
	DB 0x48,0x8B,0x5,0xF3,0xBF,0xFF,0xFF
;/*	xor	$0x7,rax	; 80409AF1 
	DB 0x48,0x35,0x7,0x0,0x0,0x0
;/*	mov	rax,_J_COD+0x5 (%rip)	; 80409AF7 
	DB 0x48,0x89,0x5,0xE6,0xBF,0xFF,0xFF
;/*	mov	$0x2B,eax	; 80409AFE 
	DB 0xB8,0x2B,0x0,0x0,0x0
;/	M\ 2B DTST
;/*	lea	-0x08(rbp),rbp	; 80409B03 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409B07 E8 4B C3 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80409B0C 
	DB 0xE9,0x4,0xDD,0xFF,0xFF
;/
;/OP2@ 3 + C@ OP1@ 3 + C@ XOR
;/*	mov	rax,-0x08(rbp)	; 80409B11 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 80409B15 
	DB 0x48,0x8B,0x5,0x8F,0xC1,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 80409B1C 
	DB 0xF,0xB6,0x40,0x3
;/*	mov	rax,-0x10(rbp)	; 80409B20 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP1load+0x5 (%rip),rax	; 80409B24 
	DB 0x48,0x8B,0x5,0x73,0xC1,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 80409B2B 
	DB 0xF,0xB6,0x40,0x3
;/*	xor	-0x10(rbp),rax	; 80409B2F 
	DB 0x48,0x33,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 80409B33 
	DB 0x48,0x89,0x45,0xF0
;/OP2@ @ FFFFFF AND 458948 XOR OR \ /*    mov     %rax,-0x08(%rbp)
;/*	mov	_OP2load+0x5 (%rip),rax	; 80409B37 
	DB 0x48,0x8B,0x5,0x6D,0xC1,0xFF,0xFF
;/*	mov	(rax),rax	; 80409B3E 
	DB 0x48,0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80409B41 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458948,eax	; 80409B46 
	DB 0x35,0x48,0x89,0x45,0x0
;/*	or	-0x10(rbp),rax	; 80409B4B 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 80409B4F 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ @ FFFFFF AND 7d8148 XOR OR \ /*    cmp     $X,-0x08(%rbp)
;/*	mov	_OP1load+0x5 (%rip),rax	; 80409B53 
	DB 0x48,0x8B,0x5,0x44,0xC1,0xFF,0xFF
;/*	mov	(rax),rax	; 80409B5A 
	DB 0x48,0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80409B5D 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x7D8148,eax	; 80409B62 
	DB 0x35,0x48,0x81,0x7D,0x0
;/*	or	-0x10(rbp),rax	; 80409B67 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 80409B6B 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ @ FFFFFF AND 458b48 XOR OR \ /*    mov     0x00(%rbp),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 80409B6F 
	DB 0x48,0x8B,0x5,0x1B,0xC1,0xFF,0xFF
;/*	mov	(rax),rax	; 80409B76 
	DB 0x48,0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80409B79 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458B48,eax	; 80409B7E 
	DB 0x35,0x48,0x8B,0x45,0x0
;/*	or	-0x10(rbp),rax	; 80409B83 
	DB 0x48,0xB,0x45,0xF0
;/*	sub	$0x01,rax	; 80409B87 
	DB 0x48,0x83,0xE8,0x1
;/  0=
;/*	sbb	rax,rax	; 80409B8B 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80409B8E 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80409B91 
	DB 0x48,0x8B,0x45,0xF8
;/ M_WL  M\ 7A DTST
;/*	jz	_OPTsubRULES+0x2413 	; 80409B95 
	DB 0xF,0x84,0x79,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80409B9B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x7A,eax	; 80409B9F 
	DB 0xB8,0x7A,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409BA4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409BA8 E8 AA C2 FF FF 
;/	OP1@ 4 + L@ OP1@ 2+ L!
;/*	mov	rax,-0x08(rbp)	; 80409BAD 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 80409BB1 
	DB 0x48,0x8B,0x5,0xE6,0xC0,0xFF,0xFF
;/*	mov	0x04(rax),eax	; 80409BB8 
	DB 0x8B,0x40,0x4
;/*	mov	rax,-0x10(rbp)	; 80409BBB 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP1load+0x5 (%rip),rax	; 80409BBF 
	DB 0x48,0x8B,0x5,0xD8,0xC0,0xFF,0xFF
;/*	lea	0x02(rax),rax	; 80409BC6 
	DB 0x48,0x8D,0x40,0x2
;/*	mov	-0x10(rbp),edx	; 80409BCA 
	DB 0x8B,0x55,0xF0
;/*	mov	edx,(rax)	; 80409BCD 
	DB 0x89,0x10
;/*	movq	$0x3D,-0x10(rbp)	; 80409BCF 
	DB 0x48,0xC7,0x45,0xF0,0x3D,0x0,0x0,0x0
;/	3D OP1@ 1+ C! \ cmp    $X,%rax 
;/*	mov	_OP1load+0x5 (%rip),rax	; 80409BD7 
	DB 0x48,0x8B,0x5,0xC0,0xC0,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 80409BDE 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),dl	; 80409BE2 
	DB 0x8A,0x55,0xF0
;/*	mov	dl,(rax)	; 80409BE5 
	DB 0x88,0x10
;/*	movq	$0x44C539,-0x10(rbp)	; 80409BE7 
	DB 0x48,0xC7,0x45,0xF0,0x39,0xC5,0x44,0x0
;/	OP1 6 OPsize!
;/*	mov	$0x6,eax	; 80409BEF 
	DB 0xB8,0x6,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 80409BF4 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPsizesave	; 80409BF8 E8 33 C6 FF FF 
;/	M\ 7B DTST
;/*	mov	rax,-0x08(rbp)	; 80409BFD 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x7B,eax	; 80409C01 
	DB 0xB8,0x7B,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409C06 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409C0A E8 48 C2 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80409C0F 
	DB 0xE9,0x1,0xDC,0xFF,0xFF
;/
;/J_COD 0x84 XOR
;/*	mov	rax,-0x08(rbp)	; 80409C14 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_J_COD+0x5 (%rip),rax	; 80409C18 
	DB 0x48,0x8B,0x5,0xC5,0xBE,0xFF,0xFF
;/*	xor	$0x84,rax	; 80409C1F 
	DB 0x48,0x35,0x84,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 80409C25 
	DB 0x48,0x89,0x45,0xF0
;/OP2@ W@ 3d48 XOR OR		\ cmp     $0x4,%rax
;/*	mov	_OP2load+0x5 (%rip),rax	; 80409C29 
	DB 0x48,0x8B,0x5,0x7B,0xC0,0xFF,0xFF
;/*	movzw	(rax),eax	; 80409C30 
	DB 0xF,0xB7,0x0
;/*	xor	$0x3D48,rax	; 80409C33 
	DB 0x48,0x35,0x48,0x3D,0x0,0x0
;/*	or	-0x10(rbp),rax	; 80409C39 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 80409C3D 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ @ FFFFFF AND c01948 XOR OR \ sbb     %rax,%rax
;/*	mov	_OP1load+0x5 (%rip),rax	; 80409C41 
	DB 0x48,0x8B,0x5,0x56,0xC0,0xFF,0xFF
;/*	mov	(rax),rax	; 80409C48 
	DB 0x48,0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80409C4B 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xC01948,eax	; 80409C50 
	DB 0x35,0x48,0x19,0xC0,0x0
;/*	or	-0x10(rbp),rax	; 80409C55 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 80409C59 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ @ FFFFFF AND 458b48 XOR OR \ mov     0x00(%rbp),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 80409C5D 
	DB 0x48,0x8B,0x5,0x2D,0xC0,0xFF,0xFF
;/*	mov	(rax),rax	; 80409C64 
	DB 0x48,0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80409C67 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458B48,eax	; 80409C6C 
	DB 0x35,0x48,0x8B,0x45,0x0
;/*	or	-0x10(rbp),rax	; 80409C71 
	DB 0x48,0xB,0x45,0xF0
;/*	sub	$0x01,rax	; 80409C75 
	DB 0x48,0x83,0xE8,0x1
;/  0=
;/*	sbb	rax,rax	; 80409C79 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80409C7C 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80409C7F 
	DB 0x48,0x8B,0x45,0xF8
;/ M_WL  M\ 7A DTST
;/*	jz	_OPTsubRULES+0x24CE 	; 80409C83 
	DB 0xF,0x84,0x46,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80409C89 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x7A,eax	; 80409C8D 
	DB 0xB8,0x7A,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409C92 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409C96 E8 BC C1 FF FF 
;/	83 TO J_COD
;/*	movq	$0x83,_J_COD+0x5 (%rip)	; 80409C9B 
	DB 0x48,0xC7,0x5,0x3E,0xBE,0xFF,0xFF,0x83,0x0,0x0,0x0
;/	OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 80409CA6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 80409CAA 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	lea	-0x08(rbp),rbp	; 80409CAF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 80409CB3 E8 EF C5 FF FF 
;/	M\ 7B DTST
;/*	mov	rax,-0x08(rbp)	; 80409CB8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x7B,eax	; 80409CBC 
	DB 0xB8,0x7B,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409CC1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409CC5 E8 8D C1 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80409CCA 
	DB 0xE9,0x46,0xDB,0xFF,0xFF
;/J_COD 0x84 XOR
;/*	mov	rax,-0x08(rbp)	; 80409CCF 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_J_COD+0x5 (%rip),rax	; 80409CD3 
	DB 0x48,0x8B,0x5,0xA,0xBE,0xFF,0xFF
;/*	xor	$0x84,rax	; 80409CDA 
	DB 0x48,0x35,0x84,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 80409CE0 
	DB 0x48,0x89,0x45,0xF0
;/OP2@ @ FFFFFF AND d8f748 XOR OR \            negq    %rax
;/*	mov	_OP2load+0x5 (%rip),rax	; 80409CE4 
	DB 0x48,0x8B,0x5,0xC0,0xBF,0xFF,0xFF
;/*	mov	(rax),rax	; 80409CEB 
	DB 0x48,0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80409CEE 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xD8F748,eax	; 80409CF3 
	DB 0x35,0x48,0xF7,0xD8,0x0
;/*	or	-0x10(rbp),rax	; 80409CF8 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 80409CFC 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ @ FFFFFF AND c01948 XOR OR \    sbb     %rax,%rax
;/*	mov	_OP1load+0x5 (%rip),rax	; 80409D00 
	DB 0x48,0x8B,0x5,0x97,0xBF,0xFF,0xFF
;/*	mov	(rax),rax	; 80409D07 
	DB 0x48,0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80409D0A 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xC01948,eax	; 80409D0F 
	DB 0x35,0x48,0x19,0xC0,0x0
;/*	or	-0x10(rbp),rax	; 80409D14 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 80409D18 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ @ FFFFFF AND 458b48 XOR OR \    mov     0x08(%rbp),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 80409D1C 
	DB 0x48,0x8B,0x5,0x6E,0xBF,0xFF,0xFF
;/*	mov	(rax),rax	; 80409D23 
	DB 0x48,0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80409D26 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458B48,eax	; 80409D2B 
	DB 0x35,0x48,0x8B,0x45,0x0
;/*	or	-0x10(rbp),rax	; 80409D30 
	DB 0x48,0xB,0x45,0xF0
;/*	sub	$0x01,rax	; 80409D34 
	DB 0x48,0x83,0xE8,0x1
;/  0=
;/*	sbb	rax,rax	; 80409D38 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80409D3B 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80409D3E 
	DB 0x48,0x8B,0x45,0xF8
;/ M_WL  M\ 7C DTST
;/*	jz	_OPTsubRULES+0x2594 	; 80409D42 
	DB 0xF,0x84,0x4D,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80409D48 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x7C,eax	; 80409D4C 
	DB 0xB8,0x7C,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409D51 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409D55 E8 FD C0 FF FF 
;/	OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 80409D5A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 80409D5E 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	lea	-0x08(rbp),rbp	; 80409D63 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 80409D67 E8 3B C5 FF FF 
;/	OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 80409D6C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 80409D70 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	lea	-0x08(rbp),rbp	; 80409D75 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 80409D79 E8 29 C5 FF FF 
;/	M\ 7D DTST
;/*	mov	rax,-0x08(rbp)	; 80409D7E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x7D,eax	; 80409D82 
	DB 0xB8,0x7D,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409D87 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409D8B E8 C7 C0 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80409D90 
	DB 0xE9,0x80,0xDA,0xFF,0xFF
;/
;/J_COD 0x84 XOR
;/*	mov	rax,-0x08(rbp)	; 80409D95 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_J_COD+0x5 (%rip),rax	; 80409D99 
	DB 0x48,0x8B,0x5,0x44,0xBD,0xFF,0xFF
;/*	xor	$0x84,rax	; 80409DA0 
	DB 0x48,0x35,0x84,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 80409DA6 
	DB 0x48,0x89,0x45,0xF0
;/OP2@ 3 + C@ OP0@ 3 + C@ XOR OR
;/*	mov	_OP2load+0x5 (%rip),rax	; 80409DAA 
	DB 0x48,0x8B,0x5,0xFA,0xBE,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 80409DB1 
	DB 0xF,0xB6,0x40,0x3
;/*	mov	rax,-0x18(rbp)	; 80409DB5 
	DB 0x48,0x89,0x45,0xE8
;/*	mov	_OP0load+0x5 (%rip),rax	; 80409DB9 
	DB 0x48,0x8B,0x5,0xD1,0xBE,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 80409DC0 
	DB 0xF,0xB6,0x40,0x3
;/*	xor	-0x18(rbp),rax	; 80409DC4 
	DB 0x48,0x33,0x45,0xE8
;/*	or	-0x10(rbp),rax	; 80409DC8 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 80409DCC 
	DB 0x48,0x89,0x45,0xF0
;/OP2@ @ FFFFFF AND 458948 XOR OR \ /*    mov     %rax,-0x08(%rbp)
;/*	mov	_OP2load+0x5 (%rip),rax	; 80409DD0 
	DB 0x48,0x8B,0x5,0xD4,0xBE,0xFF,0xFF
;/*	mov	(rax),rax	; 80409DD7 
	DB 0x48,0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80409DDA 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458948,eax	; 80409DDF 
	DB 0x35,0x48,0x89,0x45,0x0
;/*	or	-0x10(rbp),rax	; 80409DE4 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 80409DE8 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ L@		3FF8C148 XOR OR	\ /*    sar     $0x3F,%rax 
;/*	mov	_OP1load+0x5 (%rip),rax	; 80409DEC 
	DB 0x48,0x8B,0x5,0xAB,0xBE,0xFF,0xFF
;/*	mov	(rax),eax	; 80409DF3 
	DB 0x8B,0x0
;/*	xor	$0x3FF8C148,rax	; 80409DF5 
	DB 0x48,0x35,0x48,0xC1,0xF8,0x3F
;/*	or	-0x10(rbp),rax	; 80409DFB 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 80409DFF 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ @ FFFFFF AND 458b48 XOR OR \ /*    mov     -0x08(%rbp),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 80409E03 
	DB 0x48,0x8B,0x5,0x87,0xBE,0xFF,0xFF
;/*	mov	(rax),rax	; 80409E0A 
	DB 0x48,0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80409E0D 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458B48,eax	; 80409E12 
	DB 0x35,0x48,0x8B,0x45,0x0
;/*	or	-0x10(rbp),rax	; 80409E17 
	DB 0x48,0xB,0x45,0xF0
;/*	sub	$0x01,rax	; 80409E1B 
	DB 0x48,0x83,0xE8,0x1
;/0=	M_WL  M\ 88 DTST
;/*	sbb	rax,rax	; 80409E1F 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80409E22 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 80409E25 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_OPTsubRULES+0x2695 	; 80409E29 
	DB 0xF,0x84,0x67,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80409E2F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x88,eax	; 80409E33 
	DB 0xB8,0x88,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409E38 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409E3C E8 16 C0 FF FF 
;/	C085 OP1@ 1+ W! \ test    %rax,%rax
;/*	mov	rax,-0x08(rbp)	; 80409E41 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0xC085,-0x10(rbp)	; 80409E45 
	DB 0x48,0xC7,0x45,0xF0,0x85,0xC0,0x0,0x0
;/*	mov	_OP1load+0x5 (%rip),rax	; 80409E4D 
	DB 0x48,0x8B,0x5,0x4A,0xBE,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 80409E54 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),edx	; 80409E58 
	DB 0x8B,0x55,0xF0
;/*	mov	dx,(rax)	; 80409E5B 
	DB 0x66,0x89,0x10
;/*	movq	$0x8D,_J_COD+0x5 (%rip)	; 80409E5E 
	DB 0x48,0xC7,0x5,0x7B,0xBC,0xFF,0xFF,0x8D,0x0,0x0,0x0
;/	8D TO J_COD \  jge
;/*	mov	$0x44C539,eax	; 80409E69 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/	OP1 ToOP0
;/*	lea	-0x08(rbp),rbp	; 80409E6E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 80409E72 E8 4 BF FF FF 
;/	-5 ALLOT
;/*	add	$-0x05,_HsubSTDOUT+0x18 (%rip)	; 80409E77 
	DB 0x48,0x83,0x5,0x9D,0xAD,0xFF,0xFF,0xFB
;/	M\ 89 DTST
;/*	mov	rax,-0x08(rbp)	; 80409E7F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x89,eax	; 80409E83 
	DB 0xB8,0x89,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409E88 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409E8C E8 C6 BF FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80409E91 
	DB 0xE9,0x7F,0xD9,0xFF,0xFF
;/
;/
;/J_COD F0 AND 80 XOR
;/*	mov	rax,-0x08(rbp)	; 80409E96 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_J_COD+0x5 (%rip),rax	; 80409E9A 
	DB 0x48,0x8B,0x5,0x43,0xBC,0xFF,0xFF
;/*	and	$0xF0,eax	; 80409EA1 
	DB 0x25,0xF0,0x0,0x0,0x0
;/*	xor	$-0x80,al	; 80409EA6 
	DB 0x34,0x80
;/*	mov	rax,-0x10(rbp)	; 80409EA8 
	DB 0x48,0x89,0x45,0xF0
;/OP2@ L@ FFFCFF AND C09C0F XOR OR \ set<gl>   %al
;/*	mov	_OP2load+0x5 (%rip),rax	; 80409EAC 
	DB 0x48,0x8B,0x5,0xF8,0xBD,0xFF,0xFF
;/*	mov	(rax),eax	; 80409EB3 
	DB 0x8B,0x0
;/*	and	$0xFFFCFF,eax	; 80409EB5 
	DB 0x25,0xFF,0xFC,0xFF,0x0
;/*	xor	$0xC09C0F,eax	; 80409EBA 
	DB 0x35,0xF,0x9C,0xC0,0x0
;/*	or	-0x10(rbp),rax	; 80409EBF 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 80409EC3 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ W@ D8F6 XOR OR	\ neg	%al
;/*	mov	_OP1load+0x5 (%rip),rax	; 80409EC7 
	DB 0x48,0x8B,0x5,0xD0,0xBD,0xFF,0xFF
;/*	movzw	(rax),eax	; 80409ECE 
	DB 0xF,0xB7,0x0
;/*	xor	$0xD8F6,rax	; 80409ED1 
	DB 0x48,0x35,0xF6,0xD8,0x0,0x0
;/*	or	-0x10(rbp),rax	; 80409ED7 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 80409EDB 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ NEWRAX0+ OR
;/*	mov	_OP0load+0x5 (%rip),rax	; 80409EDF 
	DB 0x48,0x8B,0x5,0xAB,0xBD,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 80409EE6 
	DB 0x48,0x8D,0x6D,0xF0
	call	_NEWRAX0add	; 80409EEA E8 3A CE FF FF 
;/*	or	0x00(rbp),rax	; 80409EEF 
	DB 0x48,0xB,0x45,0x0
;/*	sub	$0x01,rax	; 80409EF3 
	DB 0x48,0x83,0xE8,0x1
;/0=	M_WL M\ 76 DTST
;/*	sbb	rax,rax	; 80409EF7 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80409EFA 48 85 C0 
;/*	mov	0x08(rbp),rax	; 80409EFD 
	DB 0x48,0x8B,0x45,0x8
;/*	lea	0x10(rbp),rbp	; 80409F01 
	DB 0x48,0x8D,0x6D,0x10
;/*	jz	_OPTsubRULES+0x2776 	; 80409F05 
	DB 0xF,0x84,0x6C,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80409F0B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x76,eax	; 80409F0F 
	DB 0xB8,0x76,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409F14 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409F18 E8 3A BF FF FF 
;/	OP2@ 1+ C@ 95 XOR
;/*	mov	rax,-0x08(rbp)	; 80409F1D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 80409F21 
	DB 0x48,0x8B,0x5,0x83,0xBD,0xFF,0xFF
;/*	movzb	0x01(rax),eax	; 80409F28 
	DB 0xF,0xB6,0x40,0x1
;/*	xor	$0x95,rax	; 80409F2C 
	DB 0x48,0x35,0x95,0x0,0x0,0x0
;/*	xor	_J_COD+0x5 (%rip),rax	; 80409F32 
	DB 0x48,0x33,0x5,0xAB,0xBB,0xFF,0xFF
;/	J_COD XOR TO J_COD
;/*	mov	rax,_J_COD+0x5 (%rip)	; 80409F39 
	DB 0x48,0x89,0x5,0xA4,0xBB,0xFF,0xFF
;/*	mov	$0x44C539,eax	; 80409F40 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/	OP1 OPexcise
;/*	lea	-0x08(rbp),rbp	; 80409F45 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 80409F49 E8 59 C3 FF FF 
;/	OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 80409F4E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 80409F52 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	lea	-0x08(rbp),rbp	; 80409F57 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 80409F5B E8 47 C3 FF FF 
;/	M\ 74 DTST
;/*	mov	rax,-0x08(rbp)	; 80409F60 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x74,eax	; 80409F64 
	DB 0xB8,0x74,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 80409F69 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 80409F6D E8 E5 BE FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 80409F72 
	DB 0xE9,0x9E,0xD8,0xFF,0xFF
;/
;/J_COD F0 AND 80 XOR
;/*	mov	rax,-0x08(rbp)	; 80409F77 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_J_COD+0x5 (%rip),rax	; 80409F7B 
	DB 0x48,0x8B,0x5,0x62,0xBB,0xFF,0xFF
;/*	and	$0xF0,eax	; 80409F82 
	DB 0x25,0xF0,0x0,0x0,0x0
;/*	xor	$-0x80,al	; 80409F87 
	DB 0x34,0x80
;/*	mov	rax,-0x10(rbp)	; 80409F89 
	DB 0x48,0x89,0x45,0xF0
;/OP2@ @ 80000000FF AND B8 XOR OR \ movq	$0x30,%rax
;/*	mov	_OP2load+0x5 (%rip),rax	; 80409F8D 
	DB 0x48,0x8B,0x5,0x17,0xBD,0xFF,0xFF
;/*	mov	(rax),rax	; 80409F94 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x18(rbp)	; 80409F97 
	DB 0x48,0x89,0x45,0xE8
;/*	movabs	$0x80000000FF,%rax	; 80409F9B 
	DB 0x48,0xB8,0xFF,0x0,0x0,0x0,0x80,0x0,0x0,0x0
;/*	and	-0x18(rbp),rax	; 80409FA5 
	DB 0x48,0x23,0x45,0xE8
;/*	xor	$0xB8,rax	; 80409FA9 
	DB 0x48,0x35,0xB8,0x0,0x0,0x0
;/*	or	-0x10(rbp),rax	; 80409FAF 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 80409FB3 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ L@ FFFFFF AND 453B48 XOR OR \ cmp	-0x08(%rbp),%rax
;/*	mov	_OP1load+0x5 (%rip),rax	; 80409FB7 
	DB 0x48,0x8B,0x5,0xE0,0xBC,0xFF,0xFF
;/*	mov	(rax),eax	; 80409FBE 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 80409FC0 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x453B48,eax	; 80409FC5 
	DB 0x35,0x48,0x3B,0x45,0x0
;/*	or	-0x10(rbp),rax	; 80409FCA 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 80409FCE 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ NEWRAX0+ OR
;/*	mov	_OP0load+0x5 (%rip),rax	; 80409FD2 
	DB 0x48,0x8B,0x5,0xB8,0xBC,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 80409FD9 
	DB 0x48,0x8D,0x6D,0xF0
	call	_NEWRAX0add	; 80409FDD E8 47 CD FF FF 
;/*	or	0x00(rbp),rax	; 80409FE2 
	DB 0x48,0xB,0x45,0x0
;/*	sub	$0x01,rax	; 80409FE6 
	DB 0x48,0x83,0xE8,0x1
;/0= \  MO_TST_VAL and
;/*	sbb	rax,rax	; 80409FEA 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 80409FED 48 85 C0 
;/*	mov	0x08(rbp),rax	; 80409FF0 
	DB 0x48,0x8B,0x45,0x8
;/	M_WL M\ 78 DTST
;/*	lea	0x10(rbp),rbp	; 80409FF4 
	DB 0x48,0x8D,0x6D,0x10
;/*	jz	_OPTsubRULES+0x28D0 	; 80409FF8 
	DB 0xF,0x84,0xD3,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 80409FFE 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x78,eax	; 8040A002 
	DB 0xB8,0x78,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A007 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A00B E8 47 BE FF FF 
;/\	jae<>jbe jle<>jge
;/	J_COD DUP 8 AND IF 3 ELSE 5 THEN XOR TO J_COD
;/*	mov	rax,-0x08(rbp)	; 8040A010 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_J_COD+0x5 (%rip),rax	; 8040A014 
	DB 0x48,0x8B,0x5,0xC9,0xBA,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 8040A01B 
	DB 0x48,0x89,0x45,0xF0
;/*	and	$0x8,eax	; 8040A01F 
	DB 0x25,0x8,0x0,0x0,0x0
	test	rax,rax	; 8040A024 48 85 C0 
;/*	mov	-0x10(rbp),rax	; 8040A027 
	DB 0x48,0x8B,0x45,0xF0
;/*	lea	-0x08(rbp),rbp	; 8040A02B 
	DB 0x48,0x8D,0x6D,0xF8
;/*	jz	_OPTsubRULES+0x2846 	; 8040A02F 
	DB 0xF,0x84,0x12,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040A035 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x3,eax	; 8040A039 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A03E 
	DB 0x48,0x8D,0x6D,0xF8
;/*	jmp	_OPTsubRULES+0x2853 	; 8040A042 
	DB 0xE9,0xD,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040A047 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x5,eax	; 8040A04B 
	DB 0xB8,0x5,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A050 
	DB 0x48,0x8D,0x6D,0xF8
;/*	xor	0x00(rbp),rax	; 8040A054 
	DB 0x48,0x33,0x45,0x0
;/*	mov	rax,_J_COD+0x5 (%rip)	; 8040A058 
	DB 0x48,0x89,0x5,0x85,0xBA,0xFF,0xFF
;/*	movq	$0x7D81,0x00(rbp)	; 8040A05F 
	DB 0x48,0xC7,0x45,0x0,0x81,0x7D,0x0,0x0
;/
;/	7d81 OP1@ 1+ W! 
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040A067 
	DB 0x48,0x8B,0x5,0x30,0xBC,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 8040A06E 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	0x00(rbp),edx	; 8040A072 
	DB 0x8B,0x55,0x0
;/*	mov	dx,(rax)	; 8040A075 
	DB 0x66,0x89,0x10
;/*	movq	$0x44C539,0x00(rbp)	; 8040A078 
	DB 0x48,0xC7,0x45,0x0,0x39,0xC5,0x44,0x0
;/	OP1 8 OPsize!
;/*	mov	$0x8,eax	; 8040A080 
	DB 0xB8,0x8,0x0,0x0,0x0
	call	_OPsizesave	; 8040A085 E8 A6 C1 FF FF 
;/	OP2@ 1+ L@ OP1@ 4 + L!
;/*	mov	rax,-0x08(rbp)	; 8040A08A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040A08E 
	DB 0x48,0x8B,0x5,0x16,0xBC,0xFF,0xFF
;/*	mov	0x01(rax),eax	; 8040A095 
	DB 0x8B,0x40,0x1
;/*	mov	rax,-0x10(rbp)	; 8040A098 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040A09C 
	DB 0x48,0x8B,0x5,0xFB,0xBB,0xFF,0xFF
;/*	lea	0x04(rax),rax	; 8040A0A3 
	DB 0x48,0x8D,0x40,0x4
;/*	mov	-0x10(rbp),edx	; 8040A0A7 
	DB 0x8B,0x55,0xF0
;/*	mov	edx,(rax)	; 8040A0AA 
	DB 0x89,0x10
;/*	mov	$0x44C541,eax	; 8040A0AC 
	DB 0xB8,0x41,0xC5,0x44,0x0
;/	OP2 OPexcise
;/*	lea	-0x08(rbp),rbp	; 8040A0B1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040A0B5 E8 ED C1 FF FF 
;/	M\ 74 DTST
;/*	mov	rax,-0x08(rbp)	; 8040A0BA 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x74,eax	; 8040A0BE 
	DB 0xB8,0x74,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A0C3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A0C7 E8 8B BD FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040A0CC 
	DB 0xE9,0x44,0xD7,0xFF,0xFF
;/
;/OP2@ L@ FFFFFF AND c0c748 XOR		\ movq	$0x8,%rax
;/*	mov	rax,-0x08(rbp)	; 8040A0D1 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040A0D5 
	DB 0x48,0x8B,0x5,0xCF,0xBB,0xFF,0xFF
;/*	mov	(rax),eax	; 8040A0DC 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040A0DE 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xC0C748,eax	; 8040A0E3 
	DB 0x35,0x48,0xC7,0xC0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040A0E8 
	DB 0x48,0x89,0x45,0xF0
;/OP2@ @ 	80000000FF AND B8 <> AND	\ movq	$0x8,%rax
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040A0EC 
	DB 0x48,0x8B,0x5,0xB8,0xBB,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A0F3 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x18(rbp)	; 8040A0F6 
	DB 0x48,0x89,0x45,0xE8
;/*	movabs	$0x80000000FF,%rax	; 8040A0FA 
	DB 0x48,0xB8,0xFF,0x0,0x0,0x0,0x80,0x0,0x0,0x0
;/*	and	-0x18(rbp),rax	; 8040A104 
	DB 0x48,0x23,0x45,0xE8
;/*	xor	$0xB8,rax	; 8040A108 
	DB 0x48,0x35,0xB8,0x0,0x0,0x0
;/*		negq	rax	; 8040A10E 
	DB 0x48,0xF7,0xD8
;/*	sbb	rax,rax	; 8040A111 
	DB 0x48,0x19,0xC0
;/*	and	-0x10(rbp),rax	; 8040A114 
	DB 0x48,0x23,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040A118 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ L@ FFFFFF AND 50148 XOR OR		\ add	%rax,X (%rip)
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040A11C 
	DB 0x48,0x8B,0x5,0x7B,0xBB,0xFF,0xFF
;/*	mov	(rax),eax	; 8040A123 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040A125 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x50148,eax	; 8040A12A 
	DB 0x35,0x48,0x1,0x5,0x0
;/*	or	-0x10(rbp),rax	; 8040A12F 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040A133 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ FFFFFF AND 458b48 XOR OR	\ mov	Y(%rbp),%rax # 80404edf
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040A137 
	DB 0x48,0x8B,0x5,0x53,0xBB,0xFF,0xFF
;/*	mov	(rax),eax	; 8040A13E 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040A140 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458B48,eax	; 8040A145 
	DB 0x35,0x48,0x8B,0x45,0x0
;/*	or	-0x10(rbp),rax	; 8040A14A 
	DB 0x48,0xB,0x45,0xF0
;/*	sub	$0x01,rax	; 8040A14E 
	DB 0x48,0x83,0xE8,0x1
;/0=	M_WL  M\ 42 DTST
;/*	sbb	rax,rax	; 8040A152 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040A155 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040A158 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_OPTsubRULES+0x2AE9 	; 8040A15C 
	DB 0xF,0x84,0x88,0x1,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040A162 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x42,eax	; 8040A166 
	DB 0xB8,0x42,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A16B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A16F E8 E3 BC FF FF 
;/	OP2@ C@ B8 XOR
;/*	mov	rax,-0x08(rbp)	; 8040A174 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040A178 
	DB 0x48,0x8B,0x5,0x2C,0xBB,0xFF,0xFF
;/*	movzb	(rax),eax	; 8040A17F 
	DB 0xF,0xB6,0x0
;/*	xor	$-0x48,al	; 8040A182 
	DB 0x34,0xB8
	test	rax,rax	; 8040A184 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040A187 
	DB 0x48,0x8B,0x45,0xF8
;/	IF	OP2@ 3+ SL@
;/*	jz	_OPTsubRULES+0x29AD 	; 8040A18B 
	DB 0xF,0x84,0x1D,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040A191 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040A195 
	DB 0x48,0x8B,0x5,0xF,0xBB,0xFF,0xFF
;/*	lea	0x03(rax),rax	; 8040A19C 
	DB 0x48,0x8D,0x40,0x3
;/*	lea	-0x08(rbp),rbp	; 8040A1A0 
	DB 0x48,0x8D,0x6D,0xF8
	call	_SLload	; 8040A1A4 E8 18 A0 FF FF 
;/	ELSE	OP2@ 1+ L@
;/*	jmp	_OPTsubRULES+0x29BF 	; 8040A1A9 
	DB 0xE9,0x12,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040A1AE 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040A1B2 
	DB 0x48,0x8B,0x5,0xF2,0xBA,0xFF,0xFF
;/*	mov	0x01(rax),eax	; 8040A1B9 
	DB 0x8B,0x40,0x1
;/*	lea	-0x08(rbp),rbp	; 8040A1BC 
	DB 0x48,0x8D,0x6D,0xF8
;/	THEN
;/	DUP SHORT? \ 0 AND
;/*	mov	rax,-0x08(rbp)	; 8040A1C0 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	-0x08(rbp),rbp	; 8040A1C4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_SHORTque	; 8040A1C8 E8 63 B8 FF FF 
;/	IF	OP1 8 OPsize!
	test	rax,rax	; 8040A1CD 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040A1D0 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040A1D4 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x2A51 	; 8040A1D8 
	DB 0xF,0x84,0x74,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040A1DE 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x44C539,-0x10(rbp)	; 8040A1E2 
	DB 0x48,0xC7,0x45,0xF0,0x39,0xC5,0x44,0x0
;/*	mov	$0x8,eax	; 8040A1EA 
	DB 0xB8,0x8,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040A1EF 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPsizesave	; 8040A1F3 E8 38 C0 FF FF 
;/		-1  OP1@ 3+ L+!
;/*	mov	rax,-0x08(rbp)	; 8040A1F8 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x1,-0x10(rbp)	; 8040A1FC 
	DB 0x48,0xC7,0x45,0xF0,0xFF,0xFF,0xFF,0xFF
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040A204 
	DB 0x48,0x8B,0x5,0x93,0xBA,0xFF,0xFF
;/*	lea	0x03(rax),rax	; 8040A20B 
	DB 0x48,0x8D,0x40,0x3
;/*	mov	-0x10(rbp),rdx	; 8040A20F 
	DB 0x48,0x8B,0x55,0xF0
;/*	add	edx,(rax)	; 8040A213 
	DB 0x1,0x10
;/*	movq	$0x82,-0x10(rbp)	; 8040A215 
	DB 0x48,0xC7,0x45,0xF0,0x82,0x0,0x0,0x0
;/		82 OP1@ 1+ XOR!	\ addq   $X,Y(%rip)
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040A21D 
	DB 0x48,0x8B,0x5,0x7A,0xBA,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 8040A224 
	DB 0x48,0x8D,0x40,0x1
;/*	lea	-0x10(rbp),rbp	; 8040A228 
	DB 0x48,0x8D,0x6D,0xF0
	call	_XORsave	; 8040A22C E8 2C A0 FF FF 
;/		OP1@ 7 + C!
;/*	mov	rax,-0x08(rbp)	; 8040A231 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040A235 
	DB 0x48,0x8B,0x5,0x62,0xBA,0xFF,0xFF
;/*	lea	0x07(rax),rax	; 8040A23C 
	DB 0x48,0x8D,0x40,0x7
;/*	mov	-0x08(rbp),dl	; 8040A240 
	DB 0x8A,0x55,0xF8
;/*	mov	dl,(rax)	; 8040A243 
	DB 0x88,0x10
;/*	mov	0x00(rbp),rax	; 8040A245 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040A249 
	DB 0x48,0x8D,0x6D,0x8
;/	ELSE	OP1 B OPsize!
;/*	jmp	_OPTsubRULES+0x2AC0 	; 8040A24D 
	DB 0xE9,0x6F,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040A252 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x44C539,-0x10(rbp)	; 8040A256 
	DB 0x48,0xC7,0x45,0xF0,0x39,0xC5,0x44,0x0
;/*	mov	$0xB,eax	; 8040A25E 
	DB 0xB8,0xB,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040A263 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPsizesave	; 8040A267 E8 C4 BF FF FF 
;/		-4  OP1@ 3+ L+!
;/*	mov	rax,-0x08(rbp)	; 8040A26C 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x4,-0x10(rbp)	; 8040A270 
	DB 0x48,0xC7,0x45,0xF0,0xFC,0xFF,0xFF,0xFF
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040A278 
	DB 0x48,0x8B,0x5,0x1F,0xBA,0xFF,0xFF
;/*	lea	0x03(rax),rax	; 8040A27F 
	DB 0x48,0x8D,0x40,0x3
;/*	mov	-0x10(rbp),rdx	; 8040A283 
	DB 0x48,0x8B,0x55,0xF0
;/*	add	edx,(rax)	; 8040A287 
	DB 0x1,0x10
;/*	movq	$0x80,-0x10(rbp)	; 8040A289 
	DB 0x48,0xC7,0x45,0xF0,0x80,0x0,0x0,0x0
;/		80 OP1@ 1+ XOR!	\ addq   $X,Y(%rip)
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040A291 
	DB 0x48,0x8B,0x5,0x6,0xBA,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 8040A298 
	DB 0x48,0x8D,0x40,0x1
;/*	lea	-0x10(rbp),rbp	; 8040A29C 
	DB 0x48,0x8D,0x6D,0xF0
	call	_XORsave	; 8040A2A0 E8 B8 9F FF FF 
;/		OP1@ 7 + L!
;/*	mov	rax,-0x08(rbp)	; 8040A2A5 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040A2A9 
	DB 0x48,0x8B,0x5,0xEE,0xB9,0xFF,0xFF
;/*	lea	0x07(rax),rax	; 8040A2B0 
	DB 0x48,0x8D,0x40,0x7
;/*	mov	-0x08(rbp),edx	; 8040A2B4 
	DB 0x8B,0x55,0xF8
;/*	mov	edx,(rax)	; 8040A2B7 
	DB 0x89,0x10
;/*	mov	0x00(rbp),rax	; 8040A2B9 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040A2BD 
	DB 0x48,0x8D,0x6D,0x8
;/	THEN
;/	OP2 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040A2C1 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C541,eax	; 8040A2C5 
	DB 0xB8,0x41,0xC5,0x44,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A2CA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040A2CE E8 D4 BF FF FF 
;/	M\ 43 DTST
;/*	mov	rax,-0x08(rbp)	; 8040A2D3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x43,eax	; 8040A2D7 
	DB 0xB8,0x43,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A2DC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A2E0 E8 72 BB FF FF 
;/	REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040A2E5 
	DB 0xE9,0x2B,0xD5,0xFF,0xFF
;/
;/OP2@  @ FFFFFFFFFF AND FF25 XOR \ and	$0xFF,%eax
;/*	mov	rax,-0x08(rbp)	; 8040A2EA 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040A2EE 
	DB 0x48,0x8B,0x5,0xB6,0xB9,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A2F5 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040A2F8 
	DB 0x48,0x89,0x45,0xF0
;/*	movabs	$0xFFFFFFFFFF,%rax	; 8040A2FC 
	DB 0x48,0xB8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0,0x0,0x0
;/*	and	-0x10(rbp),rax	; 8040A306 
	DB 0x48,0x23,0x45,0xF0
;/*	xor	$0xFF25,rax	; 8040A30A 
	DB 0x48,0x35,0x25,0xFF,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040A310 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ C@ 3C XOR OR   \ cmp $0x48,%al|eax
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040A314 
	DB 0x48,0x8B,0x5,0x83,0xB9,0xFF,0xFF
;/*	movzb	(rax),eax	; 8040A31B 
	DB 0xF,0xB6,0x0
;/*	xor	$0x3C,al	; 8040A31E 
	DB 0x34,0x3C
;/*	or	-0x10(rbp),rax	; 8040A320 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040A324 
	DB 0x48,0x89,0x45,0xF0
;/
;/OP2@ C@ B8 XOR \ mov     $0x3,%eax
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040A328 
	DB 0x48,0x8B,0x5,0x7C,0xB9,0xFF,0xFF
;/*	movzb	(rax),eax	; 8040A32F 
	DB 0xF,0xB6,0x0
;/*	xor	$-0x48,al	; 8040A332 
	DB 0x34,0xB8
;/*	mov	rax,-0x18(rbp)	; 8040A334 
	DB 0x48,0x89,0x45,0xE8
;/OP1@ C@ B1 XOR OR   \ mov     $0x03,%cl
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040A338 
	DB 0x48,0x8B,0x5,0x5F,0xB9,0xFF,0xFF
;/*	movzb	(rax),eax	; 8040A33F 
	DB 0xF,0xB6,0x0
;/*	xor	$-0x4F,al	; 8040A342 
	DB 0x34,0xB1
;/*	or	-0x18(rbp),rax	; 8040A344 
	DB 0x48,0xB,0x45,0xE8
;/*		negq	rax	; 8040A348 
	DB 0x48,0xF7,0xD8
;/*	sbb	rax,rax	; 8040A34B 
	DB 0x48,0x19,0xC0
;/0<> AND
;/*	and	-0x10(rbp),rax	; 8040A34E 
	DB 0x48,0x23,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040A352 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ FFFFFF AND 458b48 XOR OR \ mov     -0x08(%rbp),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040A356 
	DB 0x48,0x8B,0x5,0x34,0xB9,0xFF,0xFF
;/*	mov	(rax),eax	; 8040A35D 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040A35F 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458B48,eax	; 8040A364 
	DB 0x35,0x48,0x8B,0x45,0x0
;/*	or	-0x10(rbp),rax	; 8040A369 
	DB 0x48,0xB,0x45,0xF0
;/*	sub	$0x01,rax	; 8040A36D 
	DB 0x48,0x83,0xE8,0x1
;/0= M_WL	M\ 56 DTST
;/*	sbb	rax,rax	; 8040A371 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040A374 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040A377 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_OPTsubRULES+0x2BBB 	; 8040A37B 
	DB 0xF,0x84,0x3B,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040A381 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x56,eax	; 8040A385 
	DB 0xB8,0x56,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A38A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A38E E8 C4 BA FF FF 
;/ OP2 OPexcise	
;/*	mov	rax,-0x08(rbp)	; 8040A393 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C541,eax	; 8040A397 
	DB 0xB8,0x41,0xC5,0x44,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A39C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040A3A0 E8 2 BF FF FF 
;/	M\ 57 DTST
;/*	mov	rax,-0x08(rbp)	; 8040A3A5 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x57,eax	; 8040A3A9 
	DB 0xB8,0x57,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A3AE 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A3B2 E8 A0 BA FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040A3B7 
	DB 0xE9,0x59,0xD4,0xFF,0xFF
;/
;/\ START BLOCK
;/OP2@ 3 + C@  OP0@ 3 + C@ XOR
;/*	mov	rax,-0x08(rbp)	; 8040A3BC 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040A3C0 
	DB 0x48,0x8B,0x5,0xE4,0xB8,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 8040A3C7 
	DB 0xF,0xB6,0x40,0x3
;/*	mov	rax,-0x10(rbp)	; 8040A3CB 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040A3CF 
	DB 0x48,0x8B,0x5,0xBB,0xB8,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 8040A3D6 
	DB 0xF,0xB6,0x40,0x3
;/*	xor	-0x10(rbp),rax	; 8040A3DA 
	DB 0x48,0x33,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040A3DE 
	DB 0x48,0x89,0x45,0xF0
;/OP2@ L@ FFFFFF AND 458948 XOR OR	\ mov	%rax,-0x10(%rbp)
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040A3E2 
	DB 0x48,0x8B,0x5,0xC2,0xB8,0xFF,0xFF
;/*	mov	(rax),eax	; 8040A3E9 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040A3EB 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458948,eax	; 8040A3F0 
	DB 0x35,0x48,0x89,0x45,0x0
;/*	or	-0x10(rbp),rax	; 8040A3F5 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040A3F9 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ FFFFFF AND 558b48 XOR OR \ mov   -0x10(%rbp),%rdx
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040A3FD 
	DB 0x48,0x8B,0x5,0x8D,0xB8,0xFF,0xFF
;/*	mov	(rax),eax	; 8040A404 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040A406 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x558B48,eax	; 8040A40B 
	DB 0x35,0x48,0x8B,0x55,0x0
;/*	or	-0x10(rbp),rax	; 8040A410 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040A414 
	DB 0x48,0x89,0x45,0xF0
;/
;/
;/DUP   \  BLOCK			\ mov	%rax,-0x10(%rbp)
;/*	mov	rax,-0x18(rbp)	; 8040A418 
	DB 0x48,0x89,0x45,0xE8
;/OP1@ L@	FFFFFF AND 058b48 XOR OR	\ mov     X(%rip),%rax
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040A41C 
	DB 0x48,0x8B,0x5,0x7B,0xB8,0xFF,0xFF
;/*	mov	(rax),eax	; 8040A423 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040A425 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x58B48,eax	; 8040A42A 
	DB 0x35,0x48,0x8B,0x5,0x0
;/*	or	-0x18(rbp),rax	; 8040A42F 
	DB 0x48,0xB,0x45,0xE8
;/*	sub	$0x01,rax	; 8040A433 
	DB 0x48,0x83,0xE8,0x1
;/0=	M_WL	DROP		\ mov   -0x10(%rbp),%rdx
;/*	sbb	rax,rax	; 8040A437 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040A43A 48 85 C0 
;/*	mov	-0x10(rbp),rax	; 8040A43D 
	DB 0x48,0x8B,0x45,0xF0
;/*	lea	-0x08(rbp),rbp	; 8040A441 
	DB 0x48,0x8D,0x6D,0xF8
;/*	jz	_OPTsubRULES+0x2CA3 	; 8040A445 
	DB 0xF,0x84,0x59,0x0,0x0,0x0
;/*	mov	$0x40,eax	; 8040A44B 
	DB 0xB8,0x40,0x0,0x0,0x0
	call	_DTST	; 8040A450 E8 2 BA FF FF 
;/	M\ 40 DTST
;/	15 OP1@ 2+ C!   \ mov     X(%rip),%rdx
;/*	mov	rax,-0x08(rbp)	; 8040A455 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x15,-0x10(rbp)	; 8040A459 
	DB 0x48,0xC7,0x45,0xF0,0x15,0x0,0x0,0x0
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040A461 
	DB 0x48,0x8B,0x5,0x36,0xB8,0xFF,0xFF
;/*	lea	0x02(rax),rax	; 8040A468 
	DB 0x48,0x8D,0x40,0x2
;/*	mov	-0x10(rbp),dl	; 8040A46C 
	DB 0x8A,0x55,0xF0
;/*	mov	dl,(rax)	; 8040A46F 
	DB 0x88,0x10
;/*	movq	$0x92,-0x10(rbp)	; 8040A471 
	DB 0x48,0xC7,0x45,0xF0,0x92,0x0,0x0,0x0
;/	92  OP0@ 1+ C!	\ xchg   %rax,%rdx
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040A479 
	DB 0x48,0x8B,0x5,0x11,0xB8,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 8040A480 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),dl	; 8040A484 
	DB 0x8A,0x55,0xF0
;/*	mov	dl,(rax)	; 8040A487 
	DB 0x88,0x10
;/*	add	$-0x02,_HsubSTDOUT+0x18 (%rip)	; 8040A489 
	DB 0x48,0x83,0x5,0x8B,0xA7,0xFF,0xFF,0xFE
;/	-2 ALLOT
;/*	mov	$0x41,eax	; 8040A491 
	DB 0xB8,0x41,0x0,0x0,0x0
;/	M\ 41 DTST
;/*	lea	-0x08(rbp),rbp	; 8040A496 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A49A E8 B8 B9 FF FF 
;/	REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040A49F 
	DB 0xE9,0x71,0xD3,0xFF,0xFF
;/
;/DUP   \  BLOCK		\ mov	%rax,-0x10(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040A4A4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	rax,-0x10(rbp)	; 8040A4A8 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ DX_apply<> OR
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040A4AC 
	DB 0x48,0x8B,0x5,0xEB,0xB7,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040A4B3 
	DB 0x48,0x8D,0x6D,0xF0
	call	_DX_applylessgreat	; 8040A4B7 E8 7 CB FF FF 
;/*	or	0x00(rbp),rax	; 8040A4BC 
	DB 0x48,0xB,0x45,0x0
;/*	sub	$0x01,rax	; 8040A4C0 
	DB 0x48,0x83,0xE8,0x1
;/0=	M_WL	DROP	\ mov   -0x10(%rbp),%rdx
;/*	sbb	rax,rax	; 8040A4C4 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040A4C7 48 85 C0 
;/*	mov	0x08(rbp),rax	; 8040A4CA 
	DB 0x48,0x8B,0x45,0x8
;/*	lea	0x10(rbp),rbp	; 8040A4CE 
	DB 0x48,0x8D,0x6D,0x10
;/*	jz	_OPTsubRULES+0x2D58 	; 8040A4D2 
	DB 0xF,0x84,0x81,0x0,0x0,0x0
;/*	mov	$0x2C,eax	; 8040A4D8 
	DB 0xB8,0x2C,0x0,0x0,0x0
	call	_DTST	; 8040A4DD E8 75 B9 FF FF 
;/	M\ 2C DTST
;/	OP0 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040A4E2 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040A4E6 
	DB 0x48,0x8D,0x5,0x5A,0xB6,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040A4ED 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040A4F1 E8 B1 BD FF FF 
;/	OP0 3 OPinsert
;/*	mov	rax,-0x08(rbp)	; 8040A4F6 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040A4FA 
	DB 0x48,0x8D,0x5,0x46,0xB6,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 8040A501 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x3,eax	; 8040A505 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040A50A 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPinsert	; 8040A50E E8 B5 BC FF FF 
;/	48 OP1 @ C!   \ mov    %rax,%rdx
;/*	mov	rax,-0x08(rbp)	; 8040A513 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x48,-0x10(rbp)	; 8040A517 
	DB 0x48,0xC7,0x45,0xF0,0x48,0x0,0x0,0x0
;/*	mov	$0x44C539,eax	; 8040A51F 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	mov	(rax),rax	; 8040A524 
	DB 0x48,0x8B,0x0
;/*	mov	-0x10(rbp),dl	; 8040A527 
	DB 0x8A,0x55,0xF0
;/*	mov	dl,(rax)	; 8040A52A 
	DB 0x88,0x10
;/*	movq	$0xC289,-0x10(rbp)	; 8040A52C 
	DB 0x48,0xC7,0x45,0xF0,0x89,0xC2,0x0,0x0
;/	c289 OP1 @ 1+ W!   \ mov    %rax,%rdx
;/*	mov	$0x44C539,eax	; 8040A534 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	mov	(rax),rax	; 8040A539 
	DB 0x48,0x8B,0x0
;/*	lea	0x01(rax),rax	; 8040A53C 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),edx	; 8040A540 
	DB 0x8B,0x55,0xF0
;/*	mov	dx,(rax)	; 8040A543 
	DB 0x66,0x89,0x10
;/*	mov	$0x2D,eax	; 8040A546 
	DB 0xB8,0x2D,0x0,0x0,0x0
;/	M\ 2D DTST
;/*	lea	-0x08(rbp),rbp	; 8040A54B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A54F E8 3 B9 FF FF 
;/	REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040A554 
	DB 0xE9,0xBC,0xD2,0xFF,0xFF
;/
;/\ END  BLOCK			\ mov	%rax,-0x10(%rbp)
;/OP1@ L@ FFFFFF AND d08948 XOR OR	\ mov	%rdx,%rax
;/*	mov	rax,-0x08(rbp)	; 8040A559 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040A55D 
	DB 0x48,0x8B,0x5,0x3A,0xB7,0xFF,0xFF
;/*	mov	(rax),eax	; 8040A564 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040A566 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xD08948,eax	; 8040A56B 
	DB 0x35,0x48,0x89,0xD0,0x0
;/*	or	-0x08(rbp),rax	; 8040A570 
	DB 0x48,0xB,0x45,0xF8
;/0=	M_WL			\ mov   -0x10(%rbp),%rdx
;/*	sub	$0x01,rax	; 8040A574 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 8040A578 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040A57B 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040A57E 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040A582 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x2DE6 	; 8040A586 
	DB 0xF,0x84,0x5B,0x0,0x0,0x0
;/	M\ 38 DTST
;/*	mov	rax,-0x08(rbp)	; 8040A58C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x38,eax	; 8040A590 
	DB 0xB8,0x38,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A595 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A599 E8 B9 B8 FF FF 
;/	92  OP1@ 1+ C!	\ xchg   %rax,%rdx
;/*	mov	rax,-0x08(rbp)	; 8040A59E 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x92,-0x10(rbp)	; 8040A5A2 
	DB 0x48,0xC7,0x45,0xF0,0x92,0x0,0x0,0x0
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040A5AA 
	DB 0x48,0x8B,0x5,0xED,0xB6,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 8040A5B1 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),dl	; 8040A5B5 
	DB 0x8A,0x55,0xF0
;/*	mov	dl,(rax)	; 8040A5B8 
	DB 0x88,0x10
;/*	mov	$0x44C539,eax	; 8040A5BA 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/       OP1 ToOP0
;/*	lea	-0x08(rbp),rbp	; 8040A5BF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 8040A5C3 E8 B3 B7 FF FF 
;/	-5 ALLOT
;/*	add	$-0x05,_HsubSTDOUT+0x18 (%rip)	; 8040A5C8 
	DB 0x48,0x83,0x5,0x4C,0xA6,0xFF,0xFF,0xFB
;/	M\ 39 DTST
;/*	mov	rax,-0x08(rbp)	; 8040A5D0 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x39,eax	; 8040A5D4 
	DB 0xB8,0x39,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A5D9 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A5DD E8 75 B8 FF FF 
;/	REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040A5E2 
	DB 0xE9,0x2E,0xD2,0xFF,0xFF
;/
;/OP2@ L@ FFFFFF AND 158d48 XOR \       lea     X(%rip),%rdx
;/*	mov	rax,-0x08(rbp)	; 8040A5E7 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040A5EB 
	DB 0x48,0x8B,0x5,0xB9,0xB6,0xFF,0xFF
;/*	mov	(rax),eax	; 8040A5F2 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040A5F4 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x158D48,eax	; 8040A5F9 
	DB 0x35,0x48,0x8D,0x15,0x0
;/*	mov	rax,-0x10(rbp)	; 8040A5FE 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ L@ FFFFFF AND
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040A602 
	DB 0x48,0x8B,0x5,0x95,0xB6,0xFF,0xFF
;/*	mov	(rax),eax	; 8040A609 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040A60B 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	mov	rax,-0x18(rbp)	; 8040A610 
	DB 0x48,0x89,0x45,0xE8
;/DUP	28948 XOR	\ mov     %rax,(%rdx)
;/*	xor	$0x28948,rax	; 8040A614 
	DB 0x48,0x35,0x48,0x89,0x2,0x0
;/*	mov	-0x18(rbp),rdx	; 8040A61A 
	DB 0x48,0x8B,0x55,0xE8
;/SWAP	20148 <> AND	\ add     %rax,(%rdx)
;/*	mov	rax,-0x18(rbp)	; 8040A61E 
	DB 0x48,0x89,0x45,0xE8
;/*	mov	rdx,-0x20(rbp)	; 8040A622 
	DB 0x48,0x89,0x55,0xE0
;/*	mov	$0x20148,eax	; 8040A626 
	DB 0xB8,0x48,0x1,0x2,0x0
;/*	xor	-0x20(rbp),rax	; 8040A62B 
	DB 0x48,0x33,0x45,0xE0
;/*		negq	rax	; 8040A62F 
	DB 0x48,0xF7,0xD8
;/*	sbb	rax,rax	; 8040A632 
	DB 0x48,0x19,0xC0
;/*	and	-0x18(rbp),rax	; 8040A635 
	DB 0x48,0x23,0x45,0xE8
;/*	or	-0x10(rbp),rax	; 8040A639 
	DB 0x48,0xB,0x45,0xF0
;/ OR  0=
;/*	sub	$0x01,rax	; 8040A63D 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 8040A641 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040A644 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040A647 
	DB 0x48,0x8B,0x45,0xF8
;/ M_WL  M\ 30 DTST
;/*	jz	_OPTsubRULES+0x2EB1 	; 8040A64B 
	DB 0xF,0x84,0x61,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040A651 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x30,eax	; 8040A655 
	DB 0xB8,0x30,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A65A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A65E E8 F4 B7 FF FF 
;/	OP1@ 1+ C@ 0500 OR
;/*	mov	rax,-0x08(rbp)	; 8040A663 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040A667 
	DB 0x48,0x8B,0x5,0x30,0xB6,0xFF,0xFF
;/*	movzb	0x01(rax),eax	; 8040A66E 
	DB 0xF,0xB6,0x40,0x1
;/*	or	$0x500,rax	; 8040A672 
	DB 0x48,0xD,0x0,0x5,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040A678 
	DB 0x48,0x89,0x45,0xF0
;/	OP2@ 1+ W! \	mov    %rax,X(%rip)
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040A67C 
	DB 0x48,0x8B,0x5,0x28,0xB6,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 8040A683 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),edx	; 8040A687 
	DB 0x8B,0x55,0xF0
;/*	mov	dx,(rax)	; 8040A68A 
	DB 0x66,0x89,0x10
;/*	mov	$0x44C539,eax	; 8040A68D 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/	OP1 OPexcise
;/*	lea	-0x08(rbp),rbp	; 8040A692 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040A696 E8 C BC FF FF 
;/	M\ 31 DTST
;/*	mov	rax,-0x08(rbp)	; 8040A69B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x31,eax	; 8040A69F 
	DB 0xB8,0x31,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A6A4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A6A8 E8 AA B7 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040A6AD 
	DB 0xE9,0x63,0xD1,0xFF,0xFF
;/
;/OP2@ L@ FFFFFF AND c0c748 XOR	\ movq	$X,%rax
;/*	mov	rax,-0x08(rbp)	; 8040A6B2 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040A6B6 
	DB 0x48,0x8B,0x5,0xEE,0xB5,0xFF,0xFF
;/*	mov	(rax),eax	; 8040A6BD 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040A6BF 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xC0C748,eax	; 8040A6C4 
	DB 0x35,0x48,0xC7,0xC0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040A6C9 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ L@ FFFFFF AND 458948 XOR OR	\ mov	%rax,-0x10(%rbp)
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040A6CD 
	DB 0x48,0x8B,0x5,0xCA,0xB5,0xFF,0xFF
;/*	mov	(rax),eax	; 8040A6D4 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040A6D6 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458948,eax	; 8040A6DB 
	DB 0x35,0x48,0x89,0x45,0x0
;/*	or	-0x10(rbp),rax	; 8040A6E0 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040A6E4 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ NEWRAX0+ OR
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040A6E8 
	DB 0x48,0x8B,0x5,0xA2,0xB5,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040A6EF 
	DB 0x48,0x8D,0x6D,0xF0
	call	_NEWRAX0add	; 8040A6F3 E8 31 C6 FF FF 
;/*	or	0x00(rbp),rax	; 8040A6F8 
	DB 0x48,0xB,0x45,0x0
;/*	sub	$0x01,rax	; 8040A6FC 
	DB 0x48,0x83,0xE8,0x1
;/  0=
;/*	sbb	rax,rax	; 8040A700 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040A703 48 85 C0 
;/*	mov	0x08(rbp),rax	; 8040A706 
	DB 0x48,0x8B,0x45,0x8
;/ M_WL  M\ 32 DTST
;/*	lea	0x10(rbp),rbp	; 8040A70A 
	DB 0x48,0x8D,0x6D,0x10
;/*	jz	_OPTsubRULES+0x2F9F 	; 8040A70E 
	DB 0xF,0x84,0x8C,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040A714 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x32,eax	; 8040A718 
	DB 0xB8,0x32,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A71D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A721 E8 31 B7 FF FF 
;/	OP1 8 OPsize!
;/*	mov	rax,-0x08(rbp)	; 8040A726 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x44C539,-0x10(rbp)	; 8040A72A 
	DB 0x48,0xC7,0x45,0xF0,0x39,0xC5,0x44,0x0
;/*	mov	$0x8,eax	; 8040A732 
	DB 0xB8,0x8,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040A737 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPsizesave	; 8040A73B E8 F0 BA FF FF 
;/	45c7  OP1@ 1+ W!
;/*	mov	rax,-0x08(rbp)	; 8040A740 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x45C7,-0x10(rbp)	; 8040A744 
	DB 0x48,0xC7,0x45,0xF0,0xC7,0x45,0x0,0x0
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040A74C 
	DB 0x48,0x8B,0x5,0x4B,0xB5,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 8040A753 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),edx	; 8040A757 
	DB 0x8B,0x55,0xF0
;/*	mov	dx,(rax)	; 8040A75A 
	DB 0x66,0x89,0x10
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040A75D 
	DB 0x48,0x8B,0x5,0x47,0xB5,0xFF,0xFF
;/	OP2@ 3 + L@ OP1@ 4 + L! \  movq   $X,0x8(%rbp)
;/*	mov	0x03(rax),eax	; 8040A764 
	DB 0x8B,0x40,0x3
;/*	mov	rax,-0x10(rbp)	; 8040A767 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040A76B 
	DB 0x48,0x8B,0x5,0x2C,0xB5,0xFF,0xFF
;/*	lea	0x04(rax),rax	; 8040A772 
	DB 0x48,0x8D,0x40,0x4
;/*	mov	-0x10(rbp),edx	; 8040A776 
	DB 0x8B,0x55,0xF0
;/*	mov	edx,(rax)	; 8040A779 
	DB 0x89,0x10
;/*	mov	$0x44C541,eax	; 8040A77B 
	DB 0xB8,0x41,0xC5,0x44,0x0
;/	OP2 OPexcise
;/*	lea	-0x08(rbp),rbp	; 8040A780 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040A784 E8 1E BB FF FF 
;/	M\ 33 DTST
;/*	mov	rax,-0x08(rbp)	; 8040A789 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x33,eax	; 8040A78D 
	DB 0xB8,0x33,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A792 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A796 E8 BC B6 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040A79B 
	DB 0xE9,0x75,0xD0,0xFF,0xFF
;/
;/OP2@ @ 80000000FF AND B8 XOR \      movq    $0x30,%rax
;/*	mov	rax,-0x08(rbp)	; 8040A7A0 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040A7A4 
	DB 0x48,0x8B,0x5,0x0,0xB5,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A7AB 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x10(rbp)	; 8040A7AE 
	DB 0x48,0x89,0x45,0xF0
;/*	movabs	$0x80000000FF,%rax	; 8040A7B2 
	DB 0x48,0xB8,0xFF,0x0,0x0,0x0,0x80,0x0,0x0,0x0
;/*	and	-0x10(rbp),rax	; 8040A7BC 
	DB 0x48,0x23,0x45,0xF0
;/*	xor	$0xB8,rax	; 8040A7C0 
	DB 0x48,0x35,0xB8,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040A7C6 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ @ FFFFFF AND 458948 XOR OR	\	mov     %rax,-0x08(%rbp)
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040A7CA 
	DB 0x48,0x8B,0x5,0xCD,0xB4,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A7D1 
	DB 0x48,0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040A7D4 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458948,eax	; 8040A7D9 
	DB 0x35,0x48,0x89,0x45,0x0
;/*	or	-0x10(rbp),rax	; 8040A7DE 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040A7E2 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ NEWRAX0+ OR
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040A7E6 
	DB 0x48,0x8B,0x5,0xA4,0xB4,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040A7ED 
	DB 0x48,0x8D,0x6D,0xF0
	call	_NEWRAX0add	; 8040A7F1 E8 33 C5 FF FF 
;/*	or	0x00(rbp),rax	; 8040A7F6 
	DB 0x48,0xB,0x45,0x0
;/*	sub	$0x01,rax	; 8040A7FA 
	DB 0x48,0x83,0xE8,0x1
;/0=	M_WL	M\ 70 DTST
;/*	sbb	rax,rax	; 8040A7FE 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040A801 48 85 C0 
;/*	mov	0x08(rbp),rax	; 8040A804 
	DB 0x48,0x8B,0x45,0x8
;/*	lea	0x10(rbp),rbp	; 8040A808 
	DB 0x48,0x8D,0x6D,0x10
;/*	jz	_OPTsubRULES+0x3097 	; 8040A80C 
	DB 0xF,0x84,0x86,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040A812 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x70,eax	; 8040A816 
	DB 0xB8,0x70,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A81B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A81F E8 33 B6 FF FF 
;/	OP1@ 3+ C@
;/*	mov	rax,-0x08(rbp)	; 8040A824 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040A828 
	DB 0x48,0x8B,0x5,0x6F,0xB4,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 8040A82F 
	DB 0xF,0xB6,0x40,0x3
;/*	mov	rax,-0x10(rbp)	; 8040A833 
	DB 0x48,0x89,0x45,0xF0
;/	OP1 OPexcise
;/*	mov	$0x44C539,eax	; 8040A837 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	lea	-0x10(rbp),rbp	; 8040A83C 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPexcise	; 8040A840 E8 62 BA FF FF 
;/	OP1 3 OPresize
;/*	mov	rax,-0x08(rbp)	; 8040A845 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x44C539,-0x10(rbp)	; 8040A849 
	DB 0x48,0xC7,0x45,0xF0,0x39,0xC5,0x44,0x0
;/*	mov	$0x3,eax	; 8040A851 
	DB 0xB8,0x3,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040A856 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPresize	; 8040A85A E8 7E B8 FF FF 
;/	45c748  OP1 @ L! 
;/*	mov	rax,-0x08(rbp)	; 8040A85F 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x45C748,-0x10(rbp)	; 8040A863 
	DB 0x48,0xC7,0x45,0xF0,0x48,0xC7,0x45,0x0
;/*	mov	$0x44C539,eax	; 8040A86B 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	mov	(rax),rax	; 8040A870 
	DB 0x48,0x8B,0x0
;/*	mov	-0x10(rbp),edx	; 8040A873 
	DB 0x8B,0x55,0xF0
;/*	mov	edx,(rax)	; 8040A876 
	DB 0x89,0x10
;/*	mov	$0x44C539,eax	; 8040A878 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/	OP1 @ 3+ C!     \ mov     $0x30,-0x08(%rbp)
;/*	mov	(rax),rax	; 8040A87D 
	DB 0x48,0x8B,0x0
;/*	lea	0x03(rax),rax	; 8040A880 
	DB 0x48,0x8D,0x40,0x3
;/*	mov	-0x08(rbp),dl	; 8040A884 
	DB 0x8A,0x55,0xF8
;/*	mov	dl,(rax)	; 8040A887 
	DB 0x88,0x10
;/*	mov	$0x71,eax	; 8040A889 
	DB 0xB8,0x71,0x0,0x0,0x0
	call	_DTST	; 8040A88E E8 C4 B5 FF FF 
;/	M\ 71 DTST
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040A893 
	DB 0xE9,0x7D,0xCF,0xFF,0xFF
;/
;/OP2@ @ FFFFFF AND 058D48 XOR	\	lea     X (%rip),%rax
;/*	mov	rax,-0x08(rbp)	; 8040A898 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040A89C 
	DB 0x48,0x8B,0x5,0x8,0xB4,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A8A3 
	DB 0x48,0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040A8A6 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x58D48,eax	; 8040A8AB 
	DB 0x35,0x48,0x8D,0x5,0x0
;/*	mov	rax,-0x10(rbp)	; 8040A8B0 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ W@ 	00C6 XOR OR	\	movb    $Y,(%rax)
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040A8B4 
	DB 0x48,0x8B,0x5,0xE3,0xB3,0xFF,0xFF
;/*	movzw	(rax),eax	; 8040A8BB 
	DB 0xF,0xB7,0x0
;/*	xor	$0xC6,rax	; 8040A8BE 
	DB 0x48,0x35,0xC6,0x0,0x0,0x0
;/*	or	-0x10(rbp),rax	; 8040A8C4 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040A8C8 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ NEWRAX0+ OR
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040A8CC 
	DB 0x48,0x8B,0x5,0xBE,0xB3,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040A8D3 
	DB 0x48,0x8D,0x6D,0xF0
	call	_NEWRAX0add	; 8040A8D7 E8 4D C4 FF FF 
;/*	or	0x00(rbp),rax	; 8040A8DC 
	DB 0x48,0xB,0x45,0x0
;/*	sub	$0x01,rax	; 8040A8E0 
	DB 0x48,0x83,0xE8,0x1
;/0=	M_WL	M\ 8C DTST
;/*	sbb	rax,rax	; 8040A8E4 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040A8E7 48 85 C0 
;/*	mov	0x08(rbp),rax	; 8040A8EA 
	DB 0x48,0x8B,0x45,0x8
;/*	lea	0x10(rbp),rbp	; 8040A8EE 
	DB 0x48,0x8D,0x6D,0x10
;/*	jz	_OPTsubRULES+0x3184 	; 8040A8F2 
	DB 0xF,0x84,0x8D,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040A8F8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8C,eax	; 8040A8FC 
	DB 0xB8,0x8C,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A901 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A905 E8 4D B5 FF FF 
;/	OP2@ 3+ L@ OP2@ 2+ L!
;/*	mov	rax,-0x08(rbp)	; 8040A90A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040A90E 
	DB 0x48,0x8B,0x5,0x96,0xB3,0xFF,0xFF
;/*	mov	0x03(rax),eax	; 8040A915 
	DB 0x8B,0x40,0x3
;/*	mov	rax,-0x10(rbp)	; 8040A918 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040A91C 
	DB 0x48,0x8B,0x5,0x88,0xB3,0xFF,0xFF
;/*	lea	0x02(rax),rax	; 8040A923 
	DB 0x48,0x8D,0x40,0x2
;/*	mov	-0x10(rbp),edx	; 8040A927 
	DB 0x8B,0x55,0xF0
;/*	mov	edx,(rax)	; 8040A92A 
	DB 0x89,0x10
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040A92C 
	DB 0x48,0x8B,0x5,0x6B,0xB3,0xFF,0xFF
;/	OP1@ 2+ C@ OP2@  6 + C!	
;/*	movzb	0x02(rax),eax	; 8040A933 
	DB 0xF,0xB6,0x40,0x2
;/*	mov	rax,-0x10(rbp)	; 8040A937 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040A93B 
	DB 0x48,0x8B,0x5,0x69,0xB3,0xFF,0xFF
;/*	lea	0x06(rax),rax	; 8040A942 
	DB 0x48,0x8D,0x40,0x6
;/*	mov	-0x10(rbp),dl	; 8040A946 
	DB 0x8A,0x55,0xF0
;/*	mov	dl,(rax)	; 8040A949 
	DB 0x88,0x10
;/*	movq	$0x5C6,-0x10(rbp)	; 8040A94B 
	DB 0x48,0xC7,0x45,0xF0,0xC6,0x5,0x0,0x0
;/	05C6 OP2@ W! \ movb   $0x77,0x9(%rip)
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040A953 
	DB 0x48,0x8B,0x5,0x51,0xB3,0xFF,0xFF
;/*	mov	-0x10(rbp),edx	; 8040A95A 
	DB 0x8B,0x55,0xF0
;/*	mov	dx,(rax)	; 8040A95D 
	DB 0x66,0x89,0x10
;/*	mov	$0x44C539,eax	; 8040A960 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/	OP1 OPexcise
;/*	lea	-0x08(rbp),rbp	; 8040A965 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040A969 E8 39 B9 FF FF 
;/	M\ 8D DTST
;/*	mov	rax,-0x08(rbp)	; 8040A96E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8D,eax	; 8040A972 
	DB 0xB8,0x8D,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A977 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A97B E8 D7 B4 FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040A980 
	DB 0xE9,0x90,0xCE,0xFF,0xFF
;/
;/OP2@ @ FFFFFF AND 058D48 XOR	\	lea     X (%rip),%rax
;/*	mov	rax,-0x08(rbp)	; 8040A985 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040A989 
	DB 0x48,0x8B,0x5,0x1B,0xB3,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A990 
	DB 0x48,0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040A993 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x58D48,eax	; 8040A998 
	DB 0x35,0x48,0x8D,0x5,0x0
;/*	mov	rax,-0x10(rbp)	; 8040A99D 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ @ FFFFFF AND 00C748 XOR OR	\	movq    $Y,(%rax)
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040A9A1 
	DB 0x48,0x8B,0x5,0xF6,0xB2,0xFF,0xFF
;/*	mov	(rax),rax	; 8040A9A8 
	DB 0x48,0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040A9AB 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xC748,eax	; 8040A9B0 
	DB 0x35,0x48,0xC7,0x0,0x0
;/*	or	-0x10(rbp),rax	; 8040A9B5 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040A9B9 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ NEWRAX0+ OR
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040A9BD 
	DB 0x48,0x8B,0x5,0xCD,0xB2,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040A9C4 
	DB 0x48,0x8D,0x6D,0xF0
	call	_NEWRAX0add	; 8040A9C8 E8 5C C3 FF FF 
;/*	or	0x00(rbp),rax	; 8040A9CD 
	DB 0x48,0xB,0x45,0x0
;/*	sub	$0x01,rax	; 8040A9D1 
	DB 0x48,0x83,0xE8,0x1
;/0=	M_WL	M\ 82 DTST
;/*	sbb	rax,rax	; 8040A9D5 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040A9D8 48 85 C0 
;/*	mov	0x08(rbp),rax	; 8040A9DB 
	DB 0x48,0x8B,0x45,0x8
;/*	lea	0x10(rbp),rbp	; 8040A9DF 
	DB 0x48,0x8D,0x6D,0x10
;/*	jz	_OPTsubRULES+0x328B 	; 8040A9E3 
	DB 0xF,0x84,0xA3,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040A9E9 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x82,eax	; 8040A9ED 
	DB 0xB8,0x82,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040A9F2 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040A9F6 E8 5C B4 FF FF 
;/	OP1@ 3+ L@
;/*	mov	rax,-0x08(rbp)	; 8040A9FB 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040A9FF 
	DB 0x48,0x8B,0x5,0x98,0xB2,0xFF,0xFF
;/*	mov	0x03(rax),eax	; 8040AA06 
	DB 0x8B,0x40,0x3
;/*	mov	rax,-0x10(rbp)	; 8040AA09 
	DB 0x48,0x89,0x45,0xF0
;/	OP1 OPexcise
;/*	mov	$0x44C539,eax	; 8040AA0D 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	lea	-0x10(rbp),rbp	; 8040AA12 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPexcise	; 8040AA16 E8 8C B8 FF FF 
;/	OP1 B OPsize!
;/*	mov	rax,-0x08(rbp)	; 8040AA1B 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x44C539,-0x10(rbp)	; 8040AA1F 
	DB 0x48,0xC7,0x45,0xF0,0x39,0xC5,0x44,0x0
;/*	mov	$0xB,eax	; 8040AA27 
	DB 0xB8,0xB,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040AA2C 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPsizesave	; 8040AA30 E8 FB B7 FF FF 
;/	-4 OP1 @ 3+ L+! 
;/*	mov	rax,-0x08(rbp)	; 8040AA35 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x4,-0x10(rbp)	; 8040AA39 
	DB 0x48,0xC7,0x45,0xF0,0xFC,0xFF,0xFF,0xFF
;/*	mov	$0x44C539,eax	; 8040AA41 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	mov	(rax),rax	; 8040AA46 
	DB 0x48,0x8B,0x0
;/*	lea	0x03(rax),rax	; 8040AA49 
	DB 0x48,0x8D,0x40,0x3
;/*	mov	-0x10(rbp),rdx	; 8040AA4D 
	DB 0x48,0x8B,0x55,0xF0
;/*	add	edx,(rax)	; 8040AA51 
	DB 0x1,0x10
;/*	mov	$0x44C539,eax	; 8040AA53 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/	OP1 @ 7 + L! 
;/*	mov	(rax),rax	; 8040AA58 
	DB 0x48,0x8B,0x0
;/*	lea	0x07(rax),rax	; 8040AA5B 
	DB 0x48,0x8D,0x40,0x7
;/*	mov	-0x08(rbp),edx	; 8040AA5F 
	DB 0x8B,0x55,0xF8
;/*	mov	edx,(rax)	; 8040AA62 
	DB 0x89,0x10
;/*	movq	$0xC7,-0x08(rbp)	; 8040AA64 
	DB 0x48,0xC7,0x45,0xF8,0xC7,0x0,0x0,0x0
;/	C7 OP1 @ 1+ C!  \    movq   $Y,X(%rip)
;/*	mov	$0x44C539,eax	; 8040AA6C 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	mov	(rax),rax	; 8040AA71 
	DB 0x48,0x8B,0x0
;/*	lea	0x01(rax),rax	; 8040AA74 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x08(rbp),dl	; 8040AA78 
	DB 0x8A,0x55,0xF8
;/*	mov	dl,(rax)	; 8040AA7B 
	DB 0x88,0x10
;/*	mov	$0x83,eax	; 8040AA7D 
	DB 0xB8,0x83,0x0,0x0,0x0
	call	_DTST	; 8040AA82 E8 D0 B3 FF FF 
;/	M\ 83 DTST
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040AA87 
	DB 0xE9,0x89,0xCD,0xFF,0xFF
;/
;/J_COD FE AND 0x84 XOR
;/*	mov	rax,-0x08(rbp)	; 8040AA8C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_J_COD+0x5 (%rip),rax	; 8040AA90 
	DB 0x48,0x8B,0x5,0x4D,0xB0,0xFF,0xFF
;/*	and	$0xFE,eax	; 8040AA97 
	DB 0x25,0xFE,0x0,0x0,0x0
;/*	xor	$-0x7C,al	; 8040AA9C 
	DB 0x34,0x84
;/*	mov	rax,-0x10(rbp)	; 8040AA9E 
	DB 0x48,0x89,0x45,0xF0
;/OP2@ @ FFFFFF AND 00B60F XOR OR	\	movzb	(%rax),%eax
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040AAA2 
	DB 0x48,0x8B,0x5,0x2,0xB2,0xFF,0xFF
;/*	mov	(rax),rax	; 8040AAA9 
	DB 0x48,0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040AAAC 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xB60F,eax	; 8040AAB1 
	DB 0x35,0xF,0xB6,0x0,0x0
;/*	or	-0x10(rbp),rax	; 8040AAB6 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040AABA 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ W@		583C XOR OR	\	cmp	$0x58,%al
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040AABE 
	DB 0x48,0x8B,0x5,0xD9,0xB1,0xFF,0xFF
;/*	movzw	(rax),eax	; 8040AAC5 
	DB 0xF,0xB7,0x0
;/*	xor	$0x583C,rax	; 8040AAC8 
	DB 0x48,0x35,0x3C,0x58,0x0,0x0
;/*	or	-0x10(rbp),rax	; 8040AACE 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040AAD2 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ NEWRAX0+ OR
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040AAD6 
	DB 0x48,0x8B,0x5,0xB4,0xB1,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040AADD 
	DB 0x48,0x8D,0x6D,0xF0
	call	_NEWRAX0add	; 8040AAE1 E8 43 C2 FF FF 
;/*	or	0x00(rbp),rax	; 8040AAE6 
	DB 0x48,0xB,0x45,0x0
;/*	sub	$0x01,rax	; 8040AAEA 
	DB 0x48,0x83,0xE8,0x1
;/0=	M_WL	M\ 84 DTST
;/*	sbb	rax,rax	; 8040AAEE 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040AAF1 48 85 C0 
;/*	mov	0x08(rbp),rax	; 8040AAF4 
	DB 0x48,0x8B,0x45,0x8
;/*	lea	0x10(rbp),rbp	; 8040AAF8 
	DB 0x48,0x8D,0x6D,0x10
;/*	jz	_OPTsubRULES+0x3350 	; 8040AAFC 
	DB 0xF,0x84,0x4F,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040AB02 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x84,eax	; 8040AB06 
	DB 0xB8,0x84,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AB0B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040AB0F E8 43 B3 FF FF 
;/	583880 	OP2@ L! \ cmpb   $0x58,(%rax)
;/*	mov	rax,-0x08(rbp)	; 8040AB14 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x583880,-0x10(rbp)	; 8040AB18 
	DB 0x48,0xC7,0x45,0xF0,0x80,0x38,0x58,0x0
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040AB20 
	DB 0x48,0x8B,0x5,0x84,0xB1,0xFF,0xFF
;/*	mov	-0x10(rbp),edx	; 8040AB27 
	DB 0x8B,0x55,0xF0
;/*	mov	edx,(rax)	; 8040AB2A 
	DB 0x89,0x10
;/*	mov	$0x44C539,eax	; 8040AB2C 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/	OP1 OPexcise
;/*	lea	-0x08(rbp),rbp	; 8040AB31 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040AB35 E8 6D B7 FF FF 
;/	M\ 85 DTST              
;/*	mov	rax,-0x08(rbp)	; 8040AB3A 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x85,eax	; 8040AB3E 
	DB 0xB8,0x85,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AB43 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040AB47 E8 B B3 FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040AB4C 
	DB 0xE9,0xC4,0xCC,0xFF,0xFF
;/
;/
;/OP2@ 3 + C@  OP0@ 3 + C@ XOR
;/*	mov	rax,-0x08(rbp)	; 8040AB51 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040AB55 
	DB 0x48,0x8B,0x5,0x4F,0xB1,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 8040AB5C 
	DB 0xF,0xB6,0x40,0x3
;/*	mov	rax,-0x10(rbp)	; 8040AB60 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040AB64 
	DB 0x48,0x8B,0x5,0x26,0xB1,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 8040AB6B 
	DB 0xF,0xB6,0x40,0x3
;/*	xor	-0x10(rbp),rax	; 8040AB6F 
	DB 0x48,0x33,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040AB73 
	DB 0x48,0x89,0x45,0xF0
;/OP2@ L@ FFFFFF AND 45c748 XOR OR	\ movq    $-0x1,-0x10(%rbp)
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040AB77 
	DB 0x48,0x8B,0x5,0x2D,0xB1,0xFF,0xFF
;/*	mov	(rax),eax	; 8040AB7E 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040AB80 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x45C748,eax	; 8040AB85 
	DB 0x35,0x48,0xC7,0x45,0x0
;/*	or	-0x10(rbp),rax	; 8040AB8A 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040AB8E 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ L@ FFFFFF AND 058d48 XOR OR	\ lea     OPTque+0x5 (%rip),%rax
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040AB92 
	DB 0x48,0x8B,0x5,0x5,0xB1,0xFF,0xFF
;/*	mov	(rax),eax	; 8040AB99 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040AB9B 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x58D48,eax	; 8040ABA0 
	DB 0x35,0x48,0x8D,0x5,0x0
;/*	or	-0x10(rbp),rax	; 8040ABA5 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040ABA9 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ FFFFFF AND 558b48 XOR OR	\ mov     -0x10(%rbp),%rdx
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040ABAD 
	DB 0x48,0x8B,0x5,0xDD,0xB0,0xFF,0xFF
;/*	mov	(rax),eax	; 8040ABB4 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040ABB6 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x558B48,eax	; 8040ABBB 
	DB 0x35,0x48,0x8B,0x55,0x0
;/*	or	-0x10(rbp),rax	; 8040ABC0 
	DB 0x48,0xB,0x45,0xF0
;/*	sub	$0x01,rax	; 8040ABC4 
	DB 0x48,0x83,0xE8,0x1
;/  0=
;/*	sbb	rax,rax	; 8040ABC8 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040ABCB 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040ABCE 
	DB 0x48,0x8B,0x45,0xF8
;/ M_WL  M\ 34 DTST
;/*	jz	_OPTsubRULES+0x3477 	; 8040ABD2 
	DB 0xF,0x84,0xA0,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040ABD8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x34,eax	; 8040ABDC 
	DB 0xB8,0x34,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040ABE1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040ABE5 E8 6D B2 FF FF 
;/	89 OP0@ 1+ C!	\ mov    %rdx,-0x10(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040ABEA 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x89,-0x10(rbp)	; 8040ABEE 
	DB 0x48,0xC7,0x45,0xF0,0x89,0x0,0x0,0x0
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040ABF6 
	DB 0x48,0x8B,0x5,0x94,0xB0,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 8040ABFD 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),dl	; 8040AC01 
	DB 0x8A,0x55,0xF0
;/*	mov	dl,(rax)	; 8040AC04 
	DB 0x88,0x10
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040AC06 
	DB 0x48,0x8B,0x5,0x9E,0xB0,0xFF,0xFF
;/	OP2@ 4+ L@
;/*	mov	0x04(rax),eax	; 8040AC0D 
	DB 0x8B,0x40,0x4
;/*	mov	rax,-0x10(rbp)	; 8040AC10 
	DB 0x48,0x89,0x45,0xF0
;/	OP2 OPexcise
;/*	mov	$0x44C541,eax	; 8040AC14 
	DB 0xB8,0x41,0xC5,0x44,0x0
;/*	lea	-0x10(rbp),rbp	; 8040AC19 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPexcise	; 8040AC1D E8 85 B6 FF FF 
;/	OP0 7 OPinsert
;/*	mov	rax,-0x08(rbp)	; 8040AC22 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040AC26 
	DB 0x48,0x8D,0x5,0x1A,0xAF,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 8040AC2D 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	$0x7,eax	; 8040AC31 
	DB 0xB8,0x7,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040AC36 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPinsert	; 8040AC3A E8 89 B5 FF FF 
;/	c2c748 OP1 @ L!	\ movq	$-0x1,%rdx
;/*	mov	rax,-0x08(rbp)	; 8040AC3F 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0xC2C748,-0x10(rbp)	; 8040AC43 
	DB 0x48,0xC7,0x45,0xF0,0x48,0xC7,0xC2,0x0
;/*	mov	$0x44C539,eax	; 8040AC4B 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	mov	(rax),rax	; 8040AC50 
	DB 0x48,0x8B,0x0
;/*	mov	-0x10(rbp),edx	; 8040AC53 
	DB 0x8B,0x55,0xF0
;/*	mov	edx,(rax)	; 8040AC56 
	DB 0x89,0x10
;/*	mov	$0x44C539,eax	; 8040AC58 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/	OP1 @ 3 + L!	 
;/*	mov	(rax),rax	; 8040AC5D 
	DB 0x48,0x8B,0x0
;/*	lea	0x03(rax),rax	; 8040AC60 
	DB 0x48,0x8D,0x40,0x3
;/*	mov	-0x08(rbp),edx	; 8040AC64 
	DB 0x8B,0x55,0xF8
;/*	mov	edx,(rax)	; 8040AC67 
	DB 0x89,0x10
;/*	mov	$0x35,eax	; 8040AC69 
	DB 0xB8,0x35,0x0,0x0,0x0
	call	_DTST	; 8040AC6E E8 E4 B1 FF FF 
;/	M\ 35 DTST
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040AC73 
	DB 0xE9,0x9D,0xCB,0xFF,0xFF
;/
;/OP2@ 2+ W@  OP0@ 2+ W@ XOR
;/*	mov	rax,-0x08(rbp)	; 8040AC78 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040AC7C 
	DB 0x48,0x8B,0x5,0x28,0xB0,0xFF,0xFF
;/*	movzw	0x02(rax),eax	; 8040AC83 
	DB 0xF,0xB7,0x40,0x2
;/*	mov	rax,-0x10(rbp)	; 8040AC87 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040AC8B 
	DB 0x48,0x8B,0x5,0xFF,0xAF,0xFF,0xFF
;/*	movzw	0x02(rax),eax	; 8040AC92 
	DB 0xF,0xB7,0x40,0x2
;/*	xor	-0x10(rbp),rax	; 8040AC96 
	DB 0x48,0x33,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040AC9A 
	DB 0x48,0x89,0x45,0xF0
;/OP2@ L@ EFFDFF AND 458948 XOR OR \	mov 0x00(%rbp),%rax | %rax,0x00(%rbp)
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040AC9E 
	DB 0x48,0x8B,0x5,0x6,0xB0,0xFF,0xFF
;/*	mov	(rax),eax	; 8040ACA5 
	DB 0x8B,0x0
;/*	and	$0xEFFDFF,eax	; 8040ACA7 
	DB 0x25,0xFF,0xFD,0xEF,0x0
;/*	xor	$0x458948,eax	; 8040ACAC 
	DB 0x35,0x48,0x89,0x45,0x0
;/*	or	-0x10(rbp),rax	; 8040ACB1 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040ACB5 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ ?ChRAX<>     OR \ 0 not chench rax
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040ACB9 
	DB 0x48,0x8B,0x5,0xDE,0xAF,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040ACC0 
	DB 0x48,0x8D,0x6D,0xF0
	call	_queChRAXlessgreat	; 8040ACC4 E8 3B C1 FF FF 
;/*	or	0x00(rbp),rax	; 8040ACC9 
	DB 0x48,0xB,0x45,0x0
;/*	mov	rax,0x00(rbp)	; 8040ACCD 
	DB 0x48,0x89,0x45,0x0
;/OP2@ 3 + C@ OP1@ 3 + C@ = OR
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040ACD1 
	DB 0x48,0x8B,0x5,0xD3,0xAF,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 8040ACD8 
	DB 0xF,0xB6,0x40,0x3
;/*	mov	rax,-0x08(rbp)	; 8040ACDC 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040ACE0 
	DB 0x48,0x8B,0x5,0xB7,0xAF,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 8040ACE7 
	DB 0xF,0xB6,0x40,0x3
;/*	xor	-0x08(rbp),rax	; 8040ACEB 
	DB 0x48,0x33,0x45,0xF8
;/*	sub	$0x01,rax	; 8040ACEF 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 8040ACF3 
	DB 0x48,0x19,0xC0
;/*	or	0x00(rbp),rax	; 8040ACF6 
	DB 0x48,0xB,0x45,0x0
;/*	mov	rax,0x00(rbp)	; 8040ACFA 
	DB 0x48,0x89,0x45,0x0
;/OP0@ L@ EFFDFF AND 458948 XOR OR \	mov 0x00(%rbp),%rax | %rax,0x00(%rbp)
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040ACFE 
	DB 0x48,0x8B,0x5,0x8C,0xAF,0xFF,0xFF
;/*	mov	(rax),eax	; 8040AD05 
	DB 0x8B,0x0
;/*	and	$0xEFFDFF,eax	; 8040AD07 
	DB 0x25,0xFF,0xFD,0xEF,0x0
;/*	xor	$0x458948,eax	; 8040AD0C 
	DB 0x35,0x48,0x89,0x45,0x0
;/*	or	0x00(rbp),rax	; 8040AD11 
	DB 0x48,0xB,0x45,0x0
;/*	sub	$0x01,rax	; 8040AD15 
	DB 0x48,0x83,0xE8,0x1
;/  0=
;/*	sbb	rax,rax	; 8040AD19 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040AD1C 48 85 C0 
;/*	mov	0x08(rbp),rax	; 8040AD1F 
	DB 0x48,0x8B,0x45,0x8
;/ M_WL  M\ 9C DTST
;/*	lea	0x10(rbp),rbp	; 8040AD23 
	DB 0x48,0x8D,0x6D,0x10
;/*	jz	_OPTsubRULES+0x356F 	; 8040AD27 
	DB 0xF,0x84,0x43,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040AD2D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x9C,eax	; 8040AD31 
	DB 0xB8,0x9C,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AD36 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040AD3A E8 18 B1 FF FF 
;/	OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 8040AD3F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 8040AD43 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AD48 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 8040AD4C E8 2A B0 FF FF 
;/	-4 ALLOT
;/*	add	$-0x04,_HsubSTDOUT+0x18 (%rip)	; 8040AD51 
	DB 0x48,0x83,0x5,0xC3,0x9E,0xFF,0xFF,0xFC
;/	M\ 9D DTST
;/*	mov	rax,-0x08(rbp)	; 8040AD59 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x9D,eax	; 8040AD5D 
	DB 0xB8,0x9D,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AD62 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040AD66 E8 EC B0 FF FF 
;/ REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040AD6B 
	DB 0xE9,0xA5,0xCA,0xFF,0xFF
;/
;/OP2@ L@ FFFFFF AND 058b48 XOR \ mov X(%rip),%rax
;/*	mov	rax,-0x08(rbp)	; 8040AD70 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040AD74 
	DB 0x48,0x8B,0x5,0x30,0xAF,0xFF,0xFF
;/*	mov	(rax),eax	; 8040AD7B 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040AD7D 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x58B48,eax	; 8040AD82 
	DB 0x35,0x48,0x8B,0x5,0x0
;/*	mov	rax,-0x10(rbp)	; 8040AD87 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ C@ 50 XOR OR \ Push    %rax
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040AD8B 
	DB 0x48,0x8B,0x5,0xC,0xAF,0xFF,0xFF
;/*	movzb	(rax),eax	; 8040AD92 
	DB 0xF,0xB6,0x0
;/*	xor	$0x50,al	; 8040AD95 
	DB 0x34,0x50
;/*	or	-0x10(rbp),rax	; 8040AD97 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040AD9B 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ NEWRAX0+ OR \ mov 0x00(%rbp),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040AD9F 
	DB 0x48,0x8B,0x5,0xEB,0xAE,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040ADA6 
	DB 0x48,0x8D,0x6D,0xF0
	call	_NEWRAX0add	; 8040ADAA E8 7A BF FF FF 
;/*	or	0x00(rbp),rax	; 8040ADAF 
	DB 0x48,0xB,0x45,0x0
;/*	sub	$0x01,rax	; 8040ADB3 
	DB 0x48,0x83,0xE8,0x1
;/0= 	M_WL	M\ 44 DTST
;/*	sbb	rax,rax	; 8040ADB7 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040ADBA 48 85 C0 
;/*	mov	0x08(rbp),rax	; 8040ADBD 
	DB 0x48,0x8B,0x45,0x8
;/*	lea	0x10(rbp),rbp	; 8040ADC1 
	DB 0x48,0x8D,0x6D,0x10
;/*	jz	_OPTsubRULES+0x363A 	; 8040ADC5 
	DB 0xF,0x84,0x70,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040ADCB 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44,eax	; 8040ADCF 
	DB 0xB8,0x44,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040ADD4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040ADD8 E8 7A B0 FF FF 
;/	35FF OP2@ 1+ W! \ push   X(%rip)
;/*	mov	rax,-0x08(rbp)	; 8040ADDD 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x35FF,-0x10(rbp)	; 8040ADE1 
	DB 0x48,0xC7,0x45,0xF0,0xFF,0x35,0x0,0x0
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040ADE9 
	DB 0x48,0x8B,0x5,0xBB,0xAE,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 8040ADF0 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),edx	; 8040ADF4 
	DB 0x8B,0x55,0xF0
;/*	mov	dx,(rax)	; 8040ADF7 
	DB 0x66,0x89,0x10
;/*	mov	$0x44C539,eax	; 8040ADFA 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/	OP1 OPexcise
;/*	lea	-0x08(rbp),rbp	; 8040ADFF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040AE03 E8 9F B4 FF FF 
;/	OP1 -1 OPresize
;/*	mov	rax,-0x08(rbp)	; 8040AE08 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x44C539,-0x10(rbp)	; 8040AE0C 
	DB 0x48,0xC7,0x45,0xF0,0x39,0xC5,0x44,0x0
;/*	movq	$-0x1,rax	; 8040AE14 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040AE1B 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPresize	; 8040AE1F E8 B9 B2 FF FF 
;/	M\ 45 DTST
;/*	mov	rax,-0x08(rbp)	; 8040AE24 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x45,eax	; 8040AE28 
	DB 0xB8,0x45,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AE2D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040AE31 E8 21 B0 FF FF 
;/	REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040AE36 
	DB 0xE9,0xDA,0xC9,0xFF,0xFF
;/
;/OP2@ C@ 58 XOR	\ pop    %rax
;/*	mov	rax,-0x08(rbp)	; 8040AE3B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040AE3F 
	DB 0x48,0x8B,0x5,0x65,0xAE,0xFF,0xFF
;/*	movzb	(rax),eax	; 8040AE46 
	DB 0xF,0xB6,0x0
;/*	xor	$0x58,al	; 8040AE49 
	DB 0x34,0x58
;/*	mov	rax,-0x10(rbp)	; 8040AE4B 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ L@ FFFFFF AND
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040AE4F 
	DB 0x48,0x8B,0x5,0x48,0xAE,0xFF,0xFF
;/*	mov	(rax),eax	; 8040AE56 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040AE58 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	mov	rax,-0x18(rbp)	; 8040AE5D 
	DB 0x48,0x89,0x45,0xE8
;/ DUP	058948 XOR \ mov %rax,X(%rip)
;/*	xor	$0x58948,rax	; 8040AE61 
	DB 0x48,0x35,0x48,0x89,0x5,0x0
;/*	mov	-0x18(rbp),rdx	; 8040AE67 
	DB 0x48,0x8B,0x55,0xE8
;/ SWAP	458948 <>  AND OR \ mov %rax,X(%rbp)
;/*	mov	rax,-0x18(rbp)	; 8040AE6B 
	DB 0x48,0x89,0x45,0xE8
;/*	mov	rdx,-0x20(rbp)	; 8040AE6F 
	DB 0x48,0x89,0x55,0xE0
;/*	mov	$0x458948,eax	; 8040AE73 
	DB 0xB8,0x48,0x89,0x45,0x0
;/*	xor	-0x20(rbp),rax	; 8040AE78 
	DB 0x48,0x33,0x45,0xE0
;/*		negq	rax	; 8040AE7C 
	DB 0x48,0xF7,0xD8
;/*	sbb	rax,rax	; 8040AE7F 
	DB 0x48,0x19,0xC0
;/*	and	-0x18(rbp),rax	; 8040AE82 
	DB 0x48,0x23,0x45,0xE8
;/*	or	-0x10(rbp),rax	; 8040AE86 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040AE8A 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ NEWRAX0+ OR	\ mov 0x00(%rbp),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040AE8E 
	DB 0x48,0x8B,0x5,0xFC,0xAD,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040AE95 
	DB 0x48,0x8D,0x6D,0xF0
	call	_NEWRAX0add	; 8040AE99 E8 8B BE FF FF 
;/*	or	0x00(rbp),rax	; 8040AE9E 
	DB 0x48,0xB,0x45,0x0
;/*	sub	$0x01,rax	; 8040AEA2 
	DB 0x48,0x83,0xE8,0x1
;/0=	M_WL	M\ 64 DTST
;/*	sbb	rax,rax	; 8040AEA6 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040AEA9 48 85 C0 
;/*	mov	0x08(rbp),rax	; 8040AEAC 
	DB 0x48,0x8B,0x45,0x8
;/*	lea	0x10(rbp),rbp	; 8040AEB0 
	DB 0x48,0x8D,0x6D,0x10
;/*	jz	_OPTsubRULES+0x373C 	; 8040AEB4 
	DB 0xF,0x84,0x83,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040AEBA 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x64,eax	; 8040AEBE 
	DB 0xB8,0x64,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AEC3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040AEC7 E8 8B AF FF FF 
;/	8F OP1@ 1+ C! \ pop   X(%rip)
;/*	mov	rax,-0x08(rbp)	; 8040AECC 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x8F,-0x10(rbp)	; 8040AED0 
	DB 0x48,0xC7,0x45,0xF0,0x8F,0x0,0x0,0x0
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040AED8 
	DB 0x48,0x8B,0x5,0xBF,0xAD,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 8040AEDF 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),dl	; 8040AEE3 
	DB 0x8A,0x55,0xF0
;/*	mov	dl,(rax)	; 8040AEE6 
	DB 0x88,0x10
;/*	movq	$-0x64,rax	; 8040AEE8 
	DB 0x48,0xC7,0xC0,0x9C,0xFF,0xFF,0xFF
;/	-64 DTST
;/*	lea	-0x08(rbp),rbp	; 8040AEEF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040AEF3 E8 5F AF FF FF 
;/	OP1 -1 OPresize
;/*	mov	rax,-0x08(rbp)	; 8040AEF8 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x44C539,-0x10(rbp)	; 8040AEFC 
	DB 0x48,0xC7,0x45,0xF0,0x39,0xC5,0x44,0x0
;/*	movq	$-0x1,rax	; 8040AF04 
	DB 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040AF0B 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPresize	; 8040AF0F E8 C9 B1 FF FF 
;/	OP2 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040AF14 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C541,eax	; 8040AF18 
	DB 0xB8,0x41,0xC5,0x44,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AF1D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040AF21 E8 81 B3 FF FF 
;/	M\ 63 DTST
;/*	mov	rax,-0x08(rbp)	; 8040AF26 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x63,eax	; 8040AF2A 
	DB 0xB8,0x63,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AF2F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040AF33 E8 1F AF FF FF 
;/	REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040AF38 
	DB 0xE9,0xD8,0xC8,0xFF,0xFF
;/
;/OP2@ L@ FFFFFF AND d08948 XOR	\  mov    %rdx,%rax
;/*	mov	rax,-0x08(rbp)	; 8040AF3D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040AF41 
	DB 0x48,0x8B,0x5,0x63,0xAD,0xFF,0xFF
;/*	mov	(rax),eax	; 8040AF48 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040AF4A 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xD08948,eax	; 8040AF4F 
	DB 0x35,0x48,0x89,0xD0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040AF54 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ L@ FFFFFF AND c08548 XOR OR \  test    %rax,%rax
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040AF58 
	DB 0x48,0x8B,0x5,0x3F,0xAD,0xFF,0xFF
;/*	mov	(rax),eax	; 8040AF5F 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040AF61 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xC08548,eax	; 8040AF66 
	DB 0x35,0x48,0x85,0xC0,0x0
;/*	or	-0x10(rbp),rax	; 8040AF6B 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040AF6F 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ NEWRAX0 OR	\ mov 0x00(%rbp),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040AF73 
	DB 0x48,0x8B,0x5,0x17,0xAD,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040AF7A 
	DB 0x48,0x8D,0x6D,0xF0
	call	_NEWRAX0	; 8040AF7E E8 A8 BC FF FF 
;/*	or	0x00(rbp),rax	; 8040AF83 
	DB 0x48,0xB,0x45,0x0
;/*	sub	$0x01,rax	; 8040AF87 
	DB 0x48,0x83,0xE8,0x1
;/0=	M_WL	M\ 66 DTST
;/*	sbb	rax,rax	; 8040AF8B 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040AF8E 48 85 C0 
;/*	mov	0x08(rbp),rax	; 8040AF91 
	DB 0x48,0x8B,0x45,0x8
;/*	lea	0x10(rbp),rbp	; 8040AF95 
	DB 0x48,0x8D,0x6D,0x10
;/*	jz	_OPTsubRULES+0x37F2 	; 8040AF99 
	DB 0xF,0x84,0x54,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040AF9F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x66,eax	; 8040AFA3 
	DB 0xB8,0x66,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AFA8 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040AFAC E8 A6 AE FF FF 
;/	d285 OP2@ 1+ W! \ test   %rdx,%rdx
;/*	mov	rax,-0x08(rbp)	; 8040AFB1 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0xD285,-0x10(rbp)	; 8040AFB5 
	DB 0x48,0xC7,0x45,0xF0,0x85,0xD2,0x0,0x0
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040AFBD 
	DB 0x48,0x8B,0x5,0xE7,0xAC,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 8040AFC4 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),edx	; 8040AFC8 
	DB 0x8B,0x55,0xF0
;/*	mov	dx,(rax)	; 8040AFCB 
	DB 0x66,0x89,0x10
;/*	mov	$0x44C539,eax	; 8040AFCE 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/	OP1 OPexcise
;/*	lea	-0x08(rbp),rbp	; 8040AFD3 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040AFD7 E8 CB B2 FF FF 
;/	M\ 67 DTST
;/*	mov	rax,-0x08(rbp)	; 8040AFDC 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x67,eax	; 8040AFE0 
	DB 0xB8,0x67,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040AFE5 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040AFE9 E8 69 AE FF FF 
;/	REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040AFEE 
	DB 0xE9,0x22,0xC8,0xFF,0xFF
;/
;/OP2@ L@ FFFFFF AND d08948 XOR	\  mov    %rdx,%rax
;/*	mov	rax,-0x08(rbp)	; 8040AFF3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040AFF7 
	DB 0x48,0x8B,0x5,0xAD,0xAC,0xFF,0xFF
;/*	mov	(rax),eax	; 8040AFFE 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040B000 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xD08948,eax	; 8040B005 
	DB 0x35,0x48,0x89,0xD0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040B00A 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ L@ FFFFFF AND 458948 XOR OR \  mov     %rax,-0x08(%rbp)
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040B00E 
	DB 0x48,0x8B,0x5,0x89,0xAC,0xFF,0xFF
;/*	mov	(rax),eax	; 8040B015 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040B017 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458948,eax	; 8040B01C 
	DB 0x35,0x48,0x89,0x45,0x0
;/*	or	-0x10(rbp),rax	; 8040B021 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040B025 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ NEWRAX0 OR	\ mov 0x00(%rbp),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040B029 
	DB 0x48,0x8B,0x5,0x61,0xAC,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040B030 
	DB 0x48,0x8D,0x6D,0xF0
	call	_NEWRAX0	; 8040B034 E8 F2 BB FF FF 
;/*	or	0x00(rbp),rax	; 8040B039 
	DB 0x48,0xB,0x45,0x0
;/*	sub	$0x01,rax	; 8040B03D 
	DB 0x48,0x83,0xE8,0x1
;/0= \ 0 and
;/*	sbb	rax,rax	; 8040B041 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040B044 48 85 C0 
;/*	mov	0x08(rbp),rax	; 8040B047 
	DB 0x48,0x8B,0x45,0x8
;/ M_WL	M\ 98 DTST
;/*	lea	0x10(rbp),rbp	; 8040B04B 
	DB 0x48,0x8D,0x6D,0x10
;/*	jz	_OPTsubRULES+0x38A7 	; 8040B04F 
	DB 0xF,0x84,0x53,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040B055 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x98,eax	; 8040B059 
	DB 0xB8,0x98,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B05E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040B062 E8 F0 AD FF FF 
;/	55 OP1@ 2+ C! \ mov    %rdx,-0x8(%rbp)
;/*	mov	rax,-0x08(rbp)	; 8040B067 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x55,-0x10(rbp)	; 8040B06B 
	DB 0x48,0xC7,0x45,0xF0,0x55,0x0,0x0,0x0
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040B073 
	DB 0x48,0x8B,0x5,0x24,0xAC,0xFF,0xFF
;/*	lea	0x02(rax),rax	; 8040B07A 
	DB 0x48,0x8D,0x40,0x2
;/*	mov	-0x10(rbp),dl	; 8040B07E 
	DB 0x8A,0x55,0xF0
;/*	mov	dl,(rax)	; 8040B081 
	DB 0x88,0x10
;/*	mov	$0x44C541,eax	; 8040B083 
	DB 0xB8,0x41,0xC5,0x44,0x0
;/	OP2 OPexcise
;/*	lea	-0x08(rbp),rbp	; 8040B088 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040B08C E8 16 B2 FF FF 
;/	M\ 99 DTST
;/*	mov	rax,-0x08(rbp)	; 8040B091 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x99,eax	; 8040B095 
	DB 0xB8,0x99,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B09A 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040B09E E8 B4 AD FF FF 
;/	REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040B0A3 
	DB 0xE9,0x6D,0xC7,0xFF,0xFF
;/
;/OP2@ 3 + C@  OP0@ 3 + C@ XOR
;/*	mov	rax,-0x08(rbp)	; 8040B0A8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040B0AC 
	DB 0x48,0x8B,0x5,0xF8,0xAB,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 8040B0B3 
	DB 0xF,0xB6,0x40,0x3
;/*	mov	rax,-0x10(rbp)	; 8040B0B7 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040B0BB 
	DB 0x48,0x8B,0x5,0xCF,0xAB,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 8040B0C2 
	DB 0xF,0xB6,0x40,0x3
;/*	xor	-0x10(rbp),rax	; 8040B0C6 
	DB 0x48,0x33,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040B0CA 
	DB 0x48,0x89,0x45,0xF0
;/OP2@ 3 + C@  OP1@ 3 + C@ = OR
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040B0CE 
	DB 0x48,0x8B,0x5,0xD6,0xAB,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 8040B0D5 
	DB 0xF,0xB6,0x40,0x3
;/*	mov	rax,-0x18(rbp)	; 8040B0D9 
	DB 0x48,0x89,0x45,0xE8
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040B0DD 
	DB 0x48,0x8B,0x5,0xBA,0xAB,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 8040B0E4 
	DB 0xF,0xB6,0x40,0x3
;/*	xor	-0x18(rbp),rax	; 8040B0E8 
	DB 0x48,0x33,0x45,0xE8
;/*	sub	$0x01,rax	; 8040B0EC 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 8040B0F0 
	DB 0x48,0x19,0xC0
;/*	or	-0x10(rbp),rax	; 8040B0F3 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040B0F7 
	DB 0x48,0x89,0x45,0xF0
;/OP2@ L@ FFFFFF AND 558948 XOR OR \ mov     %rdx,-0x10(%rbp)
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040B0FB 
	DB 0x48,0x8B,0x5,0xA9,0xAB,0xFF,0xFF
;/*	mov	(rax),eax	; 8040B102 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040B104 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x558948,eax	; 8040B109 
	DB 0x35,0x48,0x89,0x55,0x0
;/*	or	-0x10(rbp),rax	; 8040B10E 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040B112 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ L@ FFFFFF AND 458948 XOR OR \ mov     %rax,-0x18(%rbp)
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040B116 
	DB 0x48,0x8B,0x5,0x81,0xAB,0xFF,0xFF
;/*	mov	(rax),eax	; 8040B11D 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040B11F 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458948,eax	; 8040B124 
	DB 0x35,0x48,0x89,0x45,0x0
;/*	or	-0x10(rbp),rax	; 8040B129 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040B12D 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ FFFFFF AND 458b48 XOR OR \ mov     -0x10(%rbp),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040B131 
	DB 0x48,0x8B,0x5,0x59,0xAB,0xFF,0xFF
;/*	mov	(rax),eax	; 8040B138 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040B13A 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458B48,eax	; 8040B13F 
	DB 0x35,0x48,0x8B,0x45,0x0
;/*	or	-0x10(rbp),rax	; 8040B144 
	DB 0x48,0xB,0x45,0xF0
;/*	sub	$0x01,rax	; 8040B148 
	DB 0x48,0x83,0xE8,0x1
;/0=	M_WL	M\ 5C DTST
;/*	sbb	rax,rax	; 8040B14C 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040B14F 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040B152 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_OPTsubRULES+0x39A5 	; 8040B156 
	DB 0xF,0x84,0x4A,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040B15C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x5C,eax	; 8040B160 
	DB 0xB8,0x5C,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B165 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040B169 E8 E9 AC FF FF 
;/   d089 OP0@ 1+ W! -1 ALLOT \ 	mov    %rdx,%rax
;/*	mov	rax,-0x08(rbp)	; 8040B16E 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0xD089,-0x10(rbp)	; 8040B172 
	DB 0x48,0xC7,0x45,0xF0,0x89,0xD0,0x0,0x0
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040B17A 
	DB 0x48,0x8B,0x5,0x10,0xAB,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 8040B181 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),edx	; 8040B185 
	DB 0x8B,0x55,0xF0
;/*	mov	dx,(rax)	; 8040B188 
	DB 0x66,0x89,0x10
;/*	add	$-0x01,_HsubSTDOUT+0x18 (%rip)	; 8040B18B 
	DB 0x48,0x83,0x5,0x89,0x9A,0xFF,0xFF,0xFF
;/*	mov	$0x5B,eax	; 8040B193 
	DB 0xB8,0x5B,0x0,0x0,0x0
;/		M\ 5B DTST
;/*	lea	-0x08(rbp),rbp	; 8040B198 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040B19C E8 B6 AC FF FF 
;/	REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040B1A1 
	DB 0xE9,0x6F,0xC6,0xFF,0xFF
;/
;/OP2@ 3 + C@  OP0@ 3 + C@ XOR
;/*	mov	rax,-0x08(rbp)	; 8040B1A6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040B1AA 
	DB 0x48,0x8B,0x5,0xFA,0xAA,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 8040B1B1 
	DB 0xF,0xB6,0x40,0x3
;/*	mov	rax,-0x10(rbp)	; 8040B1B5 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040B1B9 
	DB 0x48,0x8B,0x5,0xD1,0xAA,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 8040B1C0 
	DB 0xF,0xB6,0x40,0x3
;/*	xor	-0x10(rbp),rax	; 8040B1C4 
	DB 0x48,0x33,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040B1C8 
	DB 0x48,0x89,0x45,0xF0
;/OP2@ L@ FFFFFF AND 458948 XOR OR \      mov     %rax,X(%rbp)
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040B1CC 
	DB 0x48,0x8B,0x5,0xD8,0xAA,0xFF,0xFF
;/*	mov	(rax),eax	; 8040B1D3 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040B1D5 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458948,eax	; 8040B1DA 
	DB 0x35,0x48,0x89,0x45,0x0
;/*	or	-0x10(rbp),rax	; 8040B1DF 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040B1E3 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ @  80000000FF AND B8 XOR OR \      movq    $0x30,%rax
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040B1E7 
	DB 0x48,0x8B,0x5,0xB0,0xAA,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B1EE 
	DB 0x48,0x8B,0x0
;/*	mov	rax,-0x18(rbp)	; 8040B1F1 
	DB 0x48,0x89,0x45,0xE8
;/*	movabs	$0x80000000FF,%rax	; 8040B1F5 
	DB 0x48,0xB8,0xFF,0x0,0x0,0x0,0x80,0x0,0x0,0x0
;/*	and	-0x18(rbp),rax	; 8040B1FF 
	DB 0x48,0x23,0x45,0xE8
;/*	xor	$0xB8,rax	; 8040B203 
	DB 0x48,0x35,0xB8,0x0,0x0,0x0
;/*	or	-0x10(rbp),rax	; 8040B209 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040B20D 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ @ FFFFFF AND 453948 XOR	\	cmp     %rax,-0x08(%rbp)
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040B211 
	DB 0x48,0x8B,0x5,0x79,0xAA,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B218 
	DB 0x48,0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040B21B 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x453948,eax	; 8040B220 
	DB 0x35,0x48,0x39,0x45,0x0
;/*	mov	rax,-0x18(rbp)	; 8040B225 
	DB 0x48,0x89,0x45,0xE8
;/OP0@ L@ ADD|OR|AND|XOR<> AND OR \	__  X(%rbp),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040B229 
	DB 0x48,0x8B,0x5,0x61,0xAA,0xFF,0xFF
;/*	mov	(rax),eax	; 8040B230 
	DB 0x8B,0x0
;/*	lea	-0x18(rbp),rbp	; 8040B232 
	DB 0x48,0x8D,0x6D,0xE8
	call	_ADDlORlANDlXORlessgreat	; 8040B236 E8 88 B2 FF FF 
;/*	and	0x00(rbp),rax	; 8040B23B 
	DB 0x48,0x23,0x45,0x0
;/*	or	0x08(rbp),rax	; 8040B23F 
	DB 0x48,0xB,0x45,0x8
;/*	sub	$0x01,rax	; 8040B243 
	DB 0x48,0x83,0xE8,0x1
;/0=	M_WL	M\ 4A DTST
;/*	sbb	rax,rax	; 8040B247 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040B24A 48 85 C0 
;/*	mov	0x10(rbp),rax	; 8040B24D 
	DB 0x48,0x8B,0x45,0x10
;/*	lea	0x18(rbp),rbp	; 8040B251 
	DB 0x48,0x8D,0x6D,0x18
;/*	jz	_OPTsubRULES+0x3B53 	; 8040B255 
	DB 0xF,0x84,0xF9,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040B25B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x4A,eax	; 8040B25F 
	DB 0xB8,0x4A,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B264 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040B268 E8 EA AB FF FF 
;/	OP1@ 1+ L@ 
;/*	mov	rax,-0x08(rbp)	; 8040B26D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040B271 
	DB 0x48,0x8B,0x5,0x26,0xAA,0xFF,0xFF
;/*	mov	0x01(rax),eax	; 8040B278 
	DB 0x8B,0x40,0x1
;/*	mov	rax,-0x10(rbp)	; 8040B27B 
	DB 0x48,0x89,0x45,0xF0
;/	6 OP0@ 1+ XOR! 
;/*	movq	$0x6,-0x18(rbp)	; 8040B27F 
	DB 0x48,0xC7,0x45,0xE8,0x6,0x0,0x0,0x0
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040B287 
	DB 0x48,0x8B,0x5,0x3,0xAA,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 8040B28E 
	DB 0x48,0x8D,0x40,0x1
;/*	lea	-0x18(rbp),rbp	; 8040B292 
	DB 0x48,0x8D,0x6D,0xE8
	call	_XORsave	; 8040B296 E8 C2 8F FF FF 
;/	OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040B29B 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 8040B29F 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B2A4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040B2A8 E8 FA AF FF FF 
;/        2 ALLOT
;/*	add	$0x02,_HsubSTDOUT+0x18 (%rip)	; 8040B2AD 
	DB 0x48,0x83,0x5,0x67,0x99,0xFF,0xFF,0x2
;/        OP0 @ 2+ L!
;/*	mov	rax,-0x08(rbp)	; 8040B2B5 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_LASTsubHERE+0xD (%rip),rax	; 8040B2B9 
	DB 0x48,0x8B,0x5,0x87,0xA8,0xFF,0xFF
;/*	lea	0x02(rax),rax	; 8040B2C0 
	DB 0x48,0x8D,0x40,0x2
;/*	mov	-0x08(rbp),edx	; 8040B2C4 
	DB 0x8B,0x55,0xF8
;/*	mov	edx,(rax)	; 8040B2C7 
	DB 0x89,0x10
;/*	mov	_LASTsubHERE+0xD (%rip),rax	; 8040B2C9 
	DB 0x48,0x8B,0x5,0x77,0xA8,0xFF,0xFF
;/*	movzw	(rax),eax	; 8040B2D0 
	DB 0xF,0xB7,0x0
;/	OP0 @ W@ 3F48 =
;/*	xor	$0x3F48,rax	; 8040B2D3 
	DB 0x48,0x35,0x48,0x3F,0x0,0x0
;/*	sub	$0x01,rax	; 8040B2D9 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 8040B2DD 
	DB 0x48,0x19,0xC0
;/	IF	3D48 OP0 @ W!	\ cmp    $0x30,%rax
	test	rax,rax	; 8040B2E0 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040B2E3 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040B2E7 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x3B3C 	; 8040B2EB 
	DB 0xF,0x84,0x4C,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040B2F1 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x3D48,-0x10(rbp)	; 8040B2F5 
	DB 0x48,0xC7,0x45,0xF0,0x48,0x3D,0x0,0x0
;/*	mov	_LASTsubHERE+0xD (%rip),rax	; 8040B2FD 
	DB 0x48,0x8B,0x5,0x43,0xA8,0xFF,0xFF
;/*	mov	-0x10(rbp),edx	; 8040B304 
	DB 0x8B,0x55,0xF0
;/*	mov	dx,(rax)	; 8040B307 
	DB 0x66,0x89,0x10
;/*	mov	-0x08(rbp),rax	; 8040B30A 
	DB 0x48,0x8B,0x45,0xF8
;/		SetOP B8 C, OP1 @ 2+ L@ L, \ movq    $0x30,%rax
	call	_SetOP	; 8040B30E E8 F2 A9 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B313 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xB8,eax	; 8040B317 
	DB 0xB8,0xB8,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B31C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Ccom	; 8040B320 E8 95 99 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040B325 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 8040B329 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	mov	(rax),rax	; 8040B32E 
	DB 0x48,0x8B,0x0
;/*	mov	0x02(rax),eax	; 8040B331 
	DB 0x8B,0x40,0x2
;/*	lea	-0x08(rbp),rbp	; 8040B334 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Lcom	; 8040B338 E8 3A 99 FF FF 
;/	THEN
;/	M\ 4B DTST
;/*	mov	rax,-0x08(rbp)	; 8040B33D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x4B,eax	; 8040B341 
	DB 0xB8,0x4B,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B346 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040B34A E8 8 AB FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040B34F 
	DB 0xE9,0xC1,0xC4,0xFF,0xFF
;/
;/OP2@ L@  24048B48  XOR		\ movq    (%rsp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040B354 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040B358 
	DB 0x48,0x8B,0x5,0x4C,0xA9,0xFF,0xFF
;/*	mov	(rax),eax	; 8040B35F 
	DB 0x8B,0x0
;/*	xor	$0x24048B48,rax	; 8040B361 
	DB 0x48,0x35,0x48,0x8B,0x4,0x24
;/*	mov	rax,-0x10(rbp)	; 8040B367 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ @ FFFFFF AND F88348 XOR OR	\ cmp     $-2,%rax
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040B36B 
	DB 0x48,0x8B,0x5,0x2C,0xA9,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B372 
	DB 0x48,0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040B375 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xF88348,eax	; 8040B37A 
	DB 0x35,0x48,0x83,0xF8,0x0
;/*	or	-0x10(rbp),rax	; 8040B37F 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040B383 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ NEWRAX0+ OR
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040B387 
	DB 0x48,0x8B,0x5,0x3,0xA9,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040B38E 
	DB 0x48,0x8D,0x6D,0xF0
	call	_NEWRAX0add	; 8040B392 E8 92 B9 FF FF 
;/*	or	0x00(rbp),rax	; 8040B397 
	DB 0x48,0xB,0x45,0x0
;/*	sub	$0x01,rax	; 8040B39B 
	DB 0x48,0x83,0xE8,0x1
;/0=	M_WL	M\ 72 DTST
;/*	sbb	rax,rax	; 8040B39F 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040B3A2 48 85 C0 
;/*	mov	0x08(rbp),rax	; 8040B3A5 
	DB 0x48,0x8B,0x45,0x8
;/*	lea	0x10(rbp),rbp	; 8040B3A9 
	DB 0x48,0x8D,0x6D,0x10
;/*	jz	_OPTsubRULES+0x3C1B 	; 8040B3AD 
	DB 0xF,0x84,0x69,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040B3B3 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x72,eax	; 8040B3B7 
	DB 0xB8,0x72,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B3BC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040B3C0 E8 92 AA FF FF 
;/	OP1 1 OPresize
;/*	mov	rax,-0x08(rbp)	; 8040B3C5 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x44C539,-0x10(rbp)	; 8040B3C9 
	DB 0x48,0xC7,0x45,0xF0,0x39,0xC5,0x44,0x0
;/*	mov	$0x1,eax	; 8040B3D1 
	DB 0xB8,0x1,0x0,0x0,0x0
;/*	lea	-0x10(rbp),rbp	; 8040B3D6 
	DB 0x48,0x8D,0x6D,0xF0
	call	_OPresize	; 8040B3DA E8 FE AC FF FF 
;/	243c8348  OP1@ L!  \ cmpq   $-2,(%rsp)
;/*	mov	rax,-0x08(rbp)	; 8040B3DF 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x243C8348,-0x10(rbp)	; 8040B3E3 
	DB 0x48,0xC7,0x45,0xF0,0x48,0x83,0x3C,0x24
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040B3EB 
	DB 0x48,0x8B,0x5,0xAC,0xA8,0xFF,0xFF
;/*	mov	-0x10(rbp),edx	; 8040B3F2 
	DB 0x8B,0x55,0xF0
;/*	mov	edx,(rax)	; 8040B3F5 
	DB 0x89,0x10
;/*	mov	$0x44C541,eax	; 8040B3F7 
	DB 0xB8,0x41,0xC5,0x44,0x0
;/	OP2 OPexcise
;/*	lea	-0x08(rbp),rbp	; 8040B3FC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040B400 E8 A2 AE FF FF 
;/	M\ 71 DTST
;/*	mov	rax,-0x08(rbp)	; 8040B405 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x71,eax	; 8040B409 
	DB 0xB8,0x71,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B40E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040B412 E8 40 AA FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040B417 
	DB 0xE9,0xF9,0xC3,0xFF,0xFF
;/
;/OP2@ NEWRAX0
;/*	mov	rax,-0x08(rbp)	; 8040B41C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040B420 
	DB 0x48,0x8B,0x5,0x84,0xA8,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040B427 
	DB 0x48,0x8D,0x6D,0xF8
	call	_NEWRAX0	; 8040B42B E8 FB B7 FF FF 
;/OP1@ AX_apply<> OR
;/*	mov	rax,-0x08(rbp)	; 8040B430 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040B434 
	DB 0x48,0x8B,0x5,0x63,0xA8,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040B43B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_AX_applylessgreat	; 8040B43F E8 7 B9 FF FF 
;/*	or	0x00(rbp),rax	; 8040B444 
	DB 0x48,0xB,0x45,0x0
;/*	mov	rax,0x00(rbp)	; 8040B448 
	DB 0x48,0x89,0x45,0x0
;/OP0@ NEWRAX0+ OR
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040B44C 
	DB 0x48,0x8B,0x5,0x3E,0xA8,0xFF,0xFF
	call	_NEWRAX0add	; 8040B453 E8 D1 B8 FF FF 
;/*	or	0x00(rbp),rax	; 8040B458 
	DB 0x48,0xB,0x45,0x0
;/*	sub	$0x01,rax	; 8040B45C 
	DB 0x48,0x83,0xE8,0x1
;/0=	M_WL	M\ 72 DTST
;/*	sbb	rax,rax	; 8040B460 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040B463 48 85 C0 
;/*	mov	0x08(rbp),rax	; 8040B466 
	DB 0x48,0x8B,0x45,0x8
;/*	lea	0x10(rbp),rbp	; 8040B46A 
	DB 0x48,0x8D,0x6D,0x10
;/*	jz	_OPTsubRULES+0x3CAE 	; 8040B46E 
	DB 0xF,0x84,0x3B,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040B474 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x72,eax	; 8040B478 
	DB 0xB8,0x72,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B47D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040B481 E8 D1 A9 FF FF 
;/	OP2 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040B486 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C541,eax	; 8040B48A 
	DB 0xB8,0x41,0xC5,0x44,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B48F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040B493 E8 F AE FF FF 
;/	M\ 71 DTST
;/*	mov	rax,-0x08(rbp)	; 8040B498 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x71,eax	; 8040B49C 
	DB 0xB8,0x71,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B4A1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040B4A5 E8 AD A9 FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040B4AA 
	DB 0xE9,0x66,0xC3,0xFF,0xFF
;/
;/
;/OP2@ 3 + C@  OP0@ 3 + C@ XOR
;/*	mov	rax,-0x08(rbp)	; 8040B4AF 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040B4B3 
	DB 0x48,0x8B,0x5,0xF1,0xA7,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 8040B4BA 
	DB 0xF,0xB6,0x40,0x3
;/*	mov	rax,-0x10(rbp)	; 8040B4BE 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040B4C2 
	DB 0x48,0x8B,0x5,0xC8,0xA7,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 8040B4C9 
	DB 0xF,0xB6,0x40,0x3
;/*	xor	-0x10(rbp),rax	; 8040B4CD 
	DB 0x48,0x33,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040B4D1 
	DB 0x48,0x89,0x45,0xF0
;/OP2@ L@ FFFFFF AND 458948 XOR OR \ mov     %rax,X(%rbp)
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040B4D5 
	DB 0x48,0x8B,0x5,0xCF,0xA7,0xFF,0xFF
;/*	mov	(rax),eax	; 8040B4DC 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040B4DE 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458948,eax	; 8040B4E3 
	DB 0x35,0x48,0x89,0x45,0x0
;/*	or	-0x10(rbp),rax	; 8040B4E8 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040B4EC 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ L@ 24048B48 XOR		\ movq    (%rsp),%rax
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040B4F0 
	DB 0x48,0x8B,0x5,0xA7,0xA7,0xFF,0xFF
;/*	mov	(rax),eax	; 8040B4F7 
	DB 0x8B,0x0
;/*	xor	$0x24048B48,rax	; 8040B4F9 
	DB 0x48,0x35,0x48,0x8B,0x4,0x24
;/*	mov	rax,-0x18(rbp)	; 8040B4FF 
	DB 0x48,0x89,0x45,0xE8
;/OP1@ L@ FFFFFF AND 058B48 <> AND OR \       mov X(%rip),%rax
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040B503 
	DB 0x48,0x8B,0x5,0x94,0xA7,0xFF,0xFF
;/*	mov	(rax),eax	; 8040B50A 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040B50C 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x58B48,rax	; 8040B511 
	DB 0x48,0x35,0x48,0x8B,0x5,0x0
;/*		negq	rax	; 8040B517 
	DB 0x48,0xF7,0xD8
;/*	sbb	rax,rax	; 8040B51A 
	DB 0x48,0x19,0xC0
;/*	and	-0x18(rbp),rax	; 8040B51D 
	DB 0x48,0x23,0x45,0xE8
;/*	or	-0x10(rbp),rax	; 8040B521 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040B525 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ ADD|OR|AND|XOR<> OR	\ __  X(%rbp),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040B529 
	DB 0x48,0x8B,0x5,0x61,0xA7,0xFF,0xFF
;/*	mov	(rax),eax	; 8040B530 
	DB 0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040B532 
	DB 0x48,0x8D,0x6D,0xF0
	call	_ADDlORlANDlXORlessgreat	; 8040B536 E8 88 AF FF FF 
;/*	or	0x00(rbp),rax	; 8040B53B 
	DB 0x48,0xB,0x45,0x0
;/*	sub	$0x01,rax	; 8040B53F 
	DB 0x48,0x83,0xE8,0x1
;/0=	M_WL	M\ 62 DTST
;/*	sbb	rax,rax	; 8040B543 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040B546 48 85 C0 
;/*	mov	0x08(rbp),rax	; 8040B549 
	DB 0x48,0x8B,0x45,0x8
;/*	lea	0x10(rbp),rbp	; 8040B54D 
	DB 0x48,0x8D,0x6D,0x10
;/*	jz	_OPTsubRULES+0x3DB8 	; 8040B551 
	DB 0xF,0x84,0x62,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040B557 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x62,eax	; 8040B55B 
	DB 0xB8,0x62,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B560 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040B564 E8 EE A8 FF FF 
;/	OP0@ 1+ C@  OP1@ 1+ C!	\  add    (%rsp),%rax
;/*	mov	rax,-0x08(rbp)	; 8040B569 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040B56D 
	DB 0x48,0x8B,0x5,0x1D,0xA7,0xFF,0xFF
;/*	movzb	0x01(rax),eax	; 8040B574 
	DB 0xF,0xB6,0x40,0x1
;/*	mov	rax,-0x10(rbp)	; 8040B578 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040B57C 
	DB 0x48,0x8B,0x5,0x1B,0xA7,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 8040B583 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),dl	; 8040B587 
	DB 0x8A,0x55,0xF0
;/*	mov	dl,(rax)	; 8040B58A 
	DB 0x88,0x10
;/*	mov	$0x44C539,eax	; 8040B58C 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/	OP1 ToOP0
;/*	lea	-0x08(rbp),rbp	; 8040B591 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 8040B595 E8 E1 A7 FF FF 
;/	-4 ALLOT	
;/*	add	$-0x04,_HsubSTDOUT+0x18 (%rip)	; 8040B59A 
	DB 0x48,0x83,0x5,0x7A,0x96,0xFF,0xFF,0xFC
;/	M\ 63 DTST
;/*	mov	rax,-0x08(rbp)	; 8040B5A2 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x63,eax	; 8040B5A6 
	DB 0xB8,0x63,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B5AB 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040B5AF E8 A3 A8 FF FF 
;/	REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040B5B4 
	DB 0xE9,0x5C,0xC2,0xFF,0xFF
;/
;/
;/OP2@ 3 + C@  OP0@ 3 + C@ XOR
;/*	mov	rax,-0x08(rbp)	; 8040B5B9 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040B5BD 
	DB 0x48,0x8B,0x5,0xE7,0xA6,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 8040B5C4 
	DB 0xF,0xB6,0x40,0x3
;/*	mov	rax,-0x10(rbp)	; 8040B5C8 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040B5CC 
	DB 0x48,0x8B,0x5,0xBE,0xA6,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 8040B5D3 
	DB 0xF,0xB6,0x40,0x3
;/*	xor	-0x10(rbp),rax	; 8040B5D7 
	DB 0x48,0x33,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040B5DB 
	DB 0x48,0x89,0x45,0xF0
;/OP2@ @ FFFFFF AND 558948 XOR OR \ mov     %rdx,-0x18(%rbp)
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040B5DF 
	DB 0x48,0x8B,0x5,0xC5,0xA6,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B5E6 
	DB 0x48,0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040B5E9 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x558948,eax	; 8040B5EE 
	DB 0x35,0x48,0x89,0x55,0x0
;/*	or	-0x10(rbp),rax	; 8040B5F3 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040B5F7 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ DX_apply<> OR
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040B5FB 
	DB 0x48,0x8B,0x5,0x9C,0xA6,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040B602 
	DB 0x48,0x8D,0x6D,0xF0
	call	_DX_applylessgreat	; 8040B606 E8 B8 B9 FF FF 
;/*	or	0x00(rbp),rax	; 8040B60B 
	DB 0x48,0xB,0x45,0x0
;/*	mov	rax,0x00(rbp)	; 8040B60F 
	DB 0x48,0x89,0x45,0x0
;/OP0@ @ FFFFFF AND 558b48 XOR OR \ mov     -0x18(%rbp),%rdx
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040B613 
	DB 0x48,0x8B,0x5,0x77,0xA6,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B61A 
	DB 0x48,0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040B61D 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x558B48,eax	; 8040B622 
	DB 0x35,0x48,0x8B,0x55,0x0
;/*	or	0x00(rbp),rax	; 8040B627 
	DB 0x48,0xB,0x45,0x0
;/*	sub	$0x01,rax	; 8040B62B 
	DB 0x48,0x83,0xE8,0x1
;/0=	M_WL	M\ 60 DTST
;/*	sbb	rax,rax	; 8040B62F 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040B632 48 85 C0 
;/*	mov	0x08(rbp),rax	; 8040B635 
	DB 0x48,0x8B,0x45,0x8
;/*	lea	0x10(rbp),rbp	; 8040B639 
	DB 0x48,0x8D,0x6D,0x10
;/*	jz	_OPTsubRULES+0x3E85 	; 8040B63D 
	DB 0xF,0x84,0x43,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040B643 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x60,eax	; 8040B647 
	DB 0xB8,0x60,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B64C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040B650 E8 2 A8 FF FF 
;/         OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 8040B655 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 8040B659 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B65E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 8040B662 E8 14 A7 FF FF 
;/        -4 ALLOT	
;/*	add	$-0x04,_HsubSTDOUT+0x18 (%rip)	; 8040B667 
	DB 0x48,0x83,0x5,0xAD,0x95,0xFF,0xFF,0xFC
;/	M\ 61 DTST
;/*	mov	rax,-0x08(rbp)	; 8040B66F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x61,eax	; 8040B673 
	DB 0xB8,0x61,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B678 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040B67C E8 D6 A7 FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040B681 
	DB 0xE9,0x8F,0xC1,0xFF,0xFF
;/
;/OP2@ 3 + C@  OP0@ 2+ C@ XOR
;/*	mov	rax,-0x08(rbp)	; 8040B686 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040B68A 
	DB 0x48,0x8B,0x5,0x1A,0xA6,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 8040B691 
	DB 0xF,0xB6,0x40,0x3
;/*	mov	rax,-0x10(rbp)	; 8040B695 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040B699 
	DB 0x48,0x8B,0x5,0xF1,0xA5,0xFF,0xFF
;/*	movzb	0x02(rax),eax	; 8040B6A0 
	DB 0xF,0xB6,0x40,0x2
;/*	xor	-0x10(rbp),rax	; 8040B6A4 
	DB 0x48,0x33,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040B6A8 
	DB 0x48,0x89,0x45,0xF0
;/OP2@ @ FFFFFF AND 45C748 XOR OR \ movq    $0x0,-0x10(%rbp)
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040B6AC 
	DB 0x48,0x8B,0x5,0xF8,0xA5,0xFF,0xFF
;/*	mov	(rax),rax	; 8040B6B3 
	DB 0x48,0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040B6B6 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x45C748,eax	; 8040B6BB 
	DB 0x35,0x48,0xC7,0x45,0x0
;/*	or	-0x10(rbp),rax	; 8040B6C0 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040B6C4 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ DX_apply<> OR
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040B6C8 
	DB 0x48,0x8B,0x5,0xCF,0xA5,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040B6CF 
	DB 0x48,0x8D,0x6D,0xF0
	call	_DX_applylessgreat	; 8040B6D3 E8 EB B8 FF FF 
;/*	or	0x00(rbp),rax	; 8040B6D8 
	DB 0x48,0xB,0x45,0x0
;/*	mov	rax,0x00(rbp)	; 8040B6DC 
	DB 0x48,0x89,0x45,0x0
;/OP0@ W@ 558A XOR OR \ mov     -0x10(%rbp),%dl
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040B6E0 
	DB 0x48,0x8B,0x5,0xAA,0xA5,0xFF,0xFF
;/*	movzw	(rax),eax	; 8040B6E7 
	DB 0xF,0xB7,0x0
;/*	xor	$0x558A,rax	; 8040B6EA 
	DB 0x48,0x35,0x8A,0x55,0x0,0x0
;/*	or	0x00(rbp),rax	; 8040B6F0 
	DB 0x48,0xB,0x45,0x0
;/*	sub	$0x01,rax	; 8040B6F4 
	DB 0x48,0x83,0xE8,0x1
;/0=	M_WL	M\ 8A DTST
;/*	sbb	rax,rax	; 8040B6F8 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040B6FB 48 85 C0 
;/*	mov	0x08(rbp),rax	; 8040B6FE 
	DB 0x48,0x8B,0x45,0x8
;/*	lea	0x10(rbp),rbp	; 8040B702 
	DB 0x48,0x8D,0x6D,0x10
;/*	jz	_OPTsubRULES+0x3F6F 	; 8040B706 
	DB 0xF,0x84,0x64,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040B70C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x8A,eax	; 8040B710 
	DB 0xB8,0x8A,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B715 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040B719 E8 39 A7 FF FF 
;/	OP2@ 4 + C@ OP0@ 1+ C!
;/*	mov	rax,-0x08(rbp)	; 8040B71E 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040B722 
	DB 0x48,0x8B,0x5,0x82,0xA5,0xFF,0xFF
;/*	movzb	0x04(rax),eax	; 8040B729 
	DB 0xF,0xB6,0x40,0x4
;/*	mov	rax,-0x10(rbp)	; 8040B72D 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040B731 
	DB 0x48,0x8B,0x5,0x59,0xA5,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 8040B738 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),dl	; 8040B73C 
	DB 0x8A,0x55,0xF0
;/*	mov	dl,(rax)	; 8040B73F 
	DB 0x88,0x10
;/*	movq	$0xB2,-0x10(rbp)	; 8040B741 
	DB 0x48,0xC7,0x45,0xF0,0xB2,0x0,0x0,0x0
;/	B2 OP0@ C! \ mov    $0x0,%dl
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040B749 
	DB 0x48,0x8B,0x5,0x41,0xA5,0xFF,0xFF
;/*	mov	-0x10(rbp),dl	; 8040B750 
	DB 0x8A,0x55,0xF0
;/*	mov	dl,(rax)	; 8040B753 
	DB 0x88,0x10
;/*	add	$-0x01,_HsubSTDOUT+0x18 (%rip)	; 8040B755 
	DB 0x48,0x83,0x5,0xBF,0x94,0xFF,0xFF,0xFF
;/	-1 ALLOT
;/*	mov	$0x8B,eax	; 8040B75D 
	DB 0xB8,0x8B,0x0,0x0,0x0
;/	M\ 8B DTST
;/*	lea	-0x08(rbp),rbp	; 8040B762 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040B766 E8 EC A6 FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040B76B 
	DB 0xE9,0xA5,0xC0,0xFF,0xFF
;/
;/OP2@ 3 + C@  OP0@ 3 + C@ XOR
;/*	mov	rax,-0x08(rbp)	; 8040B770 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040B774 
	DB 0x48,0x8B,0x5,0x30,0xA5,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 8040B77B 
	DB 0xF,0xB6,0x40,0x3
;/*	mov	rax,-0x10(rbp)	; 8040B77F 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040B783 
	DB 0x48,0x8B,0x5,0x7,0xA5,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 8040B78A 
	DB 0xF,0xB6,0x40,0x3
;/*	xor	-0x10(rbp),rax	; 8040B78E 
	DB 0x48,0x33,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040B792 
	DB 0x48,0x89,0x45,0xF0
;/OP2@ 3 + C@  OP1@ 3 + C@ = OR
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040B796 
	DB 0x48,0x8B,0x5,0xE,0xA5,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 8040B79D 
	DB 0xF,0xB6,0x40,0x3
;/*	mov	rax,-0x18(rbp)	; 8040B7A1 
	DB 0x48,0x89,0x45,0xE8
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040B7A5 
	DB 0x48,0x8B,0x5,0xF2,0xA4,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 8040B7AC 
	DB 0xF,0xB6,0x40,0x3
;/*	xor	-0x18(rbp),rax	; 8040B7B0 
	DB 0x48,0x33,0x45,0xE8
;/*	sub	$0x01,rax	; 8040B7B4 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 8040B7B8 
	DB 0x48,0x19,0xC0
;/*	or	-0x10(rbp),rax	; 8040B7BB 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040B7BF 
	DB 0x48,0x89,0x45,0xF0
;/OP2@ L@ FFFFFF AND 458948 XOR OR \ mov     %rax,X(%rbp)
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040B7C3 
	DB 0x48,0x8B,0x5,0xE1,0xA4,0xFF,0xFF
;/*	mov	(rax),eax	; 8040B7CA 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040B7CC 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458948,eax	; 8040B7D1 
	DB 0x35,0x48,0x89,0x45,0x0
;/*	or	-0x10(rbp),rax	; 8040B7D6 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040B7DA 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ L@ FFFFFF AND 458B48 XOR OR \ movq    0x00(%rbp),%rax
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040B7DE 
	DB 0x48,0x8B,0x5,0xB9,0xA4,0xFF,0xFF
;/*	mov	(rax),eax	; 8040B7E5 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040B7E7 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458B48,eax	; 8040B7EC 
	DB 0x35,0x48,0x8B,0x45,0x0
;/*	or	-0x10(rbp),rax	; 8040B7F1 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040B7F5 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ ADD|OR|AND|XOR<> OR	\ __  X(%rbp),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040B7F9 
	DB 0x48,0x8B,0x5,0x91,0xA4,0xFF,0xFF
;/*	mov	(rax),eax	; 8040B800 
	DB 0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040B802 
	DB 0x48,0x8D,0x6D,0xF0
	call	_ADDlORlANDlXORlessgreat	; 8040B806 E8 B8 AC FF FF 
;/*	or	0x00(rbp),rax	; 8040B80B 
	DB 0x48,0xB,0x45,0x0
;/*	sub	$0x01,rax	; 8040B80F 
	DB 0x48,0x83,0xE8,0x1
;/0=	M_WL	M\ 86 DTST
;/*	sbb	rax,rax	; 8040B813 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040B816 48 85 C0 
;/*	mov	0x08(rbp),rax	; 8040B819 
	DB 0x48,0x8B,0x45,0x8
;/*	lea	0x10(rbp),rbp	; 8040B81D 
	DB 0x48,0x8D,0x6D,0x10
;/*	jz	_OPTsubRULES+0x4088 	; 8040B821 
	DB 0xF,0x84,0x62,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040B827 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x86,eax	; 8040B82B 
	DB 0xB8,0x86,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B830 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040B834 E8 1E A6 FF FF 
;/	OP0@ 1+ C@ OP1@ 1+ C!
;/*	mov	rax,-0x08(rbp)	; 8040B839 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040B83D 
	DB 0x48,0x8B,0x5,0x4D,0xA4,0xFF,0xFF
;/*	movzb	0x01(rax),eax	; 8040B844 
	DB 0xF,0xB6,0x40,0x1
;/*	mov	rax,-0x10(rbp)	; 8040B848 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040B84C 
	DB 0x48,0x8B,0x5,0x4B,0xA4,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 8040B853 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),dl	; 8040B857 
	DB 0x8A,0x55,0xF0
;/*	mov	dl,(rax)	; 8040B85A 
	DB 0x88,0x10
;/*	mov	$0x44C539,eax	; 8040B85C 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/       OP1 ToOP0
;/*	lea	-0x08(rbp),rbp	; 8040B861 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 8040B865 E8 11 A5 FF FF 
;/       -4 ALLOT
;/*	add	$-0x04,_HsubSTDOUT+0x18 (%rip)	; 8040B86A 
	DB 0x48,0x83,0x5,0xAA,0x93,0xFF,0xFF,0xFC
;/ M\ 87 DTST
;/*	mov	rax,-0x08(rbp)	; 8040B872 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x87,eax	; 8040B876 
	DB 0xB8,0x87,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B87B 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040B87F E8 D3 A5 FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040B884 
	DB 0xE9,0x8C,0xBF,0xFF,0xFF
;/
;/OP2@ 3 + C@  OP0@ 3 + C@ XOR
;/*	mov	rax,-0x08(rbp)	; 8040B889 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040B88D 
	DB 0x48,0x8B,0x5,0x17,0xA4,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 8040B894 
	DB 0xF,0xB6,0x40,0x3
;/*	mov	rax,-0x10(rbp)	; 8040B898 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040B89C 
	DB 0x48,0x8B,0x5,0xEE,0xA3,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 8040B8A3 
	DB 0xF,0xB6,0x40,0x3
;/*	xor	-0x10(rbp),rax	; 8040B8A7 
	DB 0x48,0x33,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040B8AB 
	DB 0x48,0x89,0x45,0xF0
;/OP2@ L@ FFFFFF AND 458948 XOR OR \ mov     %rax,X(%rbp)
;/*	mov	_OP2load+0x5 (%rip),rax	; 8040B8AF 
	DB 0x48,0x8B,0x5,0xF5,0xA3,0xFF,0xFF
;/*	mov	(rax),eax	; 8040B8B6 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040B8B8 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458948,eax	; 8040B8BD 
	DB 0x35,0x48,0x89,0x45,0x0
;/*	or	-0x10(rbp),rax	; 8040B8C2 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040B8C6 
	DB 0x48,0x89,0x45,0xF0
;/OP1@ L@ FFFFFF AND C0C748 XOR OR \ movq    $0x30,%rax
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040B8CA 
	DB 0x48,0x8B,0x5,0xCD,0xA3,0xFF,0xFF
;/*	mov	(rax),eax	; 8040B8D1 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040B8D3 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0xC0C748,eax	; 8040B8D8 
	DB 0x35,0x48,0xC7,0xC0,0x0
;/*	or	-0x10(rbp),rax	; 8040B8DD 
	DB 0x48,0xB,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040B8E1 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ ADD|OR|AND|XOR<> OR	\ __  X(%rbp),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040B8E5 
	DB 0x48,0x8B,0x5,0xA5,0xA3,0xFF,0xFF
;/*	mov	(rax),eax	; 8040B8EC 
	DB 0x8B,0x0
;/*	lea	-0x10(rbp),rbp	; 8040B8EE 
	DB 0x48,0x8D,0x6D,0xF0
	call	_ADDlORlANDlXORlessgreat	; 8040B8F2 E8 CC AB FF FF 
;/*	or	0x00(rbp),rax	; 8040B8F7 
	DB 0x48,0xB,0x45,0x0
;/*	sub	$0x01,rax	; 8040B8FB 
	DB 0x48,0x83,0xE8,0x1
;/  0=
;/*	sbb	rax,rax	; 8040B8FF 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040B902 48 85 C0 
;/*	mov	0x08(rbp),rax	; 8040B905 
	DB 0x48,0x8B,0x45,0x8
;/  WHILE  M\ C DTST
;/*	lea	0x10(rbp),rbp	; 8040B909 
	DB 0x48,0x8D,0x6D,0x10
;/*	jz	_OPTsubRULES+0x41EF 	; 8040B90D 
	DB 0xF,0x84,0xDD,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040B913 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xC,eax	; 8040B917 
	DB 0xB8,0xC,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B91C 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040B920 E8 32 A5 FF FF 
;/\	C081  OP1@ 1+ W! \  add	$0x30,%rax
;/	81 OP1@ 1+ C!
;/*	mov	rax,-0x08(rbp)	; 8040B925 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x81,-0x10(rbp)	; 8040B929 
	DB 0x48,0xC7,0x45,0xF0,0x81,0x0,0x0,0x0
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040B931 
	DB 0x48,0x8B,0x5,0x66,0xA3,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 8040B938 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),dl	; 8040B93C 
	DB 0x8A,0x55,0xF0
;/*	mov	dl,(rax)	; 8040B93F 
	DB 0x88,0x10
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040B941 
	DB 0x48,0x8B,0x5,0x49,0xA3,0xFF,0xFF
;/	OP0@ 1+ C@ 38 AND OP1@ 2+ XOR!
;/*	movzb	0x01(rax),eax	; 8040B948 
	DB 0xF,0xB6,0x40,0x1
;/*	and	$0x38,eax	; 8040B94C 
	DB 0x25,0x38,0x0,0x0,0x0
;/*	mov	rax,-0x10(rbp)	; 8040B951 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040B955 
	DB 0x48,0x8B,0x5,0x42,0xA3,0xFF,0xFF
;/*	lea	0x02(rax),rax	; 8040B95C 
	DB 0x48,0x8D,0x40,0x2
;/*	lea	-0x10(rbp),rbp	; 8040B960 
	DB 0x48,0x8D,0x6D,0xF0
	call	_XORsave	; 8040B964 E8 F4 88 FF FF 
;/       OP1 ToOP0
;/*	mov	rax,-0x08(rbp)	; 8040B969 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 8040B96D 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B972 
	DB 0x48,0x8D,0x6D,0xF8
	call	_ToOP0	; 8040B976 E8 0 A4 FF FF 
;/       -4 ALLOT
;/*	add	$-0x04,_HsubSTDOUT+0x18 (%rip)	; 8040B97B 
	DB 0x48,0x83,0x5,0x99,0x92,0xFF,0xFF,0xFC
;/	OP0 @ 3+ SL@ SHORT?
;/*	mov	rax,-0x08(rbp)	; 8040B983 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_LASTsubHERE+0xD (%rip),rax	; 8040B987 
	DB 0x48,0x8B,0x5,0xB9,0xA1,0xFF,0xFF
;/*	lea	0x03(rax),rax	; 8040B98E 
	DB 0x48,0x8D,0x40,0x3
;/*	lea	-0x08(rbp),rbp	; 8040B992 
	DB 0x48,0x8D,0x6D,0xF8
	call	_SLload	; 8040B996 E8 26 88 FF FF 
	call	_SHORTque	; 8040B99B E8 90 A0 FF FF 
;/	IF 83 OP0 @ 1+ C! -3 ALLOT
	test	rax,rax	; 8040B9A0 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040B9A3 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040B9A7 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_OPTsubRULES+0x41D8 	; 8040B9AB 
	DB 0xF,0x84,0x28,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040B9B1 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x83,-0x10(rbp)	; 8040B9B5 
	DB 0x48,0xC7,0x45,0xF0,0x83,0x0,0x0,0x0
;/*	mov	_LASTsubHERE+0xD (%rip),rax	; 8040B9BD 
	DB 0x48,0x8B,0x5,0x83,0xA1,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 8040B9C4 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),dl	; 8040B9C8 
	DB 0x8A,0x55,0xF0
;/*	mov	dl,(rax)	; 8040B9CB 
	DB 0x88,0x10
;/*	add	$-0x03,_HsubSTDOUT+0x18 (%rip)	; 8040B9CD 
	DB 0x48,0x83,0x5,0x47,0x92,0xFF,0xFF,0xFD
;/*	mov	-0x08(rbp),rax	; 8040B9D5 
	DB 0x48,0x8B,0x45,0xF8
;/	THEN
;/ M\ D DTST
;/*	mov	rax,-0x08(rbp)	; 8040B9D9 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0xD,eax	; 8040B9DD 
	DB 0xB8,0xD,0x0,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040B9E2 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040B9E6 E8 6C A4 FF FF 
;/   REPEAT
;/*	jmp	_OPTsubRULES+0x14 	; 8040B9EB 
	DB 0xE9,0x25,0xBE,0xFF,0xFF
;/
;/;
	ret		; 8040B9F0 C3 
;/
;/:  MOPT-RULES
;/ BEGIN  -EVEN-EAX  OPT-RULES


_MOPTsubRULES:
	call	_subEVENsubEAX	; 8040B9F1 E8 A BB FF FF 
	call	_OPTsubRULES	; 8040B9F6 E8 6 BE FF FF 
;/ OP0 @ DUP :-SET U< IF DROP BREAK TO OP0@ 
;/*	mov	rax,-0x08(rbp)	; 8040B9FB 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_LASTsubHERE+0xD (%rip),rax	; 8040B9FF 
	DB 0x48,0x8B,0x5,0x41,0xA1,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 8040BA06 
	DB 0x48,0x89,0x45,0xF0
;/*	cmp	_dcomasubSET+0x5 (%rip),rax	; 8040BA0A 
	DB 0x48,0x3B,0x5,0x5B,0xA2,0xFF,0xFF
;/*	sbb	rax,rax	; 8040BA11 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040BA14 48 85 C0 
;/*	mov	-0x10(rbp),rax	; 8040BA17 
	DB 0x48,0x8B,0x45,0xF0
;/*	lea	-0x08(rbp),rbp	; 8040BA1B 
	DB 0x48,0x8D,0x6D,0xF8
;/*	jz	_MOPTsubRULES+0x3D 	; 8040BA1F 
	DB 0xF,0x84,0x9,0x0,0x0,0x0
;/*	mov	0x00(rbp),rax	; 8040BA25 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040BA29 
	DB 0x48,0x8D,0x6D,0x8
	ret		; 8040BA2D C3 
;/*	mov	rax,_OP0load+0x5 (%rip)	; 8040BA2E 
	DB 0x48,0x89,0x5,0x5C,0xA2,0xFF,0xFF
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040BA35 
	DB 0x48,0x8B,0x5,0x55,0xA2,0xFF,0xFF
;/*	mov	(rax),eax	; 8040BA3C 
	DB 0x8B,0x0
;/   OP0@ L@  E7FFFF AND 458948 =  \ mov     %RAX|RDX|RBX|RCX,X(%rbp)
;/*	and	$0xE7FFFF,eax	; 8040BA3E 
	DB 0x25,0xFF,0xFF,0xE7,0x0
;/*	xor	$0x458948,rax	; 8040BA43 
	DB 0x48,0x35,0x48,0x89,0x45,0x0
;/*	sub	$0x01,rax	; 8040BA49 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 8040BA4D 
	DB 0x48,0x19,0xC0
;/   DUP
;/*	mov	rax,-0x08(rbp)	; 8040BA50 
	DB 0x48,0x89,0x45,0xF8
	test	rax,rax	; 8040BA54 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040BA57 
	DB 0x48,0x8B,0x45,0xF8
;/   IF DROP OFF-EBP >R   OP0@ 3+ C@ C>S CELL+ TO OFF-EBP   FALSE   OP1 -EBPCLR
;/*	jz	_MOPTsubRULES+0xBF 	; 8040BA5B 
	DB 0xF,0x84,0x4F,0x0,0x0,0x0
;/*	push	_OFFsubEBP+0x5 (%rip)	; 8040BA61 
	DB 0xFF,0x35,0xB1,0xA0,0xFF,0xFF
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040BA67 
	DB 0x48,0x8B,0x5,0x23,0xA2,0xFF,0xFF
;/*	movzb	0x03(rax),eax	; 8040BA6E 
	DB 0xF,0xB6,0x40,0x3
;/*	movsbq	al,rax	; 8040BA72 
	DB 0x48,0xF,0xBE,0xC0
;/*	lea	0x08(rax),rax	; 8040BA76 
	DB 0x48,0x8D,0x40,0x8
;/*	mov	rax,_OFFsubEBP+0x5 (%rip)	; 8040BA7A 
	DB 0x48,0x89,0x5,0x97,0xA0,0xFF,0xFF
;/*	movq	$0x0,-0x08(rbp)	; 8040BA81 
	DB 0x48,0xC7,0x45,0xF8,0x0,0x0,0x0,0x0
;/*	mov	$0x44C539,eax	; 8040BA89 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BA8E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_subEBPCLR	; 8040BA92 E8 2D B6 FF FF 
;/              R> TO OFF-EBP 
;/*	mov	rax,-0x08(rbp)	; 8040BA97 
	DB 0x48,0x89,0x45,0xF8
;/*	pop	-0x10(rbp)	; 8040BA9B 
	DB 0x8F,0x45,0xF0
;/*	lea	_OFFsubEBP+0x5 (%rip),rax	; 8040BA9E 
	DB 0x48,0x8D,0x5,0x73,0xA0,0xFF,0xFF
;/*	mov	-0x10(rbp),rdx	; 8040BAA5 
	DB 0x48,0x8B,0x55,0xF0
;/*	mov	rdx,(rax)	; 8040BAA9 
	DB 0x48,0x89,0x10
;/*	mov	-0x08(rbp),rax	; 8040BAAC 
	DB 0x48,0x8B,0x45,0xF8
;/   THEN
;/	WHILE   M\ 207 DTST
	test	rax,rax	; 8040BAB0 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040BAB3 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040BAB7 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_MOPTsubRULES+0xE7 	; 8040BABB 
	DB 0xF,0x84,0x17,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040BAC1 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x207,eax	; 8040BAC5 
	DB 0xB8,0x7,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BACA 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BACE E8 84 A3 FF FF 
;/	REPEAT 
;/*	jmp	_MOPTsubRULES	; 8040BAD3 
	DB 0xE9,0x19,0xFF,0xFF,0xFF
;/;
	ret		; 8040BAD8 C3 
;/
;/: EXIT-RULES  ( ADDR  -- ADDR'  )
;/
;/\  можно удалять записи во временные ячейки
;/        -2 DTST


_EXITsubRULES:
;/*	mov	rax,-0x08(rbp)	; 8040BAD9 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$-0x2,rax	; 8040BADD 
	DB 0x48,0xC7,0xC0,0xFE,0xFF,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040BAE4 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BAE8 E8 6A A3 FF FF 
;/	BEGIN
;/	OP0 @ :-SET U< IF  BREAK
;/*	mov	rax,-0x08(rbp)	; 8040BAED 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_LASTsubHERE+0xD (%rip),rax	; 8040BAF1 
	DB 0x48,0x8B,0x5,0x4F,0xA0,0xFF,0xFF
;/*	cmp	_dcomasubSET+0x5 (%rip),rax	; 8040BAF8 
	DB 0x48,0x3B,0x5,0x6D,0xA1,0xFF,0xFF
;/*	sbb	rax,rax	; 8040BAFF 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040BB02 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040BB05 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_EXITsubRULES+0x37 	; 8040BB09 
	DB 0xF,0x84,0x1,0x0,0x0,0x0
	ret		; 8040BB0F C3 
;/
;/OP0@ L@ 2448d48 XOR	\	lea     1(%rdx,%rax),%rax
;/*	mov	rax,-0x08(rbp)	; 8040BB10 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040BB14 
	DB 0x48,0x8B,0x5,0x76,0xA1,0xFF,0xFF
;/*	mov	(rax),eax	; 8040BB1B 
	DB 0x8B,0x0
;/*	xor	$0x2448D48,rax	; 8040BB1D 
	DB 0x48,0x35,0x48,0x8D,0x44,0x2
;/*	mov	rax,-0x10(rbp)	; 8040BB23 
	DB 0x48,0x89,0x45,0xF0
;/OFF-EAX 0=
;/*	mov	_OFFsubEAX+0x5 (%rip),rax	; 8040BB27 
	DB 0x48,0x8B,0x5,0xF7,0x9F,0xFF,0xFF
;/*	sub	$0x01,rax	; 8040BB2E 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 8040BB32 
	DB 0x48,0x19,0xC0
;/*	or	-0x10(rbp),rax	; 8040BB35 
	DB 0x48,0xB,0x45,0xF0
;/OR 0=	M_WL  M\ 20C DTST
;/*	sub	$0x01,rax	; 8040BB39 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 8040BB3D 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040BB40 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040BB43 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_EXITsubRULES+0x168 	; 8040BB47 
	DB 0xF,0x84,0xF4,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040BB4D 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x20C,eax	; 8040BB51 
	DB 0xB8,0xC,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BB56 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BB5A E8 F8 A2 FF FF 
;/	OP0@ 4 + C@ C>S OFF-EAX +
;/*	mov	rax,-0x08(rbp)	; 8040BB5F 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040BB63 
	DB 0x48,0x8B,0x5,0x27,0xA1,0xFF,0xFF
;/*	movzb	0x04(rax),eax	; 8040BB6A 
	DB 0xF,0xB6,0x40,0x4
;/*	movsbq	al,rax	; 8040BB6E 
	DB 0x48,0xF,0xBE,0xC0
;/*	add	_OFFsubEAX+0x5 (%rip),rax	; 8040BB72 
	DB 0x48,0x3,0x5,0xAC,0x9F,0xFF,0xFF
;/*	mov	rax,-0x10(rbp)	; 8040BB79 
	DB 0x48,0x89,0x45,0xF0
;/	DUP SHORT?
;/*	lea	-0x10(rbp),rbp	; 8040BB7D 
	DB 0x48,0x8D,0x6D,0xF0
	call	_SHORTque	; 8040BB81 E8 AA 9E FF FF 
;/	IF	OP0@ 4 + C!
	test	rax,rax	; 8040BB86 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040BB89 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040BB8D 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_EXITsubRULES+0xDF 	; 8040BB91 
	DB 0xF,0x84,0x21,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040BB97 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040BB9B 
	DB 0x48,0x8B,0x5,0xEF,0xA0,0xFF,0xFF
;/*	lea	0x04(rax),rax	; 8040BBA2 
	DB 0x48,0x8D,0x40,0x4
;/*	mov	-0x08(rbp),dl	; 8040BBA6 
	DB 0x8A,0x55,0xF8
;/*	mov	dl,(rax)	; 8040BBA9 
	DB 0x88,0x10
;/*	mov	0x00(rbp),rax	; 8040BBAB 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040BBAF 
	DB 0x48,0x8D,0x6D,0x8
;/	ELSE DUP LONG? 0= IF DROP BREAK
;/*	jmp	_EXITsubRULES+0x141 	; 8040BBB3 
	DB 0xE9,0x62,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040BBB8 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	-0x08(rbp),rbp	; 8040BBBC 
	DB 0x48,0x8D,0x6D,0xF8
	call	_LONGque	; 8040BBC0 E8 7C 9E FF FF 
;/*	sub	$0x01,rax	; 8040BBC5 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 8040BBC9 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040BBCC 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040BBCF 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040BBD3 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_EXITsubRULES+0x10D 	; 8040BBD7 
	DB 0xF,0x84,0x9,0x0,0x0,0x0
;/*	mov	0x00(rbp),rax	; 8040BBDD 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040BBE1 
	DB 0x48,0x8D,0x6D,0x8
	ret		; 8040BBE5 C3 
;/	  84 OP0@ 2+ C! OP0@ 4 + L!
;/*	mov	rax,-0x08(rbp)	; 8040BBE6 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0x84,-0x10(rbp)	; 8040BBEA 
	DB 0x48,0xC7,0x45,0xF0,0x84,0x0,0x0,0x0
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040BBF2 
	DB 0x48,0x8B,0x5,0x98,0xA0,0xFF,0xFF
;/*	lea	0x02(rax),rax	; 8040BBF9 
	DB 0x48,0x8D,0x40,0x2
;/*	mov	-0x10(rbp),dl	; 8040BBFD 
	DB 0x8A,0x55,0xF0
;/*	mov	dl,(rax)	; 8040BC00 
	DB 0x88,0x10
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040BC02 
	DB 0x48,0x8B,0x5,0x88,0xA0,0xFF,0xFF
;/*	lea	0x04(rax),rax	; 8040BC09 
	DB 0x48,0x8D,0x40,0x4
;/*	mov	-0x08(rbp),edx	; 8040BC0D 
	DB 0x8B,0x55,0xF8
;/*	mov	edx,(rax)	; 8040BC10 
	DB 0x89,0x10
;/*	mov	0x00(rbp),rax	; 8040BC12 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040BC16 
	DB 0x48,0x8D,0x6D,0x8
;/	THEN  0 TO OFF-EAX 
;/*	movq	$0x0,_OFFsubEAX+0x5 (%rip)	; 8040BC1A 
	DB 0x48,0xC7,0x5,0x0,0x9F,0xFF,0xFF,0x0,0x0,0x0,0x0
;/        M\ 20D DTST
;/*	mov	rax,-0x08(rbp)	; 8040BC25 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x20D,eax	; 8040BC29 
	DB 0xB8,0xD,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BC2E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BC32 E8 20 A2 FF FF 
;/	MOPT-RULES
	call	_MOPTsubRULES	; 8040BC37 E8 B5 FD FF FF 
;/	REPEAT
;/*	jmp	_EXITsubRULES+0x14 	; 8040BC3C 
	DB 0xE9,0xAC,0xFE,0xFF,0xFF
;/
;/	OP1 @ :-SET U< IF  BREAK
;/*	mov	rax,-0x08(rbp)	; 8040BC41 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 8040BC45 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	mov	(rax),rax	; 8040BC4A 
	DB 0x48,0x8B,0x0
;/*	cmp	_dcomasubSET+0x5 (%rip),rax	; 8040BC4D 
	DB 0x48,0x3B,0x5,0x18,0xA0,0xFF,0xFF
;/*	sbb	rax,rax	; 8040BC54 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040BC57 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040BC5A 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_EXITsubRULES+0x18C 	; 8040BC5E 
	DB 0xF,0x84,0x1,0x0,0x0,0x0
	ret		; 8040BC64 C3 
;/
;/OP1@ C@	B1 XOR		\ mov     $0x03,%cl
;/*	mov	rax,-0x08(rbp)	; 8040BC65 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040BC69 
	DB 0x48,0x8B,0x5,0x2E,0xA0,0xFF,0xFF
;/*	movzb	(rax),eax	; 8040BC70 
	DB 0xF,0xB6,0x0
;/*	xor	$-0x4F,al	; 8040BC73 
	DB 0x34,0xB1
;/*	mov	rax,-0x10(rbp)	; 8040BC75 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ C0FFFF AND C0D348 XOR OR \ rol..sar     %cl,%r_x
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040BC79 
	DB 0x48,0x8B,0x5,0x11,0xA0,0xFF,0xFF
;/*	mov	(rax),eax	; 8040BC80 
	DB 0x8B,0x0
;/*	and	$0xC0FFFF,eax	; 8040BC82 
	DB 0x25,0xFF,0xFF,0xC0,0x0
;/*	xor	$0xC0D348,eax	; 8040BC87 
	DB 0x35,0x48,0xD3,0xC0,0x0
;/*	or	-0x10(rbp),rax	; 8040BC8C 
	DB 0x48,0xB,0x45,0xF0
;/*	sub	$0x01,rax	; 8040BC90 
	DB 0x48,0x83,0xE8,0x1
;/0=	M_WL  M\ 204 DTST
;/*	sbb	rax,rax	; 8040BC94 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040BC97 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040BC9A 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_EXITsubRULES+0x23B 	; 8040BC9E 
	DB 0xF,0x84,0x70,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040BCA4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x204,eax	; 8040BCA8 
	DB 0xB8,0x4,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BCAD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BCB1 E8 A1 A1 FF FF 
;/	  C1 OP0@ 1+ C! OP1@ 1+ C@ C, \ rol..sar    $0x3,%rax
;/*	mov	rax,-0x08(rbp)	; 8040BCB6 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0xC1,-0x10(rbp)	; 8040BCBA 
	DB 0x48,0xC7,0x45,0xF0,0xC1,0x0,0x0,0x0
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040BCC2 
	DB 0x48,0x8B,0x5,0xC8,0x9F,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 8040BCC9 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),dl	; 8040BCCD 
	DB 0x8A,0x55,0xF0
;/*	mov	dl,(rax)	; 8040BCD0 
	DB 0x88,0x10
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040BCD2 
	DB 0x48,0x8B,0x5,0xC5,0x9F,0xFF,0xFF
;/*	movzb	0x01(rax),eax	; 8040BCD9 
	DB 0xF,0xB6,0x40,0x1
;/*	lea	-0x08(rbp),rbp	; 8040BCDD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Ccom	; 8040BCE1 E8 D4 8F FF FF 
;/	  OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040BCE6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 8040BCEA 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BCEF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040BCF3 E8 AF A5 FF FF 
;/	  M\ 205 DTST
;/*	mov	rax,-0x08(rbp)	; 8040BCF8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x205,eax	; 8040BCFC 
	DB 0xB8,0x5,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BD01 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BD05 E8 4D A1 FF FF 
;/	  MOPT-RULES
	call	_MOPTsubRULES	; 8040BD0A E8 E2 FC FF FF 
;/	REPEAT
;/*	jmp	_EXITsubRULES+0x14 	; 8040BD0F 
	DB 0xE9,0xD9,0xFD,0xFF,0xFF
;/
;/
;/OP1@ L@ FFFFFF AND
;/*	mov	rax,-0x08(rbp)	; 8040BD14 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040BD18 
	DB 0x48,0x8B,0x5,0x7F,0x9F,0xFF,0xFF
;/*	mov	(rax),eax	; 8040BD1F 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040BD21 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	mov	rax,-0x10(rbp)	; 8040BD26 
	DB 0x48,0x89,0x45,0xF0
;/DUP c28948 XOR			\ mov     %rax,%rdx
;/*	xor	$0xC28948,rax	; 8040BD2A 
	DB 0x48,0x35,0x48,0x89,0xC2,0x0
;/*	mov	-0x10(rbp),rdx	; 8040BD30 
	DB 0x48,0x8B,0x55,0xF0
;/SWAP FFFF AND 9248 <> AND	\ xchg    %rdx,%rax       # 80404e
;/*	mov	rax,-0x10(rbp)	; 8040BD34 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	rdx,-0x18(rbp)	; 8040BD38 
	DB 0x48,0x89,0x55,0xE8
;/*	mov	$0xFFFF,eax	; 8040BD3C 
	DB 0xB8,0xFF,0xFF,0x0,0x0
;/*	and	-0x18(rbp),rax	; 8040BD41 
	DB 0x48,0x23,0x45,0xE8
;/*	xor	$0x9248,rax	; 8040BD45 
	DB 0x48,0x35,0x48,0x92,0x0,0x0
;/*		negq	rax	; 8040BD4B 
	DB 0x48,0xF7,0xD8
;/*	sbb	rax,rax	; 8040BD4E 
	DB 0x48,0x19,0xC0
;/*	and	-0x10(rbp),rax	; 8040BD51 
	DB 0x48,0x23,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040BD55 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ FFFFFF AND 458b48 XOR	\ mov     -0x10(%rbp),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040BD59 
	DB 0x48,0x8B,0x5,0x31,0x9F,0xFF,0xFF
;/*	mov	(rax),eax	; 8040BD60 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040BD62 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458B48,eax	; 8040BD67 
	DB 0x35,0x48,0x8B,0x45,0x0
;/*	or	-0x10(rbp),rax	; 8040BD6C 
	DB 0x48,0xB,0x45,0xF0
;/ OR 0=	M_WL  M\ 202 DTST
;/*	sub	$0x01,rax	; 8040BD70 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 8040BD74 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040BD77 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040BD7A 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_EXITsubRULES+0x2EB 	; 8040BD7E 
	DB 0xF,0x84,0x40,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040BD84 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x202,eax	; 8040BD88 
	DB 0xB8,0x2,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BD8D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BD91 E8 C1 A0 FF FF 
;/           OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040BD96 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 8040BD9A 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BD9F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040BDA3 E8 FF A4 FF FF 
;/        M\ 203 DTST
;/*	mov	rax,-0x08(rbp)	; 8040BDA8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x203,eax	; 8040BDAC 
	DB 0xB8,0x3,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BDB1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BDB5 E8 9D A0 FF FF 
;/	MOPT-RULES
	call	_MOPTsubRULES	; 8040BDBA E8 32 FC FF FF 
;/	REPEAT
;/*	jmp	_EXITsubRULES+0x14 	; 8040BDBF 
	DB 0xE9,0x29,0xFD,0xFF,0xFF
;/	
;/OFF-EBP >R
;/*	mov	rax,-0x08(rbp)	; 8040BDC4 
	DB 0x48,0x89,0x45,0xF8
;/*	push	_OFFsubEBP+0x5 (%rip)	; 8040BDC8 
	DB 0xFF,0x35,0x4A,0x9D,0xFF,0xFF
;/FALSE   OP0 -EBPCLR  OP0 -EBPCLR  OP0 -EBPCLR  OP0 -EBPCLR
;/*	movq	$0x0,-0x10(rbp)	; 8040BDCE 
	DB 0x48,0xC7,0x45,0xF0,0x0,0x0,0x0,0x0
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040BDD6 
	DB 0x48,0x8D,0x5,0x6A,0x9D,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040BDDD 
	DB 0x48,0x8D,0x6D,0xF0
	call	_subEBPCLR	; 8040BDE1 E8 DE B2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BDE6 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040BDEA 
	DB 0x48,0x8D,0x5,0x56,0x9D,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040BDF1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_subEBPCLR	; 8040BDF5 E8 CA B2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BDFA 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040BDFE 
	DB 0x48,0x8D,0x5,0x42,0x9D,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040BE05 
	DB 0x48,0x8D,0x6D,0xF8
	call	_subEBPCLR	; 8040BE09 E8 B6 B2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BE0E 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040BE12 
	DB 0x48,0x8D,0x5,0x2E,0x9D,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040BE19 
	DB 0x48,0x8D,0x6D,0xF8
	call	_subEBPCLR	; 8040BE1D E8 A2 B2 FF FF 
;/R> TO OFF-EBP
;/*	mov	rax,-0x08(rbp)	; 8040BE22 
	DB 0x48,0x89,0x45,0xF8
;/*	pop	-0x10(rbp)	; 8040BE26 
	DB 0x8F,0x45,0xF0
;/*	lea	_OFFsubEBP+0x5 (%rip),rax	; 8040BE29 
	DB 0x48,0x8D,0x5,0xE8,0x9C,0xFF,0xFF
;/*	mov	-0x10(rbp),rdx	; 8040BE30 
	DB 0x48,0x8B,0x55,0xF0
;/*	mov	rdx,(rax)	; 8040BE34 
	DB 0x48,0x89,0x10
;/*	mov	-0x08(rbp),rax	; 8040BE37 
	DB 0x48,0x8B,0x45,0xF8
;/	M_WL   M\ 201 DTST
	test	rax,rax	; 8040BE3B 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040BE3E 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040BE42 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_EXITsubRULES+0x38F 	; 8040BE46 
	DB 0xF,0x84,0x1C,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040BE4C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x201,eax	; 8040BE50 
	DB 0xB8,0x1,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BE55 
	DB 0x48,C10 
	DB 0x89,0x10
;/*	mov	0x00(rbp),rax	; 8040BC12 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040BC16 
	DB 0x48,0x8D,0x6D,0x8
;/	THEN  0 TO OFF-EAX 
;/*	movq	$0x0,_OFFsubEAX+0x5 (%rip)	; 8040BC1A 
	DB 0x48,0xC7,0x5,0x0,0x9F,0xFF,0xFF,0x0,0x0,0x0,0x0
;/        M\ 20D DTST
;/*	mov	rax,-0x08(rbp)	; 8040BC25 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x20D,eax	; 8040BC29 
	DB 0xB8,0xD,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BC2E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BC32 E8 20 A2 FF FF 
;/	MOPT-RULES
	call	_MOPTsubRULES	; 8040BC37 E8 B5 FD FF FF 
;/	REPEAT
;/*	jmp	_EXITsubRULES+0x14 	; 8040BC3C 
	DB 0xE9,0xAC,0xFE,0xFF,0xFF
;/
;/	OP1 @ :-SET U< IF  BREAK
;/*	mov	rax,-0x08(rbp)	; 8040BC41 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 8040BC45 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	mov	(rax),rax	; 8040BC4A 
	DB 0x48,0x8B,0x0
;/*	cmp	_dcomasubSET+0x5 (%rip),rax	; 8040BC4D 
	DB 0x48,0x3B,0x5,0x18,0xA0,0xFF,0xFF
;/*	sbb	rax,rax	; 8040BC54 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040BC57 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040BC5A 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_EXITsubRULES+0x18C 	; 8040BC5E 
	DB 0xF,0x84,0x1,0x0,0x0,0x0
	ret		; 8040BC64 C3 
;/
;/OP1@ C@	B1 XOR		\ mov     $0x03,%cl
;/*	mov	rax,-0x08(rbp)	; 8040BC65 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040BC69 
	DB 0x48,0x8B,0x5,0x2E,0xA0,0xFF,0xFF
;/*	movzb	(rax),eax	; 8040BC70 
	DB 0xF,0xB6,0x0
;/*	xor	$-0x4F,al	; 8040BC73 
	DB 0x34,0xB1
;/*	mov	rax,-0x10(rbp)	; 8040BC75 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ C0FFFF AND C0D348 XOR OR \ rol..sar     %cl,%r_x
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040BC79 
	DB 0x48,0x8B,0x5,0x11,0xA0,0xFF,0xFF
;/*	mov	(rax),eax	; 8040BC80 
	DB 0x8B,0x0
;/*	and	$0xC0FFFF,eax	; 8040BC82 
	DB 0x25,0xFF,0xFF,0xC0,0x0
;/*	xor	$0xC0D348,eax	; 8040BC87 
	DB 0x35,0x48,0xD3,0xC0,0x0
;/*	or	-0x10(rbp),rax	; 8040BC8C 
	DB 0x48,0xB,0x45,0xF0
;/*	sub	$0x01,rax	; 8040BC90 
	DB 0x48,0x83,0xE8,0x1
;/0=	M_WL  M\ 204 DTST
;/*	sbb	rax,rax	; 8040BC94 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040BC97 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040BC9A 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_EXITsubRULES+0x23B 	; 8040BC9E 
	DB 0xF,0x84,0x70,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040BCA4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x204,eax	; 8040BCA8 
	DB 0xB8,0x4,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BCAD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BCB1 E8 A1 A1 FF FF 
;/	  C1 OP0@ 1+ C! OP1@ 1+ C@ C, \ rol..sar    $0x3,%rax
;/*	mov	rax,-0x08(rbp)	; 8040BCB6 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0xC1,-0x10(rbp)	; 8040BCBA 
	DB 0x48,0xC7,0x45,0xF0,0xC1,0x0,0x0,0x0
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040BCC2 
	DB 0x48,0x8B,0x5,0xC8,0x9F,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 8040BCC9 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),dl	; 8040BCCD 
	DB 0x8A,0x55,0xF0
;/*	mov	dl,(rax)	; 8040BCD0 
	DB 0x88,0x10
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040BCD2 
	DB 0x48,0x8B,0x5,0xC5,0x9F,0xFF,0xFF
;/*	movzb	0x01(rax),eax	; 8040BCD9 
	DB 0xF,0xB6,0x40,0x1
;/*	lea	-0x08(rbp),rbp	; 8040BCDD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Ccom	; 8040BCE1 E8 D4 8F FF FF 
;/	  OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040BCE6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 8040BCEA 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BCEF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040BCF3 E8 AF A5 FF FF 
;/	  M\ 205 DTST
;/*	mov	rax,-0x08(rbp)	; 8040BCF8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x205,eax	; 8040BCFC 
	DB 0xB8,0x5,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BD01 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BD05 E8 4D A1 FF FF 
;/	  MOPT-RULES
	call	_MOPTsubRULES	; 8040BD0A E8 E2 FC FF FF 
;/	REPEAT
;/*	jmp	_EXITsubRULES+0x14 	; 8040BD0F 
	DB 0xE9,0xD9,0xFD,0xFF,0xFF
;/
;/
;/OP1@ L@ FFFFFF AND
;/*	mov	rax,-0x08(rbp)	; 8040BD14 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040BD18 
	DB 0x48,0x8B,0x5,0x7F,0x9F,0xFF,0xFF
;/*	mov	(rax),eax	; 8040BD1F 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040BD21 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	mov	rax,-0x10(rbp)	; 8040BD26 
	DB 0x48,0x89,0x45,0xF0
;/DUP c28948 XOR			\ mov     %rax,%rdx
;/*	xor	$0xC28948,rax	; 8040BD2A 
	DB 0x48,0x35,0x48,0x89,0xC2,0x0
;/*	mov	-0x10(rbp),rdx	; 8040BD30 
	DB 0x48,0x8B,0x55,0xF0
;/SWAP FFFF AND 9248 <> AND	\ xchg    %rdx,%rax       # 80404e
;/*	mov	rax,-0x10(rbp)	; 8040BD34 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	rdx,-0x18(rbp)	; 8040BD38 
	DB 0x48,0x89,0x55,0xE8
;/*	mov	$0xFFFF,eax	; 8040BD3C 
	DB 0xB8,0xFF,0xFF,0x0,0x0
;/*	and	-0x18(rbp),rax	; 8040BD41 
	DB 0x48,0x23,0x45,0xE8
;/*	xor	$0x9248,rax	; 8040BD45 
	DB 0x48,0x35,0x48,0x92,0x0,0x0
;/*		negq	rax	; 8040BD4B 
	DB 0x48,0xF7,0xD8
;/*	sbb	rax,rax	; 8040BD4E 
	DB 0x48,0x19,0xC0
;/*	and	-0x10(rbp),rax	; 8040BD51 
	DB 0x48,0x23,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040BD55 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ FFFFFF AND 458b48 XOR	\ mov     -0x10(%rbp),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040BD59 
	DB 0x48,0x8B,0x5,0x31,0x9F,0xFF,0xFF
;/*	mov	(rax),eax	; 8040BD60 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040BD62 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458B48,eax	; 8040BD67 
	DB 0x35,0x48,0x8B,0x45,0x0
;/*	or	-0x10(rbp),rax	; 8040BD6C 
	DB 0x48,0xB,0x45,0xF0
;/ OR 0=	M_WL  M\ 202 DTST
;/*	sub	$0x01,rax	; 8040BD70 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 8040BD74 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040BD77 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040BD7A 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_EXITsubRULES+0x2EB 	; 8040BD7E 
	DB 0xF,0x84,0x40,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040BD84 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x202,eax	; 8040BD88 
	DB 0xB8,0x2,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BD8D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BD91 E8 C1 A0 FF FF 
;/           OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040BD96 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 8040BD9A 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BD9F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040BDA3 E8 FF A4 FF FF 
;/        M\ 203 DTST
;/*	mov	rax,-0x08(rbp)	; 8040BDA8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x203,eax	; 8040BDAC 
	DB 0xB8,0x3,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BDB1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BDB5 E8 9D A0 FF FF 
;/	MOPT-RULES
	call	_MOPTsubRULES	; 8040BDBA E8 32 FC FF FF 
;/	REPEAT
;/*	jmp	_EXITsubRULES+0x14 	; 8040BDBF 
	DB 0xE9,0x29,0xFD,0xFF,0xFF
;/	
;/OFF-EBP >R
;/*	mov	rax,-0x08(rbp)	; 8040BDC4 
	DB 0x48,0x89,0x45,0xF8
;/*	push	_OFFsubEBP+0x5 (%rip)	; 8040BDC8 
	DB 0xFF,0x35,0x4A,0x9D,0xFF,0xFF
;/FALSE   OP0 -EBPCLR  OP0 -EBPCLR  OP0 -EBPCLR  OP0 -EBPCLR
;/*	movq	$0x0,-0x10(rbp)	; 8040BDCE 
	DB 0x48,0xC7,0x45,0xF0,0x0,0x0,0x0,0x0
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040BDD6 
	DB 0x48,0x8D,0x5,0x6A,0x9D,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040BDDD 
	DB 0x48,0x8D,0x6D,0xF0
	call	_subEBPCLR	; 8040BDE1 E8 DE B2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BDE6 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040BDEA 
	DB 0x48,0x8D,0x5,0x56,0x9D,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040BDF1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_subEBPCLR	; 8040BDF5 E8 CA B2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BDFA 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040BDFE 
	DB 0x48,0x8D,0x5,0x42,0x9D,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040BE05 
	DB 0x48,0x8D,0x6D,0xF8
	call	_subEBPCLR	; 8040BE09 E8 B6 B2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BE0E 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040BE12 
	DB 0x48,0x8D,0x5,0x2E,0x9D,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040BE19 
	DB 0x48,0x8D,0x6D,0xF8
	call	_subEBPCLR	; 8040BE1D E8 A2 B2 FF FF 
;/R> TO OFF-EBP
;/*	mov	rax,-0x08(rbp)	; 8040BE22 
	DB 0x48,0x89,0x45,0xF8
;/*	pop	-0x10(rbp)	; 8040BE26 
	DB 0x8F,0x45,0xF0
;/*	lea	_OFFsubEBP+0x5 (%rip),rax	; 8040BE29 
	DB 0x48,0x8D,0x5,0xE8,0x9C,0xFF,0xFF
;/*	mov	-0x10(rbp),rdx	; 8040BE30 
	DB 0x48,0x8B,0x55,0xF0
;/*	mov	rdx,(rax)	; 8040BE34 
	DB 0x48,0x89,0x10
;/*	mov	-0x08(rbp),rax	; 8040BE37 
	DB 0x48,0x8B,0x45,0xF8
;/	M_WL   M\ 201 DTST
	test	rax,rax	; 8040BE3B 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040BE3E 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040BE42 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_EXITsubRULES+0x38F 	; 8040BE46 
	DB 0xF,0x84,0x1C,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040BE4C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x201,eax	; 8040BE50 
	DB 0xB8,0x1,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BE55 
	DB 0x48,C10 
	DB 0x89,0x10
;/*	mov	0x00(rbp),rax	; 8040BC12 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040BC16 
	DB 0x48,0x8D,0x6D,0x8
;/	THEN  0 TO OFF-EAX 
;/*	movq	$0x0,_OFFsubEAX+0x5 (%rip)	; 8040BC1A 
	DB 0x48,0xC7,0x5,0x0,0x9F,0xFF,0xFF,0x0,0x0,0x0,0x0
;/        M\ 20D DTST
;/*	mov	rax,-0x08(rbp)	; 8040BC25 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x20D,eax	; 8040BC29 
	DB 0xB8,0xD,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BC2E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BC32 E8 20 A2 FF FF 
;/	MOPT-RULES
	call	_MOPTsubRULES	; 8040BC37 E8 B5 FD FF FF 
;/	REPEAT
;/*	jmp	_EXITsubRULES+0x14 	; 8040BC3C 
	DB 0xE9,0xAC,0xFE,0xFF,0xFF
;/
;/	OP1 @ :-SET U< IF  BREAK
;/*	mov	rax,-0x08(rbp)	; 8040BC41 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 8040BC45 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	mov	(rax),rax	; 8040BC4A 
	DB 0x48,0x8B,0x0
;/*	cmp	_dcomasubSET+0x5 (%rip),rax	; 8040BC4D 
	DB 0x48,0x3B,0x5,0x18,0xA0,0xFF,0xFF
;/*	sbb	rax,rax	; 8040BC54 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040BC57 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040BC5A 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_EXITsubRULES+0x18C 	; 8040BC5E 
	DB 0xF,0x84,0x1,0x0,0x0,0x0
	ret		; 8040BC64 C3 
;/
;/OP1@ C@	B1 XOR		\ mov     $0x03,%cl
;/*	mov	rax,-0x08(rbp)	; 8040BC65 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040BC69 
	DB 0x48,0x8B,0x5,0x2E,0xA0,0xFF,0xFF
;/*	movzb	(rax),eax	; 8040BC70 
	DB 0xF,0xB6,0x0
;/*	xor	$-0x4F,al	; 8040BC73 
	DB 0x34,0xB1
;/*	mov	rax,-0x10(rbp)	; 8040BC75 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ C0FFFF AND C0D348 XOR OR \ rol..sar     %cl,%r_x
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040BC79 
	DB 0x48,0x8B,0x5,0x11,0xA0,0xFF,0xFF
;/*	mov	(rax),eax	; 8040BC80 
	DB 0x8B,0x0
;/*	and	$0xC0FFFF,eax	; 8040BC82 
	DB 0x25,0xFF,0xFF,0xC0,0x0
;/*	xor	$0xC0D348,eax	; 8040BC87 
	DB 0x35,0x48,0xD3,0xC0,0x0
;/*	or	-0x10(rbp),rax	; 8040BC8C 
	DB 0x48,0xB,0x45,0xF0
;/*	sub	$0x01,rax	; 8040BC90 
	DB 0x48,0x83,0xE8,0x1
;/0=	M_WL  M\ 204 DTST
;/*	sbb	rax,rax	; 8040BC94 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040BC97 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040BC9A 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_EXITsubRULES+0x23B 	; 8040BC9E 
	DB 0xF,0x84,0x70,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040BCA4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x204,eax	; 8040BCA8 
	DB 0xB8,0x4,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BCAD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BCB1 E8 A1 A1 FF FF 
;/	  C1 OP0@ 1+ C! OP1@ 1+ C@ C, \ rol..sar    $0x3,%rax
;/*	mov	rax,-0x08(rbp)	; 8040BCB6 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0xC1,-0x10(rbp)	; 8040BCBA 
	DB 0x48,0xC7,0x45,0xF0,0xC1,0x0,0x0,0x0
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040BCC2 
	DB 0x48,0x8B,0x5,0xC8,0x9F,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 8040BCC9 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),dl	; 8040BCCD 
	DB 0x8A,0x55,0xF0
;/*	mov	dl,(rax)	; 8040BCD0 
	DB 0x88,0x10
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040BCD2 
	DB 0x48,0x8B,0x5,0xC5,0x9F,0xFF,0xFF
;/*	movzb	0x01(rax),eax	; 8040BCD9 
	DB 0xF,0xB6,0x40,0x1
;/*	lea	-0x08(rbp),rbp	; 8040BCDD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Ccom	; 8040BCE1 E8 D4 8F FF FF 
;/	  OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040BCE6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 8040BCEA 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BCEF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040BCF3 E8 AF A5 FF FF 
;/	  M\ 205 DTST
;/*	mov	rax,-0x08(rbp)	; 8040BCF8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x205,eax	; 8040BCFC 
	DB 0xB8,0x5,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BD01 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BD05 E8 4D A1 FF FF 
;/	  MOPT-RULES
	call	_MOPTsubRULES	; 8040BD0A E8 E2 FC FF FF 
;/	REPEAT
;/*	jmp	_EXITsubRULES+0x14 	; 8040BD0F 
	DB 0xE9,0xD9,0xFD,0xFF,0xFF
;/
;/
;/OP1@ L@ FFFFFF AND
;/*	mov	rax,-0x08(rbp)	; 8040BD14 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040BD18 
	DB 0x48,0x8B,0x5,0x7F,0x9F,0xFF,0xFF
;/*	mov	(rax),eax	; 8040BD1F 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040BD21 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	mov	rax,-0x10(rbp)	; 8040BD26 
	DB 0x48,0x89,0x45,0xF0
;/DUP c28948 XOR			\ mov     %rax,%rdx
;/*	xor	$0xC28948,rax	; 8040BD2A 
	DB 0x48,0x35,0x48,0x89,0xC2,0x0
;/*	mov	-0x10(rbp),rdx	; 8040BD30 
	DB 0x48,0x8B,0x55,0xF0
;/SWAP FFFF AND 9248 <> AND	\ xchg    %rdx,%rax       # 80404e
;/*	mov	rax,-0x10(rbp)	; 8040BD34 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	rdx,-0x18(rbp)	; 8040BD38 
	DB 0x48,0x89,0x55,0xE8
;/*	mov	$0xFFFF,eax	; 8040BD3C 
	DB 0xB8,0xFF,0xFF,0x0,0x0
;/*	and	-0x18(rbp),rax	; 8040BD41 
	DB 0x48,0x23,0x45,0xE8
;/*	xor	$0x9248,rax	; 8040BD45 
	DB 0x48,0x35,0x48,0x92,0x0,0x0
;/*		negq	rax	; 8040BD4B 
	DB 0x48,0xF7,0xD8
;/*	sbb	rax,rax	; 8040BD4E 
	DB 0x48,0x19,0xC0
;/*	and	-0x10(rbp),rax	; 8040BD51 
	DB 0x48,0x23,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040BD55 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ FFFFFF AND 458b48 XOR	\ mov     -0x10(%rbp),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040BD59 
	DB 0x48,0x8B,0x5,0x31,0x9F,0xFF,0xFF
;/*	mov	(rax),eax	; 8040BD60 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040BD62 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458B48,eax	; 8040BD67 
	DB 0x35,0x48,0x8B,0x45,0x0
;/*	or	-0x10(rbp),rax	; 8040BD6C 
	DB 0x48,0xB,0x45,0xF0
;/ OR 0=	M_WL  M\ 202 DTST
;/*	sub	$0x01,rax	; 8040BD70 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 8040BD74 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040BD77 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040BD7A 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_EXITsubRULES+0x2EB 	; 8040BD7E 
	DB 0xF,0x84,0x40,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040BD84 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x202,eax	; 8040BD88 
	DB 0xB8,0x2,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BD8D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BD91 E8 C1 A0 FF FF 
;/           OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040BD96 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 8040BD9A 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BD9F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040BDA3 E8 FF A4 FF FF 
;/        M\ 203 DTST
;/*	mov	rax,-0x08(rbp)	; 8040BDA8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x203,eax	; 8040BDAC 
	DB 0xB8,0x3,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BDB1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BDB5 E8 9D A0 FF FF 
;/	MOPT-RULES
	call	_MOPTsubRULES	; 8040BDBA E8 32 FC FF FF 
;/	REPEAT
;/*	jmp	_EXITsubRULES+0x14 	; 8040BDBF 
	DB 0xE9,0x29,0xFD,0xFF,0xFF
;/	
;/OFF-EBP >R
;/*	mov	rax,-0x08(rbp)	; 8040BDC4 
	DB 0x48,0x89,0x45,0xF8
;/*	push	_OFFsubEBP+0x5 (%rip)	; 8040BDC8 
	DB 0xFF,0x35,0x4A,0x9D,0xFF,0xFF
;/FALSE   OP0 -EBPCLR  OP0 -EBPCLR  OP0 -EBPCLR  OP0 -EBPCLR
;/*	movq	$0x0,-0x10(rbp)	; 8040BDCE 
	DB 0x48,0xC7,0x45,0xF0,0x0,0x0,0x0,0x0
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040BDD6 
	DB 0x48,0x8D,0x5,0x6A,0x9D,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040BDDD 
	DB 0x48,0x8D,0x6D,0xF0
	call	_subEBPCLR	; 8040BDE1 E8 DE B2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BDE6 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040BDEA 
	DB 0x48,0x8D,0x5,0x56,0x9D,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040BDF1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_subEBPCLR	; 8040BDF5 E8 CA B2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BDFA 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040BDFE 
	DB 0x48,0x8D,0x5,0x42,0x9D,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040BE05 
	DB 0x48,0x8D,0x6D,0xF8
	call	_subEBPCLR	; 8040BE09 E8 B6 B2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BE0E 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040BE12 
	DB 0x48,0x8D,0x5,0x2E,0x9D,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040BE19 
	DB 0x48,0x8D,0x6D,0xF8
	call	_subEBPCLR	; 8040BE1D E8 A2 B2 FF FF 
;/R> TO OFF-EBP
;/*	mov	rax,-0x08(rbp)	; 8040BE22 
	DB 0x48,0x89,0x45,0xF8
;/*	pop	-0x10(rbp)	; 8040BE26 
	DB 0x8F,0x45,0xF0
;/*	lea	_OFFsubEBP+0x5 (%rip),rax	; 8040BE29 
	DB 0x48,0x8D,0x5,0xE8,0x9C,0xFF,0xFF
;/*	mov	-0x10(rbp),rdx	; 8040BE30 
	DB 0x48,0x8B,0x55,0xF0
;/*	mov	rdx,(rax)	; 8040BE34 
	DB 0x48,0x89,0x10
;/*	mov	-0x08(rbp),rax	; 8040BE37 
	DB 0x48,0x8B,0x45,0xF8
;/	M_WL   M\ 201 DTST
	test	rax,rax	; 8040BE3B 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040BE3E 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040BE42 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_EXITsubRULES+0x38F 	; 8040BE46 
	DB 0xF,0x84,0x1C,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040BE4C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x201,eax	; 8040BE50 
	DB 0xB8,0x1,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BE55 
	DB 0x48,C10 
	DB 0x89,0x10
;/*	mov	0x00(rbp),rax	; 8040BC12 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040BC16 
	DB 0x48,0x8D,0x6D,0x8
;/	THEN  0 TO OFF-EAX 
;/*	movq	$0x0,_OFFsubEAX+0x5 (%rip)	; 8040BC1A 
	DB 0x48,0xC7,0x5,0x0,0x9F,0xFF,0xFF,0x0,0x0,0x0,0x0
;/        M\ 20D DTST
;/*	mov	rax,-0x08(rbp)	; 8040BC25 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x20D,eax	; 8040BC29 
	DB 0xB8,0xD,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BC2E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BC32 E8 20 A2 FF FF 
;/	MOPT-RULES
	call	_MOPTsubRULES	; 8040BC37 E8 B5 FD FF FF 
;/	REPEAT
;/*	jmp	_EXITsubRULES+0x14 	; 8040BC3C 
	DB 0xE9,0xAC,0xFE,0xFF,0xFF
;/
;/	OP1 @ :-SET U< IF  BREAK
;/*	mov	rax,-0x08(rbp)	; 8040BC41 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 8040BC45 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	mov	(rax),rax	; 8040BC4A 
	DB 0x48,0x8B,0x0
;/*	cmp	_dcomasubSET+0x5 (%rip),rax	; 8040BC4D 
	DB 0x48,0x3B,0x5,0x18,0xA0,0xFF,0xFF
;/*	sbb	rax,rax	; 8040BC54 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040BC57 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040BC5A 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_EXITsubRULES+0x18C 	; 8040BC5E 
	DB 0xF,0x84,0x1,0x0,0x0,0x0
	ret		; 8040BC64 C3 
;/
;/OP1@ C@	B1 XOR		\ mov     $0x03,%cl
;/*	mov	rax,-0x08(rbp)	; 8040BC65 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040BC69 
	DB 0x48,0x8B,0x5,0x2E,0xA0,0xFF,0xFF
;/*	movzb	(rax),eax	; 8040BC70 
	DB 0xF,0xB6,0x0
;/*	xor	$-0x4F,al	; 8040BC73 
	DB 0x34,0xB1
;/*	mov	rax,-0x10(rbp)	; 8040BC75 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ C0FFFF AND C0D348 XOR OR \ rol..sar     %cl,%r_x
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040BC79 
	DB 0x48,0x8B,0x5,0x11,0xA0,0xFF,0xFF
;/*	mov	(rax),eax	; 8040BC80 
	DB 0x8B,0x0
;/*	and	$0xC0FFFF,eax	; 8040BC82 
	DB 0x25,0xFF,0xFF,0xC0,0x0
;/*	xor	$0xC0D348,eax	; 8040BC87 
	DB 0x35,0x48,0xD3,0xC0,0x0
;/*	or	-0x10(rbp),rax	; 8040BC8C 
	DB 0x48,0xB,0x45,0xF0
;/*	sub	$0x01,rax	; 8040BC90 
	DB 0x48,0x83,0xE8,0x1
;/0=	M_WL  M\ 204 DTST
;/*	sbb	rax,rax	; 8040BC94 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040BC97 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040BC9A 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_EXITsubRULES+0x23B 	; 8040BC9E 
	DB 0xF,0x84,0x70,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040BCA4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x204,eax	; 8040BCA8 
	DB 0xB8,0x4,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BCAD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BCB1 E8 A1 A1 FF FF 
;/	  C1 OP0@ 1+ C! OP1@ 1+ C@ C, \ rol..sar    $0x3,%rax
;/*	mov	rax,-0x08(rbp)	; 8040BCB6 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0xC1,-0x10(rbp)	; 8040BCBA 
	DB 0x48,0xC7,0x45,0xF0,0xC1,0x0,0x0,0x0
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040BCC2 
	DB 0x48,0x8B,0x5,0xC8,0x9F,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 8040BCC9 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),dl	; 8040BCCD 
	DB 0x8A,0x55,0xF0
;/*	mov	dl,(rax)	; 8040BCD0 
	DB 0x88,0x10
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040BCD2 
	DB 0x48,0x8B,0x5,0xC5,0x9F,0xFF,0xFF
;/*	movzb	0x01(rax),eax	; 8040BCD9 
	DB 0xF,0xB6,0x40,0x1
;/*	lea	-0x08(rbp),rbp	; 8040BCDD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Ccom	; 8040BCE1 E8 D4 8F FF FF 
;/	  OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040BCE6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 8040BCEA 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BCEF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040BCF3 E8 AF A5 FF FF 
;/	  M\ 205 DTST
;/*	mov	rax,-0x08(rbp)	; 8040BCF8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x205,eax	; 8040BCFC 
	DB 0xB8,0x5,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BD01 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BD05 E8 4D A1 FF FF 
;/	  MOPT-RULES
	call	_MOPTsubRULES	; 8040BD0A E8 E2 FC FF FF 
;/	REPEAT
;/*	jmp	_EXITsubRULES+0x14 	; 8040BD0F 
	DB 0xE9,0xD9,0xFD,0xFF,0xFF
;/
;/
;/OP1@ L@ FFFFFF AND
;/*	mov	rax,-0x08(rbp)	; 8040BD14 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040BD18 
	DB 0x48,0x8B,0x5,0x7F,0x9F,0xFF,0xFF
;/*	mov	(rax),eax	; 8040BD1F 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040BD21 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	mov	rax,-0x10(rbp)	; 8040BD26 
	DB 0x48,0x89,0x45,0xF0
;/DUP c28948 XOR			\ mov     %rax,%rdx
;/*	xor	$0xC28948,rax	; 8040BD2A 
	DB 0x48,0x35,0x48,0x89,0xC2,0x0
;/*	mov	-0x10(rbp),rdx	; 8040BD30 
	DB 0x48,0x8B,0x55,0xF0
;/SWAP FFFF AND 9248 <> AND	\ xchg    %rdx,%rax       # 80404e
;/*	mov	rax,-0x10(rbp)	; 8040BD34 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	rdx,-0x18(rbp)	; 8040BD38 
	DB 0x48,0x89,0x55,0xE8
;/*	mov	$0xFFFF,eax	; 8040BD3C 
	DB 0xB8,0xFF,0xFF,0x0,0x0
;/*	and	-0x18(rbp),rax	; 8040BD41 
	DB 0x48,0x23,0x45,0xE8
;/*	xor	$0x9248,rax	; 8040BD45 
	DB 0x48,0x35,0x48,0x92,0x0,0x0
;/*		negq	rax	; 8040BD4B 
	DB 0x48,0xF7,0xD8
;/*	sbb	rax,rax	; 8040BD4E 
	DB 0x48,0x19,0xC0
;/*	and	-0x10(rbp),rax	; 8040BD51 
	DB 0x48,0x23,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040BD55 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ FFFFFF AND 458b48 XOR	\ mov     -0x10(%rbp),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040BD59 
	DB 0x48,0x8B,0x5,0x31,0x9F,0xFF,0xFF
;/*	mov	(rax),eax	; 8040BD60 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040BD62 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458B48,eax	; 8040BD67 
	DB 0x35,0x48,0x8B,0x45,0x0
;/*	or	-0x10(rbp),rax	; 8040BD6C 
	DB 0x48,0xB,0x45,0xF0
;/ OR 0=	M_WL  M\ 202 DTST
;/*	sub	$0x01,rax	; 8040BD70 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 8040BD74 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040BD77 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040BD7A 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_EXITsubRULES+0x2EB 	; 8040BD7E 
	DB 0xF,0x84,0x40,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040BD84 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x202,eax	; 8040BD88 
	DB 0xB8,0x2,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BD8D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BD91 E8 C1 A0 FF FF 
;/           OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040BD96 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 8040BD9A 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BD9F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040BDA3 E8 FF A4 FF FF 
;/        M\ 203 DTST
;/*	mov	rax,-0x08(rbp)	; 8040BDA8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x203,eax	; 8040BDAC 
	DB 0xB8,0x3,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BDB1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BDB5 E8 9D A0 FF FF 
;/	MOPT-RULES
	call	_MOPTsubRULES	; 8040BDBA E8 32 FC FF FF 
;/	REPEAT
;/*	jmp	_EXITsubRULES+0x14 	; 8040BDBF 
	DB 0xE9,0x29,0xFD,0xFF,0xFF
;/	
;/OFF-EBP >R
;/*	mov	rax,-0x08(rbp)	; 8040BDC4 
	DB 0x48,0x89,0x45,0xF8
;/*	push	_OFFsubEBP+0x5 (%rip)	; 8040BDC8 
	DB 0xFF,0x35,0x4A,0x9D,0xFF,0xFF
;/FALSE   OP0 -EBPCLR  OP0 -EBPCLR  OP0 -EBPCLR  OP0 -EBPCLR
;/*	movq	$0x0,-0x10(rbp)	; 8040BDCE 
	DB 0x48,0xC7,0x45,0xF0,0x0,0x0,0x0,0x0
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040BDD6 
	DB 0x48,0x8D,0x5,0x6A,0x9D,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040BDDD 
	DB 0x48,0x8D,0x6D,0xF0
	call	_subEBPCLR	; 8040BDE1 E8 DE B2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BDE6 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040BDEA 
	DB 0x48,0x8D,0x5,0x56,0x9D,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040BDF1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_subEBPCLR	; 8040BDF5 E8 CA B2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BDFA 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040BDFE 
	DB 0x48,0x8D,0x5,0x42,0x9D,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040BE05 
	DB 0x48,0x8D,0x6D,0xF8
	call	_subEBPCLR	; 8040BE09 E8 B6 B2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BE0E 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040BE12 
	DB 0x48,0x8D,0x5,0x2E,0x9D,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040BE19 
	DB 0x48,0x8D,0x6D,0xF8
	call	_subEBPCLR	; 8040BE1D E8 A2 B2 FF FF 
;/R> TO OFF-EBP
;/*	mov	rax,-0x08(rbp)	; 8040BE22 
	DB 0x48,0x89,0x45,0xF8
;/*	pop	-0x10(rbp)	; 8040BE26 
	DB 0x8F,0x45,0xF0
;/*	lea	_OFFsubEBP+0x5 (%rip),rax	; 8040BE29 
	DB 0x48,0x8D,0x5,0xE8,0x9C,0xFF,0xFF
;/*	mov	-0x10(rbp),rdx	; 8040BE30 
	DB 0x48,0x8B,0x55,0xF0
;/*	mov	rdx,(rax)	; 8040BE34 
	DB 0x48,0x89,0x10
;/*	mov	-0x08(rbp),rax	; 8040BE37 
	DB 0x48,0x8B,0x45,0xF8
;/	M_WL   M\ 201 DTST
	test	rax,rax	; 8040BE3B 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040BE3E 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040BE42 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_EXITsubRULES+0x38F 	; 8040BE46 
	DB 0xF,0x84,0x1C,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040BE4C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x201,eax	; 8040BE50 
	DB 0xB8,0x1,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BE55 
	DB 0x48,C10 
	DB 0x89,0x10
;/*	mov	0x00(rbp),rax	; 8040BC12 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040BC16 
	DB 0x48,0x8D,0x6D,0x8
;/	THEN  0 TO OFF-EAX 
;/*	movq	$0x0,_OFFsubEAX+0x5 (%rip)	; 8040BC1A 
	DB 0x48,0xC7,0x5,0x0,0x9F,0xFF,0xFF,0x0,0x0,0x0,0x0
;/        M\ 20D DTST
;/*	mov	rax,-0x08(rbp)	; 8040BC25 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x20D,eax	; 8040BC29 
	DB 0xB8,0xD,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BC2E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BC32 E8 20 A2 FF FF 
;/	MOPT-RULES
	call	_MOPTsubRULES	; 8040BC37 E8 B5 FD FF FF 
;/	REPEAT
;/*	jmp	_EXITsubRULES+0x14 	; 8040BC3C 
	DB 0xE9,0xAC,0xFE,0xFF,0xFF
;/
;/	OP1 @ :-SET U< IF  BREAK
;/*	mov	rax,-0x08(rbp)	; 8040BC41 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 8040BC45 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	mov	(rax),rax	; 8040BC4A 
	DB 0x48,0x8B,0x0
;/*	cmp	_dcomasubSET+0x5 (%rip),rax	; 8040BC4D 
	DB 0x48,0x3B,0x5,0x18,0xA0,0xFF,0xFF
;/*	sbb	rax,rax	; 8040BC54 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040BC57 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040BC5A 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_EXITsubRULES+0x18C 	; 8040BC5E 
	DB 0xF,0x84,0x1,0x0,0x0,0x0
	ret		; 8040BC64 C3 
;/
;/OP1@ C@	B1 XOR		\ mov     $0x03,%cl
;/*	mov	rax,-0x08(rbp)	; 8040BC65 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040BC69 
	DB 0x48,0x8B,0x5,0x2E,0xA0,0xFF,0xFF
;/*	movzb	(rax),eax	; 8040BC70 
	DB 0xF,0xB6,0x0
;/*	xor	$-0x4F,al	; 8040BC73 
	DB 0x34,0xB1
;/*	mov	rax,-0x10(rbp)	; 8040BC75 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ C0FFFF AND C0D348 XOR OR \ rol..sar     %cl,%r_x
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040BC79 
	DB 0x48,0x8B,0x5,0x11,0xA0,0xFF,0xFF
;/*	mov	(rax),eax	; 8040BC80 
	DB 0x8B,0x0
;/*	and	$0xC0FFFF,eax	; 8040BC82 
	DB 0x25,0xFF,0xFF,0xC0,0x0
;/*	xor	$0xC0D348,eax	; 8040BC87 
	DB 0x35,0x48,0xD3,0xC0,0x0
;/*	or	-0x10(rbp),rax	; 8040BC8C 
	DB 0x48,0xB,0x45,0xF0
;/*	sub	$0x01,rax	; 8040BC90 
	DB 0x48,0x83,0xE8,0x1
;/0=	M_WL  M\ 204 DTST
;/*	sbb	rax,rax	; 8040BC94 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040BC97 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040BC9A 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_EXITsubRULES+0x23B 	; 8040BC9E 
	DB 0xF,0x84,0x70,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040BCA4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x204,eax	; 8040BCA8 
	DB 0xB8,0x4,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BCAD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BCB1 E8 A1 A1 FF FF 
;/	  C1 OP0@ 1+ C! OP1@ 1+ C@ C, \ rol..sar    $0x3,%rax
;/*	mov	rax,-0x08(rbp)	; 8040BCB6 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0xC1,-0x10(rbp)	; 8040BCBA 
	DB 0x48,0xC7,0x45,0xF0,0xC1,0x0,0x0,0x0
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040BCC2 
	DB 0x48,0x8B,0x5,0xC8,0x9F,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 8040BCC9 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),dl	; 8040BCCD 
	DB 0x8A,0x55,0xF0
;/*	mov	dl,(rax)	; 8040BCD0 
	DB 0x88,0x10
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040BCD2 
	DB 0x48,0x8B,0x5,0xC5,0x9F,0xFF,0xFF
;/*	movzb	0x01(rax),eax	; 8040BCD9 
	DB 0xF,0xB6,0x40,0x1
;/*	lea	-0x08(rbp),rbp	; 8040BCDD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Ccom	; 8040BCE1 E8 D4 8F FF FF 
;/	  OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040BCE6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 8040BCEA 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BCEF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040BCF3 E8 AF A5 FF FF 
;/	  M\ 205 DTST
;/*	mov	rax,-0x08(rbp)	; 8040BCF8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x205,eax	; 8040BCFC 
	DB 0xB8,0x5,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BD01 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BD05 E8 4D A1 FF FF 
;/	  MOPT-RULES
	call	_MOPTsubRULES	; 8040BD0A E8 E2 FC FF FF 
;/	REPEAT
;/*	jmp	_EXITsubRULES+0x14 	; 8040BD0F 
	DB 0xE9,0xD9,0xFD,0xFF,0xFF
;/
;/
;/OP1@ L@ FFFFFF AND
;/*	mov	rax,-0x08(rbp)	; 8040BD14 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040BD18 
	DB 0x48,0x8B,0x5,0x7F,0x9F,0xFF,0xFF
;/*	mov	(rax),eax	; 8040BD1F 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040BD21 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	mov	rax,-0x10(rbp)	; 8040BD26 
	DB 0x48,0x89,0x45,0xF0
;/DUP c28948 XOR			\ mov     %rax,%rdx
;/*	xor	$0xC28948,rax	; 8040BD2A 
	DB 0x48,0x35,0x48,0x89,0xC2,0x0
;/*	mov	-0x10(rbp),rdx	; 8040BD30 
	DB 0x48,0x8B,0x55,0xF0
;/SWAP FFFF AND 9248 <> AND	\ xchg    %rdx,%rax       # 80404e
;/*	mov	rax,-0x10(rbp)	; 8040BD34 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	rdx,-0x18(rbp)	; 8040BD38 
	DB 0x48,0x89,0x55,0xE8
;/*	mov	$0xFFFF,eax	; 8040BD3C 
	DB 0xB8,0xFF,0xFF,0x0,0x0
;/*	and	-0x18(rbp),rax	; 8040BD41 
	DB 0x48,0x23,0x45,0xE8
;/*	xor	$0x9248,rax	; 8040BD45 
	DB 0x48,0x35,0x48,0x92,0x0,0x0
;/*		negq	rax	; 8040BD4B 
	DB 0x48,0xF7,0xD8
;/*	sbb	rax,rax	; 8040BD4E 
	DB 0x48,0x19,0xC0
;/*	and	-0x10(rbp),rax	; 8040BD51 
	DB 0x48,0x23,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040BD55 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ FFFFFF AND 458b48 XOR	\ mov     -0x10(%rbp),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040BD59 
	DB 0x48,0x8B,0x5,0x31,0x9F,0xFF,0xFF
;/*	mov	(rax),eax	; 8040BD60 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040BD62 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458B48,eax	; 8040BD67 
	DB 0x35,0x48,0x8B,0x45,0x0
;/*	or	-0x10(rbp),rax	; 8040BD6C 
	DB 0x48,0xB,0x45,0xF0
;/ OR 0=	M_WL  M\ 202 DTST
;/*	sub	$0x01,rax	; 8040BD70 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 8040BD74 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040BD77 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040BD7A 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_EXITsubRULES+0x2EB 	; 8040BD7E 
	DB 0xF,0x84,0x40,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040BD84 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x202,eax	; 8040BD88 
	DB 0xB8,0x2,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BD8D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BD91 E8 C1 A0 FF FF 
;/           OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040BD96 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 8040BD9A 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BD9F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040BDA3 E8 FF A4 FF FF 
;/        M\ 203 DTST
;/*	mov	rax,-0x08(rbp)	; 8040BDA8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x203,eax	; 8040BDAC 
	DB 0xB8,0x3,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BDB1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BDB5 E8 9D A0 FF FF 
;/	MOPT-RULES
	call	_MOPTsubRULES	; 8040BDBA E8 32 FC FF FF 
;/	REPEAT
;/*	jmp	_EXITsubRULES+0x14 	; 8040BDBF 
	DB 0xE9,0x29,0xFD,0xFF,0xFF
;/	
;/OFF-EBP >R
;/*	mov	rax,-0x08(rbp)	; 8040BDC4 
	DB 0x48,0x89,0x45,0xF8
;/*	push	_OFFsubEBP+0x5 (%rip)	; 8040BDC8 
	DB 0xFF,0x35,0x4A,0x9D,0xFF,0xFF
;/FALSE   OP0 -EBPCLR  OP0 -EBPCLR  OP0 -EBPCLR  OP0 -EBPCLR
;/*	movq	$0x0,-0x10(rbp)	; 8040BDCE 
	DB 0x48,0xC7,0x45,0xF0,0x0,0x0,0x0,0x0
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040BDD6 
	DB 0x48,0x8D,0x5,0x6A,0x9D,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040BDDD 
	DB 0x48,0x8D,0x6D,0xF0
	call	_subEBPCLR	; 8040BDE1 E8 DE B2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BDE6 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040BDEA 
	DB 0x48,0x8D,0x5,0x56,0x9D,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040BDF1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_subEBPCLR	; 8040BDF5 E8 CA B2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BDFA 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040BDFE 
	DB 0x48,0x8D,0x5,0x42,0x9D,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040BE05 
	DB 0x48,0x8D,0x6D,0xF8
	call	_subEBPCLR	; 8040BE09 E8 B6 B2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BE0E 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040BE12 
	DB 0x48,0x8D,0x5,0x2E,0x9D,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040BE19 
	DB 0x48,0x8D,0x6D,0xF8
	call	_subEBPCLR	; 8040BE1D E8 A2 B2 FF FF 
;/R> TO OFF-EBP
;/*	mov	rax,-0x08(rbp)	; 8040BE22 
	DB 0x48,0x89,0x45,0xF8
;/*	pop	-0x10(rbp)	; 8040BE26 
	DB 0x8F,0x45,0xF0
;/*	lea	_OFFsubEBP+0x5 (%rip),rax	; 8040BE29 
	DB 0x48,0x8D,0x5,0xE8,0x9C,0xFF,0xFF
;/*	mov	-0x10(rbp),rdx	; 8040BE30 
	DB 0x48,0x8B,0x55,0xF0
;/*	mov	rdx,(rax)	; 8040BE34 
	DB 0x48,0x89,0x10
;/*	mov	-0x08(rbp),rax	; 8040BE37 
	DB 0x48,0x8B,0x45,0xF8
;/	M_WL   M\ 201 DTST
	test	rax,rax	; 8040BE3B 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040BE3E 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040BE42 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_EXITsubRULES+0x38F 	; 8040BE46 
	DB 0xF,0x84,0x1C,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040BE4C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x201,eax	; 8040BE50 
	DB 0xB8,0x1,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BE55 
	DB 0x48,C10 
	DB 0x89,0x10
;/*	mov	0x00(rbp),rax	; 8040BC12 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040BC16 
	DB 0x48,0x8D,0x6D,0x8
;/	THEN  0 TO OFF-EAX 
;/*	movq	$0x0,_OFFsubEAX+0x5 (%rip)	; 8040BC1A 
	DB 0x48,0xC7,0x5,0x0,0x9F,0xFF,0xFF,0x0,0x0,0x0,0x0
;/        M\ 20D DTST
;/*	mov	rax,-0x08(rbp)	; 8040BC25 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x20D,eax	; 8040BC29 
	DB 0xB8,0xD,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BC2E 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BC32 E8 20 A2 FF FF 
;/	MOPT-RULES
	call	_MOPTsubRULES	; 8040BC37 E8 B5 FD FF FF 
;/	REPEAT
;/*	jmp	_EXITsubRULES+0x14 	; 8040BC3C 
	DB 0xE9,0xAC,0xFE,0xFF,0xFF
;/
;/	OP1 @ :-SET U< IF  BREAK
;/*	mov	rax,-0x08(rbp)	; 8040BC41 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 8040BC45 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	mov	(rax),rax	; 8040BC4A 
	DB 0x48,0x8B,0x0
;/*	cmp	_dcomasubSET+0x5 (%rip),rax	; 8040BC4D 
	DB 0x48,0x3B,0x5,0x18,0xA0,0xFF,0xFF
;/*	sbb	rax,rax	; 8040BC54 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040BC57 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040BC5A 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_EXITsubRULES+0x18C 	; 8040BC5E 
	DB 0xF,0x84,0x1,0x0,0x0,0x0
	ret		; 8040BC64 C3 
;/
;/OP1@ C@	B1 XOR		\ mov     $0x03,%cl
;/*	mov	rax,-0x08(rbp)	; 8040BC65 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040BC69 
	DB 0x48,0x8B,0x5,0x2E,0xA0,0xFF,0xFF
;/*	movzb	(rax),eax	; 8040BC70 
	DB 0xF,0xB6,0x0
;/*	xor	$-0x4F,al	; 8040BC73 
	DB 0x34,0xB1
;/*	mov	rax,-0x10(rbp)	; 8040BC75 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ C0FFFF AND C0D348 XOR OR \ rol..sar     %cl,%r_x
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040BC79 
	DB 0x48,0x8B,0x5,0x11,0xA0,0xFF,0xFF
;/*	mov	(rax),eax	; 8040BC80 
	DB 0x8B,0x0
;/*	and	$0xC0FFFF,eax	; 8040BC82 
	DB 0x25,0xFF,0xFF,0xC0,0x0
;/*	xor	$0xC0D348,eax	; 8040BC87 
	DB 0x35,0x48,0xD3,0xC0,0x0
;/*	or	-0x10(rbp),rax	; 8040BC8C 
	DB 0x48,0xB,0x45,0xF0
;/*	sub	$0x01,rax	; 8040BC90 
	DB 0x48,0x83,0xE8,0x1
;/0=	M_WL  M\ 204 DTST
;/*	sbb	rax,rax	; 8040BC94 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040BC97 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040BC9A 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_EXITsubRULES+0x23B 	; 8040BC9E 
	DB 0xF,0x84,0x70,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040BCA4 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x204,eax	; 8040BCA8 
	DB 0xB8,0x4,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BCAD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BCB1 E8 A1 A1 FF FF 
;/	  C1 OP0@ 1+ C! OP1@ 1+ C@ C, \ rol..sar    $0x3,%rax
;/*	mov	rax,-0x08(rbp)	; 8040BCB6 
	DB 0x48,0x89,0x45,0xF8
;/*	movq	$0xC1,-0x10(rbp)	; 8040BCBA 
	DB 0x48,0xC7,0x45,0xF0,0xC1,0x0,0x0,0x0
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040BCC2 
	DB 0x48,0x8B,0x5,0xC8,0x9F,0xFF,0xFF
;/*	lea	0x01(rax),rax	; 8040BCC9 
	DB 0x48,0x8D,0x40,0x1
;/*	mov	-0x10(rbp),dl	; 8040BCCD 
	DB 0x8A,0x55,0xF0
;/*	mov	dl,(rax)	; 8040BCD0 
	DB 0x88,0x10
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040BCD2 
	DB 0x48,0x8B,0x5,0xC5,0x9F,0xFF,0xFF
;/*	movzb	0x01(rax),eax	; 8040BCD9 
	DB 0xF,0xB6,0x40,0x1
;/*	lea	-0x08(rbp),rbp	; 8040BCDD 
	DB 0x48,0x8D,0x6D,0xF8
	call	_Ccom	; 8040BCE1 E8 D4 8F FF FF 
;/	  OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040BCE6 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 8040BCEA 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BCEF 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040BCF3 E8 AF A5 FF FF 
;/	  M\ 205 DTST
;/*	mov	rax,-0x08(rbp)	; 8040BCF8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x205,eax	; 8040BCFC 
	DB 0xB8,0x5,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BD01 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BD05 E8 4D A1 FF FF 
;/	  MOPT-RULES
	call	_MOPTsubRULES	; 8040BD0A E8 E2 FC FF FF 
;/	REPEAT
;/*	jmp	_EXITsubRULES+0x14 	; 8040BD0F 
	DB 0xE9,0xD9,0xFD,0xFF,0xFF
;/
;/
;/OP1@ L@ FFFFFF AND
;/*	mov	rax,-0x08(rbp)	; 8040BD14 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	_OP1load+0x5 (%rip),rax	; 8040BD18 
	DB 0x48,0x8B,0x5,0x7F,0x9F,0xFF,0xFF
;/*	mov	(rax),eax	; 8040BD1F 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040BD21 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	mov	rax,-0x10(rbp)	; 8040BD26 
	DB 0x48,0x89,0x45,0xF0
;/DUP c28948 XOR			\ mov     %rax,%rdx
;/*	xor	$0xC28948,rax	; 8040BD2A 
	DB 0x48,0x35,0x48,0x89,0xC2,0x0
;/*	mov	-0x10(rbp),rdx	; 8040BD30 
	DB 0x48,0x8B,0x55,0xF0
;/SWAP FFFF AND 9248 <> AND	\ xchg    %rdx,%rax       # 80404e
;/*	mov	rax,-0x10(rbp)	; 8040BD34 
	DB 0x48,0x89,0x45,0xF0
;/*	mov	rdx,-0x18(rbp)	; 8040BD38 
	DB 0x48,0x89,0x55,0xE8
;/*	mov	$0xFFFF,eax	; 8040BD3C 
	DB 0xB8,0xFF,0xFF,0x0,0x0
;/*	and	-0x18(rbp),rax	; 8040BD41 
	DB 0x48,0x23,0x45,0xE8
;/*	xor	$0x9248,rax	; 8040BD45 
	DB 0x48,0x35,0x48,0x92,0x0,0x0
;/*		negq	rax	; 8040BD4B 
	DB 0x48,0xF7,0xD8
;/*	sbb	rax,rax	; 8040BD4E 
	DB 0x48,0x19,0xC0
;/*	and	-0x10(rbp),rax	; 8040BD51 
	DB 0x48,0x23,0x45,0xF0
;/*	mov	rax,-0x10(rbp)	; 8040BD55 
	DB 0x48,0x89,0x45,0xF0
;/OP0@ L@ FFFFFF AND 458b48 XOR	\ mov     -0x10(%rbp),%rax
;/*	mov	_OP0load+0x5 (%rip),rax	; 8040BD59 
	DB 0x48,0x8B,0x5,0x31,0x9F,0xFF,0xFF
;/*	mov	(rax),eax	; 8040BD60 
	DB 0x8B,0x0
;/*	and	$0xFFFFFF,eax	; 8040BD62 
	DB 0x25,0xFF,0xFF,0xFF,0x0
;/*	xor	$0x458B48,eax	; 8040BD67 
	DB 0x35,0x48,0x8B,0x45,0x0
;/*	or	-0x10(rbp),rax	; 8040BD6C 
	DB 0x48,0xB,0x45,0xF0
;/ OR 0=	M_WL  M\ 202 DTST
;/*	sub	$0x01,rax	; 8040BD70 
	DB 0x48,0x83,0xE8,0x1
;/*	sbb	rax,rax	; 8040BD74 
	DB 0x48,0x19,0xC0
	test	rax,rax	; 8040BD77 48 85 C0 
;/*	mov	-0x08(rbp),rax	; 8040BD7A 
	DB 0x48,0x8B,0x45,0xF8
;/*	jz	_EXITsubRULES+0x2EB 	; 8040BD7E 
	DB 0xF,0x84,0x40,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040BD84 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x202,eax	; 8040BD88 
	DB 0xB8,0x2,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BD8D 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BD91 E8 C1 A0 FF FF 
;/           OP1 OPexcise
;/*	mov	rax,-0x08(rbp)	; 8040BD96 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x44C539,eax	; 8040BD9A 
	DB 0xB8,0x39,0xC5,0x44,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BD9F 
	DB 0x48,0x8D,0x6D,0xF8
	call	_OPexcise	; 8040BDA3 E8 FF A4 FF FF 
;/        M\ 203 DTST
;/*	mov	rax,-0x08(rbp)	; 8040BDA8 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x203,eax	; 8040BDAC 
	DB 0xB8,0x3,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BDB1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_DTST	; 8040BDB5 E8 9D A0 FF FF 
;/	MOPT-RULES
	call	_MOPTsubRULES	; 8040BDBA E8 32 FC FF FF 
;/	REPEAT
;/*	jmp	_EXITsubRULES+0x14 	; 8040BDBF 
	DB 0xE9,0x29,0xFD,0xFF,0xFF
;/	
;/OFF-EBP >R
;/*	mov	rax,-0x08(rbp)	; 8040BDC4 
	DB 0x48,0x89,0x45,0xF8
;/*	push	_OFFsubEBP+0x5 (%rip)	; 8040BDC8 
	DB 0xFF,0x35,0x4A,0x9D,0xFF,0xFF
;/FALSE   OP0 -EBPCLR  OP0 -EBPCLR  OP0 -EBPCLR  OP0 -EBPCLR
;/*	movq	$0x0,-0x10(rbp)	; 8040BDCE 
	DB 0x48,0xC7,0x45,0xF0,0x0,0x0,0x0,0x0
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040BDD6 
	DB 0x48,0x8D,0x5,0x6A,0x9D,0xFF,0xFF
;/*	lea	-0x10(rbp),rbp	; 8040BDDD 
	DB 0x48,0x8D,0x6D,0xF0
	call	_subEBPCLR	; 8040BDE1 E8 DE B2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BDE6 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040BDEA 
	DB 0x48,0x8D,0x5,0x56,0x9D,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040BDF1 
	DB 0x48,0x8D,0x6D,0xF8
	call	_subEBPCLR	; 8040BDF5 E8 CA B2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BDFA 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040BDFE 
	DB 0x48,0x8D,0x5,0x42,0x9D,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040BE05 
	DB 0x48,0x8D,0x6D,0xF8
	call	_subEBPCLR	; 8040BE09 E8 B6 B2 FF FF 
;/*	mov	rax,-0x08(rbp)	; 8040BE0E 
	DB 0x48,0x89,0x45,0xF8
;/*	lea	_LASTsubHERE+0xD (%rip),rax	; 8040BE12 
	DB 0x48,0x8D,0x5,0x2E,0x9D,0xFF,0xFF
;/*	lea	-0x08(rbp),rbp	; 8040BE19 
	DB 0x48,0x8D,0x6D,0xF8
	call	_subEBPCLR	; 8040BE1D E8 A2 B2 FF FF 
;/R> TO OFF-EBP
;/*	mov	rax,-0x08(rbp)	; 8040BE22 
	DB 0x48,0x89,0x45,0xF8
;/*	pop	-0x10(rbp)	; 8040BE26 
	DB 0x8F,0x45,0xF0
;/*	lea	_OFFsubEBP+0x5 (%rip),rax	; 8040BE29 
	DB 0x48,0x8D,0x5,0xE8,0x9C,0xFF,0xFF
;/*	mov	-0x10(rbp),rdx	; 8040BE30 
	DB 0x48,0x8B,0x55,0xF0
;/*	mov	rdx,(rax)	; 8040BE34 
	DB 0x48,0x89,0x10
;/*	mov	-0x08(rbp),rax	; 8040BE37 
	DB 0x48,0x8B,0x45,0xF8
;/	M_WL   M\ 201 DTST
	test	rax,rax	; 8040BE3B 48 85 C0 
;/*	mov	0x00(rbp),rax	; 8040BE3E 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x08(rbp),rbp	; 8040BE42 
	DB 0x48,0x8D,0x6D,0x8
;/*	jz	_EXITsubRULES+0x38F 	; 8040BE46 
	DB 0xF,0x84,0x1C,0x0,0x0,0x0
;/*	mov	rax,-0x08(rbp)	; 8040BE4C 
	DB 0x48,0x89,0x45,0xF8
;/*	mov	$0x201,eax	; 8040BE50 
	DB 0xB8,0x1,0x2,0x0,0x0
;/*	lea	-0x08(rbp),rbp	; 8040BE55 
	DB 0x48,C10 
	DB 0x89,0x10
;/*	mov	0x00(rbp),rax	; 8040BC12 
	DB 0x48,0x8B,0x45,0x0
;/*	lea	0x0